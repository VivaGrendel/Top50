%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: free-sample-lcd-numbers-www.markinns.com.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Mark Inns
%%CreationDate: 01/01/2010
%%BoundingBox: 0 0 418 491
%%HiResBoundingBox: 0 0 417.0967 490.8906
%%CropBox: 0 0 417.0967 490.8906
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 112 128 8%%BeginData: 30988 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45585258527C527C527C527C527D587D587D7C7D7C7D7C7D7C7D7C7D%7C7D7D7D7C837D7D7DA77D7D7DA77D837DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77D837DA77D837DA77D7D7D837D7D7C7D7D7D7C7D7C7D%7C7D7C7D7C7D7C7D587D587C527C527C527C527C527C517DFF5152515251%585252527C527C527C527C527D587C527D7C7D587D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7D7D7C%7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D587D587C527D52%7C527C527C527C525851585152515252FF52517C5258527C527C527C587C%527D7C7D587D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D7D7DA7%7D837DA77D837DA77D837DA77D837DA77D837DA77D837DA77D7D7DA77D7D%7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7C527D587C527C%527C527C5258517DFF515251525152517C5258527C527C527C527C527D58%7C527D7C7D587D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C%7D7D7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D587D587C527D527C527C527C527C5258527C52525152515252%FF58527C527C527C527C527D587D587D7C7D7C7D7C7D7C7D7C7D7C7D7D7D%7C837D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D7D7C837D7D7C7D7C7D%7C7D7C7D7C7D7C7D587D587C527C527C527C527C517DFF51525158525252%7C527C527C527C527D587C527D7C7D587D7C7D7C7D7C7D7C7D7C7D7C7D7D%7D7C7D7D7D7CFD047D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7C83%7D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7C527D527C%527C527C527C52525158515252FF585258527C527C527C587C527D7C7D58%7D7C7D7C7D7C7D7C7D7D7D7C7D7D7D7C837D7D7DA77D837DA77D837DA77D%A77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D7D7D%A77D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D587D7C7C527D587C527C52%7C527C517DFF51525152517C5258527C527C527C527C527D587C527D7C7D%587D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C7D7D7D7C7D7D7D7C83%7D7D7C837D7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D%7C7D7C7D587D7C7C527D527C527C527C527C5258527C5252515252FF7C52%7C527C527C527D587D587D7C7D7C7D7C7D7C7D7D7D7CFD047DA77D837DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77D837DA77D7D7D837D7D7C7D7D7D7C7D%7C7D7C7D7C7D587D587C527C527C527C527DFF51585252527C527C527C52%7C527D587C527D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7CFD047D83%7D7D7DA77D7D7DA77D7D7DA77D7D7DA77D7D7DA77D7D7DA77D7D7D837D7D%7C837D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7C527D527C527C%527C527C5252515258FF58527C527C527C527C527D7C7D587D7C7D7C7D7C%7D7C7D7D7D7CFD047DA77D7D7DA77D837DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D7D%7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D587D7C7C527D587C527C527C517D%FF515251585258527C527C527C527C527D587C527D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7D7D7C7D7D7D7C837D7D7D837D7D7D837D7D7D837D7D7D%837D7D7D837D7D7C837D7D7C7D7D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C%7D587D7C7D527D527C527C527C527C52585158525252FF7C527C527C527D%587D587D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D837DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77D7D7D837D7D7C7D7D7D7C7D7C7D%7C7D7C7D587D587C527C527C527DFF5252517C527C527C527C527D587C52%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D7D7DA77D%7D7DA77D7D7DA77D7D7DA77D7D7DA77D7D7DA77D7D7DA77D7D7DA77D7D7D%837D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7C527D527C527C52%7C527C525252FF7C527C527C527C527D7C7D587D7C7D7C7D7C7D7C7D7D7D%7C837D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D7D%7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D587D7C7C527D527C527C527DFF51%585258527C527C527C527C527D587C527D7C7D7C7D7C7D7C7D7C7D7CFD04%7DA77D7D7CFD047DA77DA77DA77DA77DA77DA77DA77D7D7DA77D7D7DA77D%A77DA77DA77DA77DA7FD047D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D%7C7D527D527C527C527C527C5258515258FF7C527C527D587C587D7C7D7C%7D7C7D7C7D7D7D7C837D7D7C7D7D7D7CFD057D52A77DA77DA77DA7525251%52525251FD04527D7DA77DA87DA77D7D5152515252525152515252A77DA7%7DA77DA77D837D7D7C7D7D7D7C7D7C527C837D7D7C7D7C7D7C7D7C7D587D%587C527C527DFF517C527C527C527C527D587C527D7C7D7C7D7C7D7C7D58%7C527D587C527D7C7CF8277D7D7DA77DA77C27F8F8F827FD04F8262727A7%7D837DA77D7D2704F8F8F827F8F8F82727277CA77D7D7DA77D7D7C7D587C%527D587C5852F87C7C7D7C7D587D7C7C527D527C527C527C52587CFF7C52%7C527C527D7C7D587D7C7D7C7D7C7D7C7D7D7D7C7D7C7D7C7D7D7D7CA751%2651A87DA77DA77DA77C7C5152515252525152F8527DA77DA77DA77D7D52%52515251525152272727A77DA77DA77D7D27527C7D7D7D7C7D7D7CF8277C%7D7C7D7C7D7C7D7C7D587D7C7C527C527C527DFF5252527C527C527C527C%527D587C527D7C7D7C7D7C7D527D7C7D7C7D7D7D7C27F8527D837D7D7DA7%7D7D7CA77DA77DA77DA727F851A77DA77D837D7D7C7D7DA77DA77DA77D52%F8527D7D7D837D835227F87D7D7D7C7D7C8351F8277D7C7D587D7C7C527D%527C527C527C527C525252FF7C527C587C527D7C7D7C7D7C7D7C7D7D7D7C%837D7D7C7D7D837DA77DA77DA7272752A87DA77DA77D837CA77DA77DA87D%A87D52F87CA7A87DA77DA87D7D7DA87DA77DA87DA8272752A87DA77DA77D%7DF8277DA77DA77DA77D52F8527D7D7C7D7D7D7C7D7C7D7C7D7C7D527D58%7C527DFF5258527C527C527C527C527D7C7D587D7C7D7C7D7C7D527D7D7D%7C7D7D7D5827F87D7DA77D7D7DA77C7D7CA77D837DA77D7D262752A77DA7%7DA77D7D7C7D7DA77D837DA77D27F87C7D7D7DA77DA7512727FD057D7C7D%27F827837C7D7C7D7C7D587D587C527D527C527C525258FF7C527C527D58%7D587D7C7D7C7D7C7D7C7D7D7D7C7D7C7D7CA77D837DA77D7DF8277DA77D%A77DA77D7D7C837DA77DA77DA87D27267DA7A77DA87DA77D7D7DA77DA77D%A77DA727277CA87DA77DA78352F8527DA77DA77D837D27F858FD047D7C7D%7C7D7C7D7C7D587D7C7C527C527DFF517C527C527C527C527D587C527D7C%7D7C7D7C7D7C7D587D7C7D7D7D7CA752F827FD047DA77D7D7C7D7D837DA7%7D837D7DF8277DA77DA77DA77D7D587D7D837DA77DA75227F87D7DA77D7D%7DA727F827A77D7D7C7D7D7DF827527D7C7D7C7D587D7C7C527D527C527C%527C52587CFF7C527C527D7C7D7C7D7C7D7C7D7C7D7C837D7D7D837C7D7D%A77DA77DA78352F8527DA77DA77DA77D7D7DA77DA8A7A87DA8522727A883%A77DA87DA77D837DA87DA8A7A8A77DF8277DA87DA77DA87D2DF87DA7A77D%A77DA77C27277D7D837D7D7C7D7C7D7C7D7C7D7C7D7C7D527D527DFF527C%527C527C527C527D7C7D587D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7CA751F8%27A77D7D7DA77D7D7C7D7C7D7C7D7C7D7C52F8517DA77DA77DA77D7D7C7D%7C7D7C7D7C7D522727A77DA7FD047DF827527D7C7D527D7C52F8277C7D7C%7D7C7D7C7D7C7D527D587C527C527C527C7CFF7C527C587C527D7C7D7C7D%7C7D7C7D7D7D7C837D7D7C7D7C7D7C7D7C7D7C7D527D7DA77DA77DA7837D%FD042726FD0427527CA87DA87DA77DA87C51F827272726FD04277D83A77D%A77DA77D522727F8272727F827275252A77D7D7C7D7D7D7C7D7C7D7C7D7C%7D527D587C527DFF527C527C527C527C527C527D7C7D587D7C7D7C7D7C7D%527D587D527D7C7D52527C837DA7FD047D2727F827F827F827F82752A77D%A77DA77DA77D7D2727F827F827F827272752A77D7D7DA77D837C27F827F8%27F827F827277C7C7D7C7D7C7D7C7D587D587C527D527C527C525258FF7C%527D7C7D587D7C7D7C7D7C7D7CFD047DA77D7D7C837D837DA77DA77C27F8%7D7DA77DA77DA8272752A77D7D7DA77D7D7DA77DA87DA883A87DA77D837D%A77D7D7DA77D52F87DA7A77DA87DA7FD047D7C7D7D7D7C7D272751A77D7D%7D837D7D7C7D7C7D7C7D7C7D587D7C7C527DFF527C527C527C527D7C7D58%7D7C7D7C7D7C7D7C7D7C7C7C837D7D7DA77D7CF8277DA77DA77DA77D27F8%527DA77DA77DA87D7D7CA77DA77DA77DA77C7D7DA77DA87DA77DA7272752%A87D837DA77D7D587D7DA77DA77D837D27F8527D7D7C7D7C7D7C7D7C7D7C%7D527D587C527C52587CFF7C587C527D7C7D7C7D7C7D7C7D7C7D7C7D7D7D%7C7D7C7D7DA77DA77DA8522727A77DA77DA77DA727277CA87DA87DA77DA7%7D7D7DA87DA77DA87D7D7CA783A77DA87DA87C27277D7DA77DA77DA77D7D%7DA77DA77DA77D7D26277CA77D837D7D7C7D7D7D7C7D7C7D7C7D7C7D527D%527DFF527C527C527C527C527D7C7D587D7C7D7C7D7C7D527D7C7D7CFD04%7D52F8517DA77D7D7DA77C27F87D7DA77DA77DA77C7D7CA77DA77DA77DA7%7C7D7DA77DA77DA77D7CF8277DA77DA77D837D7D7C7D7D837D7D7CA75227%F87D7D7D7C7D7C7D7C7D7C7D527D587C527C527C527C7CFF7D587D587D7C%7D7C7D7C7D7CFD047DA77D837C7D7CA77DA77DA77DA8512751A87DA77DA8%A77DF8277DA87DA883A87DA77DA77DA883A87DA87D7D7DA8A7A87DA883A8%522727A87DA87DA77DA77D7D7DA87DA77DA77D7CF82D7DA77DA77D7D7D83%7D7D7C7D7C7D7C7D7C7D587D527DFF527C527C527D587C527D7C7D7C7D7C%7D7C7D7D7D52FD047DA77D7D7D27F8527DA77DA77DA852F827A77DA77DA7%7DA77C7D7DA77DA77DA77DA77C7D7DA77DA77DA77D52F8527DA77DA77DA7%7D7D7C7D7DA77D7D7DA752F827837D7D7C7D7C7D7C7D7C7D587D7C7C527D%527C527C7CFF7C527D7C7D587D7C7D7C7D7C7D7CFD047DA77C7D7CA77DA7%7DA77D83272758A77DA77DA77D52F852A7A8A7A883A8A77D7CA7A7A77DA8%83A87D837DA883A8A7A883A8272752A87DA77DA87DA77C7D7DA77DA77DA7%7D52F8527DA77D7D7D837D7D7C7D7C7D7C7D7C7D587D7C7C527DFF527C52%7C527C527D587D587D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C27F87D7D%837DA77DA7512727522752275227527C7D7DA77DA77DA77D7D5252275227%5227525127F87C7DA77DA77DA77D7D7C7D7C7D7C7D7C7D27F851A77C7D7C%7D7C7D7C7D7C7D7C7D527D527C527C52587CFF7C527D7C7D7C7D7C7D7C7D%7D7D7C837D7D7DA77C7D7C7D7C7D7C7D7C7D27277DA77DA87DA77D520427%F827F827F827F87D7DA8A7A87DA8A7A85127F827F827F827F82727277CA8%7DA77DA87DA77C7D7C7D7C7D7C7D7C7CF87C7DA77D837DA77D7D7C837D7D%7C7D7C7D7C7D7C7D5283FF527C527C527C527D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7D7D52A77DA77DA77DA75252515227525152275252%A77DA77DA77DA77D7D2752515227525152275252837DA77DA77DA77D7D7C%7D7C7D7C7D7C7D7C527C7D7C7D7D7D7C7D7C7D7C7D7C7D587D7C7C527D52%7C7CFF7D587D587D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77DA77DA77DA7%7DA77DA87DA77DA77DA87DA883A8A7A883A8A7A8A7A883A77DA883A87DA8%A7A883A8A7A883A8A7A87DA883A77DA87DA77DA87DA77DA77DA77DA77DA7%7DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D7C7D587D527DFF527C527C52%7D587C527D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D7D7DA77D%A77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D%A77DA77DA77DA77DA77DA77DA77D837DA77D7D7D837D7D7C7D7D7D7C7D7C%7D7C7D7C7D587D7C7C527D527C527C7CFF7D7C7D7C7D7C7D7C7D7C7D7C83%7D7D7DA77DA77DA77DA77DA77DA77DA77DA77DA87DA77DA87DA87DA883A8%7DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA883A87DA8%7DA77DA87DA77DA87DA77DA77DA77DA77DA77DA77D837DA77D7D7C7D7D7D%7C7D7C7D7C7D587DFF527C527C527D7C7D587D7C7D7C7D7C7D7C7D7D7D7C%837D7D7DA77D7D7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D%A77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D%A77D7D7DA77D7D7D837D7D7C7D7C7D7C7D7C7D7C7D7C7D527D587C527C7C%FF7C527D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D837DA77DA77DA77DA7%7DA77DA77DA87DA77DA87DA77DA883A77DA883A87DA883A87DA8A7A87DA8%83A87DA883A77DA883A77DA87DA77DA87DA77DA87DA77DA77DA77DA77DA7%7DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D7C7D527DFF527C527C527C52%7D7C7D587D7C7D7C7D7C7D7CFD047DA77DA77DA77DA77DA87DA77DA77DA7%7DA77DA77DA883A87DA8A7A87DA87DA77DA77DA77DA77DA87DA8A7A87DA8%83A77DA87DA77DA77D837DA77DA77DA77DA77DA77DA77D7D7C7D7C7D7C7D%7C7D7C7D527D587C527C527C7CFF7D587D7C7D7C7D7C7D7CFD047DA77D83%7DA77DA77D7D5252527C5252527C527D7DA87DA87DA883A87C7C527C527C%527C52587CA87DA8A7A87DA8A77D527C527C527C527C527D7CA77DA87DA7%7DA87C52527C5252527C5252527D7DA77DA77D7D7D837D7D7C7D7C7D7C7D%7C7D5283FF527C527D587C587D7C7D7C7D7C7D7C7D7D7D7C837D7DF826F8%F8F827F8F8F827587D7DA77DA77DA87D27F827F8F8F827F8F8F87D7DA77D%A77DA77DA727F8F827F8F8F827F82727277DA77DA77DA77D27F8F8F827FD%05F827277D7D7D7C7D7C7D7C7D7C7D7C7D7C7C527D527C7CFF7D7C7D587D%7C7D7C7D7C7D7CFD047DA77D837DA75851275227522752275252837DA77D%A87DA77D7D2752275227522752277D7DA7A7A87DA8A7A87D7D5252275227%522752512727A883A77DA8A77D27522752275227522752F8527DA77D7D7D%837D7D7C7D7C7D7C7D7C7D587D587DFF527C527C527D587D587D7C7D7C7D%7C7D7CFD047D52F8517DA77D837DA77D7D587D7DA77DA77DA752F827A77D%A77DA77DA87D7D7CA77DA77DA77D837C837DA77DA77DA77D52F8527DA77D%A77DA752F827A77D837DA77DA727F851A77C7D7C7D7C7D7C7D7C7D7C7D52%7D527C527C7CFF7D7C7D7C7D7C7D7C7D7D7D7C837D837DA77DA77DA85127%51A87DA77DA87DA77D7D7DA87DA883A8A77CF852A7A8A7A883A8A7A77CA7%A7A87DA8A7A87D837DA883A8A7A87DA8512752A883A87DA8A752F852A7A7%7DA87DA77D51F87C7DA77DA77DA77D7D7C837D7D7C7D7C7D7C7D587DFF52%7D527C527D7C7D7C7D7C7D7C7D7C7D7CFD047D51F8527DA77D837DA77D7D%7CA77DA77DA77DA7272751A77DA77DA77DA77C7D7DA87DA77DA77D7D7C83%7DA77DA77DA77D27F87C7DA77DA77DA827F851A77D837DA77D7DF8275283%7C7D7D7D7C7D7C7D7C7D7C7D587D587C527C7CFF7C527D7C7D7C7D7C7D7C%7D7D7D7C837D7D7DA77D7D272752A77DA77DA77DA77D7D7DA87DA77DA8A7%52F87CA7A87DA8A7A87D7D7DA77DA8A7A87DA87D7D7DA8A7A87DA8A7A727%277CA87DA87DA77D52F87C83A77DA77DA87C27F87D7D837DA77D7D7C837D%7D7C7D7C7D7C7D7C7D527DFF527C527D527C527D7C7D7C7D7C7D7C7D7C7D%7CA77C27F8FD047DA77DA77C7D7CA77DA77DA77DA7272652A87DA77DA77D%837C7D7DA77DA77DA77D7D7C7D7DA77DA77DA87C27F87D7DA77DA77D7D26%2752A77DA77D7D7D7CF8277C837D7D7C7D7C7D7C7D7C7D587D7C7C527D52%7C7CFF7D7C7D7C7D7C7D7C7D7C837D7D7DA77DA77DA77D7DF8277DA77DA8%7DA77DA77C837DA883A87DA87D27F8A7A7A883A8A7A87D837DA87DA8A7A8%83A87D7D7DA8A7A87DA8A77DF8517DA87DA883A87D27277D83A87DA77DA8%522727A77DA77DA77D837DA77D7D7C7D7C7D7C7D7C7D52A7FF527C527D7C%7D587D7C7D7C7D7C7D7C7D7D7D7CA752F827837D7D7DA77D837D7D7DA77D%A77DA77D7DF8277DA87DA77DA77D837C7D7DA77DA87DA77D7D7CA77DA77D%A77DA852F827A87DA77DA77D7CF8277DA77DA77D7D7D52F8517DA77D7D7C%7D7C7D7C7D7C7D7C7D7C7D527D587C7CFF7D7C7D7C7D7C7D7C7D7D7D7C83%7D7D7DA77D837D7D272727512727275127527CA87DA77DA87DA87D522727%275127272751277D7DA8A7A87DA8A7A77DA8A7A87DA8A7A87DA8527C83A8%83A77DA87D522751272727512727275252A77DA77D837DA77D7D7C7D7D7D%7C7D7C7D7C7D587DFF527C527C527D7C7D587D7C7D7C7D7C7D7C7D7D7D7C%52F827F827F827F827F8527DA77DA77DA77D7D2727F827F827F827F82727%7D7DA77DA77DA77D7D7DA77DA77DA77DA77D7D7CA77DA77DA77D7D2727F8%27F827F827F827277D7D7D7C7D7C7D7C7D7C7D7C7D7C7D527D587C527C7C%FF7D7C7D7C7D7C7D7CFD047DA77D837DA77DA77D837D7D527D7C7D7C7D58%27F87DA7A87DA8A7A82727527D7C7D7D7D7C7D272752A8A7A87DA8A7A77C%A7A7A87DA8A7A88352F87CA7A883A87DA82D27527D7C7D7C7D7C7D272758%A77DA77DA77DA77D7D7D837D7D7C7D7C7D7C7D7C7DFF527D587C527D7C7D%7C7D7C7D7C7D7C7D7C7D7D7D7C7D7DA77DA77DA77D7DF8277DA77DA77DA7%7D27F87CA7A77DA883A87D27267D7DA87DA77DA87D7D7DA87DA77DA77D7D%26277CA77DA77DA77D51F852A7A87DA77DA87C27F8FD077D7C7D7C7D7C7D%7C7D587D7C7C527C7CFF7D587D7C7D7C7D7C7D7CFD047DA77D837DA77D7D%7CA77DA77DA77DA8522727A77DA87DA77DA7272758A8A7A87DA8A77DF827%7DA87DA8A7A87DA77DA77DA8A7A87DA87D272683A7A77DA8A7A727277CA8%7DA77DA77D7DF8277DA77DA77DA77D7D7D837D7D7C7D7C7D7C7D7C7D5283%FF527C527D587C527D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7CA77D7D7DA77D%52F8527DA77DA77DA77C27F87D7DA77DA77DA8522627A77DA77DA77DA77C%7D7DA77DA77DA77D7DF8277DA77DA77DA77C27F87D7D837DA77DA751F827%FD057D7C7D7C7D7C7D7C7D587D7C7D527D527C7CFF7D7C7D7C7D7C7D7C7D%7C837D7D7DA77DA77DA77D7D7CA77DA77DA87DA8512752A87DA883A8A77D%26277DA8A7A87DA8A752F852A7A87DA8A7A87DA77DA883A8A7A87DA85227%27A8A7A87DA8A77DF8277DA87DA87DA77D52F8527DA77DA77DA77D837DA7%7D7D7C7D7D7D7C7D7C7D52A7FF527C527D7C7D587D7C7D7C7D7C7D7CFD05%7D7C7D7DA77D837DA77D27F85283A77DA77DA7522727A77DA77DA77DA827%F851A87DA77DA87DA77C7D7DA77DA87DA77D52F8527DA77DA77DA8522727%A77DA77DA77DA7272751A77D837D7D7C7D7D7D7C7D7C7D7C7D7C7D527D58%7C7CFF7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77DA77C7D7DA77DA8A7A8%A7A8272752A87DA77DA8A752F852A8A8A7A8A7A8A752F87DA7A8A7A87DA8%7D7D7DA8A7A87DA8A7A8272752A87DA883A7A752F852A7A8A7A87DA87D27%F87C83A77DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D587DFF527C527C52%7D7C7D587D7C7D7C7D7C7D7C7D7D7DFD05527C52525227F87D7DA77DA77D%A75127277D527C527C527C272752A87DA77DA77D837C7D7DA77D7D7DA77D%27F87C7DA77DA77DA727272D7C527C5252527C262752A77D7D7C7D7C7D7C%7D7C7D7C7D7C7D527D587C527C7CFF7D7C7D7C7D7C7D7CFD047DA77D837D%A77DA72727F827F827F827F82727277DA883A87DA8A7522627F827F827F8%272652277DA7A8A7A87DA87D7D7D837D7D7C837DA752277DA87DA8A7A87D%522727F827F827F8272751F8837DA77DA77DA77DA77D7D7D837D7D7C7D7C%7D7C7D7C7DFF527D587C527D7C7D7C7D7C7D7C7D7C7D7C837D5227512751%27522751275252A77DA77DA77DA85227275227512752275151527DA77DA8%7DA77DA77D7D7C7D7D7D7C7D7D7D51A77DA77DA77DA75251275127522751%275251527DA77D7D7D837D7D7C7D7C7D7C7D7C7D587D7C7C527C7DFF7D58%7D7C7D7C7D7C7D7CFD047DA77D837DA77DA77DA77DA77DA87DA77DA87DA7%7DA87DA77DA8A7A87DA8A7A87DA8A7A8A7A8A7A87DA8A7A87DA8A7A87DA8%A7A87DA8A7A87DA883A77DA87DA87DA883A77DA87DA77DA77DA77DA77DA7%7DA77D7D7D837D7D7C7D7C7D7C7D7C7D5283FF527C527D587C527D7C7D7C%7D7C7D7C7D7C7D7CFD047DA77D837DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D7C7D%587D7C7D527D527C7CFF7D7C7D7C7D7C7D7C7D7C837D7D7DA77DA77DA77D%A77DA77DA77DA87DA77DA87DA87DA883A87DA8A7A87DA8A7A87DA8A7A87D%A8A7A87DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA883A87DA87D%A77DA87DA77DA77DA77DA77DA77DA77D837DA77D7D7C7D7D7D7C7D7C7D52%A7FF527C527D7C7D587D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D837DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA87DA77DA87DA7%7DA87DA77DA87DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA7%7D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D527D587C7CFF7D7C7D7C7D7C%7D7C7D7D7D7C837D7D7DA77DA77DA77DA77DA77DA77DA77DA77DA87DA77D%A883A77DA883A87DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA8A7%A87DA883A87DA883A77DA87DA77DA87DA77DA77DA77DA77DA77DA77D837D%A77D7D7C7D7D7D7C7D7C7D7C7D587DFF527C527C527D7C7D587D7C7D7C7D%7C7D7C7D7D7D7C837DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA8%7DA883A87DA883A77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77D7D7DA77D7D7D837D7D7C7D7C7D7C7D7C7D7C7D7C7D%527D587C527C7CFF7D7C7D7C7D7C7D7CFD047DA77D837DA77DA77DA77D7D%527D527C527D527D527D7DA87DA883A87DA87D7D527D587D527D587D7CA7%A7A87DA8A7A87DA8A7A87DA8A7A87DA8A7A87DA883A87DA883A77DA87DA7%7DA87DA77DA77DA77DA77DA77DA77D7D7D837D7D7C7D7C7D7C7D7C7DFF52%7D527C527D7C7D7C7D7C7D7C7D7C7D7CFD057DF8F8F827F826F827F827F8%5283A77DA77DA77D27F827F827F827F827262727A87DA77DA87DA77DA87D%A77DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D7D7DA77D7D7C%7D7D7D7C7D7C7D7C7D7C7D587D7C7C527C7CFF7C527D7C7D7C7D7C7D7CFD%047DA77D7D7DA77DA752512727275127272752272752A87DA77DA8A77D27%52272D27512727275227527DA8A7A87DA8A7A883A87DA87DA883A87DA883%A77DA87DA77DA87DA77DA77DA77DA77DA77DA77DA77DA77D7D7D837D7D7C%7D7C7D7C7D7C7D5283FF527C527D587C527D7C7D7C7D7C7D7C7D7C7D7C7D%7D27F8527D7D7DA77DA77C27F87D7DA77DA77DA8522627A77DA77DA77DA7%27F851A77DA77DA77DA77D7D27277CA77DA77DA77DA77DA77DA77DA77DA7%7D837DA77DA77D837D7D7C7D7D7D7C7D7C7D7C7D7C7D587D7C7C527D527C%7CFF7D7C7D7C7D7C7D7C7D7C837D7D7DA77DA77DA77DA7272752A87DA87D%A7837D27277DA883A87DA8A77CF852A7A883A8A7A8A752F87CA7A8A7A87D%A8A7A85227F852A7A8A7A87DA8A7A87DA883A87DA87D527D587D7C52A87D%A77DA77DA77DA77D837DA77D7D7C7D7C7D7C7D7C7D52A7FF527C527D587D%587D7C7D7C7D7C7D7C7D7D7D7CA77C27F8FD047DA77DA75227277D7DA77D%A77DA851F827A87DA77DA77DA7272752A87DA87DA77DA77D7D27277CA77D%A77DA77DA77DA77DA77DA77D52F87DF852F8527DA77D7D7D837D7D7C7D7C%7D7C7D7C7D7C7D7C7D527D527C7CFF7D7C7D587D7C7D7C7D7D7D7CFD047D%A77D837D7D26277CA77DA77DA7A752F8527DA77DA87DA77D52F858A7A883%A87DA87D27267DA7A87DA8A7A87DA8A7A77DA883A87DA883A77DA87DA77D%A883A727275252F82752A77DA77DA77DA77D7D7D837D7D7C7D7C7D7C7D7C%7D7C7D587DFF527C527C527D587D587D7C7D7C7D7C7D7C7D7D7D5227277D%7DA77D7D7DA727F827A77DA77DA77D83272752A77DA77DA77D7DF8277DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77C525251517D%52527D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D527D527C527C7CFF7D7C%7D7C7D7C7D7C7D7D7D7C837D837DA77DA77D7CF8517DA87DA77DA87D52F8%7CA7A77DA883A87D27267DA7A8A7A87DA8522727A8A7A87DA8A7A87DA8A7%A87DA8A7A87DA8A7A87DA883A87DA87DA77DA87DA77DA87DA77DA77DA77D%A77DA77DA77D7D7C837D7D7C7D7C7D7C7D587DFF527C527C527D7C7D7C7D%7C7D7C7D7C7D7C7D7DA727262DA77DA77DA77DA727F852A87DA77DA77D7D%F8277DA77DA77DA78352F8517DA87DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77D837DA77D7D7DA77D7D7C7D7D7D7C7D7C7D%7C7D7C7D587D587C527C7CFF7C527D7C7D7C7D7C7D7C7D7D7D7C837D7D7D%A77D5227522752275227522752277D7DA87DA77DA87D2752A77D837DA77D%A77C5252A87DA8A7A87DA8A7A87DA883A87DA883A77DA87DA77DA87DA77D%A87DA77DA77DA77DA77DA77DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D7C%7D527DFF527C527C527C527D7C7D587D7C7D7C7D7C7D7C7D7C27FD08F826%7C7DA77DA77DA77D7D527D587D7C7D7C7D7C7D527D7DA77DA77DA77DA77D%A77DA77DA77DA77DA77DA77DA77DA77DA77DA77D7D7DA77D7D7D837D7D7C%7D7C7D7C7D7C7D7C7D7C7D587D587C527C527C7CFF7D587D7C7D7C7D7C7D%7CFD047DA77D837DA77D7D7C7C5252527C527C512727A77DA87DA87DA852%2752A87DA77DA77DA751277CA87DA8A7A87DA8A7A87DA8A7A87DA8A7A87D%A883A87DA87DA77DA87DA77DA87DA77DA77DA77DA77DA77DA77D7D7D837D%7D7C7D7C7D7C7D7C7D5283FF527C527D587C527D7C7D7C7D7C7D7C7D7C7D%7C7D7C7D7DA77DA77DA7A752F8517DA77DA77DA77D51F8527DA87DA77DA8%7D27F87D83A77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77D837DA77D7D7DA7FD067D7C7D7C7D7C7D7C7D587D7C7C527D527C7C%FF7D7C7D587D7C7D7C7D7C7D7CFD047DA77D837D7D7CA77DA77DA77DA851%2727A87DA77DA883A727277CA87DA883A7A77D26277DA883A87DA883A87D%A883A87DA883A77DA87DA77DA87DA77DA87DA77DA87DA77DA77DA77DA77D%837DA77D7D7D837D7D7C7D7C7D7C7D7C7D587D527DFF527C527C527D587C%527D7C7D7C7D7C7D7C7D7C7D527D7D7D7C837D7D7D51F8527DA77DA77DA7%7D27F87D7DA77DA77DA7522727A77DA77DA77DA77DA77DA87DA77DA77DA7%7DA77DA77DA77DA77DA77D7C277D5283527D7D7D7C7D7D7D7C7D7C7D7C7D%7C7D587D7C7D527D527C527C7CFF7D7C7D7C7D7C7D7C7D7C7D7C837D7D7D%A77DA77C7D7DA77DA77DA77DA7272752A87DA77DA8A77DF8277DA87DA8A7%A8A77CF85283A8A7A87DA8A7A8A7A77CA87DA8A7A87DA883A87DA87DA77D%A87DA7FD0427522751A87DA77DA77DA77D837DA77D7D7C7D7D7D7C7D7C7D%7C7D587DFF527C527C527D7C7D587D7C7D7C7D7C7D7C7D7D7D52FD047DA7%7DA77C27F87D7DA77DA77DA852F827A77DA77DA77DA8272751A77DA77DA7%7DA77D7DF82752A77DA77DA77DA77DA77DA77DA77DA77D27275227F8F852%7D7D7D837D7D7C7D7C7D7C7D7C7D7C7D7C7D527D587C527C7CFF7C527D7C%7D7C7D7C7D7C7D7C7D7CFD047DA77C7D7DA77DA77DA8A77DF8277DA77DA8%7DA77D7CF852A7A8A7A883A8A752F87DA7A77DA883A77DA87C27F852A7A7%7DA87DA77DA87DA77DA87DA77DA7277D7DFD0452A87DA77DA77D7D7D837D%7D7C7D7C7D7C7D7C7D7C7D7C7D527DFF527C527C527C527D587D587D7C7D%7C7D7C7D7C7D5258527C527C527D5227267D7D837DA77DA72727517D527D%527D527D272052A87DA77DA77DA77DA752527CA77DA77DA77DA77DA77DA7%7DA77D83FD047D7CA7FD067D7C7D7C7D7C7D7C7D7C7D7C7D527D587C527C%52587CFF7C527D7C7D7C7D7C7D7C7D7D7D7C83FD047D2727F8272627F827%F85127527DA77DA87DA77D522727F8272727F8272751F87DA7A87DA8A7A8%7DA8A7A8A7A883A87DA883A87DA87DA77DA87DA77DA87DA77DA87DA77DA7%7DA77DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D7C7D5283FF527C527C52%7C527D7C7D587D7C7D7C7D7C7D5827F827F8272627F827272D52A77D837D%A77DA75127272704272727262727527DA77DA77DA77DA77DA77DA77DA77D%A77DA77DA77DA77DA77DA77D837DA77D7D7DA77D7D7D837D7D7C7D7D7D7C%7D7C7D7C7D7C7D587D587C527C52587CFF7C587C527D7C7D7C7D7C7D7C7D%7D7D7C837D83FD057DA77D7D7DA77DA77DA77DA77DA87DA77DA77DA77DA7%7DA77DA783A87DA883A77DA883A77DA87DA77DA87DA77DA87DA77DA87DA7%7DA77DA77DA77DA77DA77DA77DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D%7C7D527D527DFF527C527C527C527C527D7C7D587D7C7D7C7D7C7D7C7D7D%7D7C837D7D7DA77D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA77D%A77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D7D7D837D%7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D527D587C527C527C527C7CFF7D%587D587D7C7D7C7D7C7D7C7D7D7D7CA77D837DA77DA77DA77DA77DA77DA7%7DA77DA77DA87DA77DA87DA77DA883A87DA883A87DA883A87DA883A87DA8%83A87DA883A87DA87DA77DA87DA77DA87DA77DA77DA77DA77DA77DA77DA7%7DA77D7D7D837D7D7C7D7C7D7C7D7C7D587D527DFF527C527C527D587C52%7D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D7D7DA77D837DA77D%A77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D%A77DA77DA77D837DA77D7D7DA77D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C%7D587D7C7C527D527C527C7CFF7C527D7C7D587D7C7D7C7D7C7D7C7D7D7D%7C837D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA77DA87DA77DA8%7DA77DA87DA77DA87DA77DA87DA77DA87DA77DA87DA77DA87DA77DA77DA7%7DA77DA77DA77DA77DA77D837DA77D7D7C7D7D7D7C7D7C7D7C7D7C7D587D%7C7C527DFF527C527C527C527D527C527D7C7D587D7C7D7C7D7C7D7C7D7D%7D7CFD047D837D7D7DA77D837DA77D837DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77D837DA77D837DA77D7D7DA77D7D7C7D7D7D%7C7D7C7D7C7D7C7D7C7D7C7D587D587C527D527C527C525258FF7C527D7C%7D587D7C7D7C7D7C7D7CFD047DA77D837DA77DA77DA77D7D7DA77DA77DA8%A7A883A883A87DA8A7A883A8A7A87DA8A7A87DA8A7A8A7A8A7A8A7A8A7A8%83A8A7A883A87DA77DA8A7A883A87DA87DA87DA77DA77DA77DA77D7D7D83%7D7D7C7D7C7D7C7D7C7D587D7C7C527DFF527C527C527C527D587C587D7C%7D7C7D7C7D7C7D7C7D7C837D7D7D7CF8277DA77D7D517D5252527D527D52%7D527D7C7C7D7D527C7C7D527D7C7C527C5252527D7D7D527D527C52837D%7D517D5252527D527C527D7D7C527D7C7D7C7D7C7D7C7D7C7D587D7C7C52%7D527C527C52587CFF7C527C527D7C7D587D7C7D7C7D7C7D7CFD047DA77D%7D7DA77DA7522727A77DA852272751275258522752272D5152277D52522D%527C272752272D272D2752277D52522727277C7D837C5227522752585227%27277D2752527D7D7D7C837D7D7C7D7C7D7C7D7C7D587D7C7C527C527DFF%517C527C527C527C527D587C527D7C7D7C7D7C7D2727F8275127F8272783%FD067D527D527D527D7C7D7C7D527C7D7D527C7CA77C7D52A77C7C527D7C%527CA77D7C587D7DA77DA77D7C527C527D7C7D527D7C7D525252A77D7D7C%7D7C7D587D7C7C527D527C527C527C52587CFF7C527C527D7C7D7C7D7C7D%7C7D7C7D7C7D7DA75227F827F827F827F82752A77DA87C52527D7C7D527D%527D7D7D7C7D7DA77C7D527D527D527D587D527D7CA7A77D527D587D527C%527C527DA77D527D7CA7527C5258527C527D5252527C527C7C837C7D7C7D%7C7D7C7D7C7D527D527DFF527C527C527C527C527D7C7D587D7C7D7C7D7C%27F8525227F8275227F8277D7D7D52272727522727522752522727275252%522751F8FD062752272727A727522751272727525252277D522727525227%5152FD052752FD0427267C7C7D7C7D527D587C527C527C527C7CFF7C527C%587C527D7C7D587D7C7D7C7D7C7D7C7D272752A8272151A8522727A77DA7%7DA7FD057D837CA77D7D7C7D7DA77C7D7DA77DA7FD067D7C7D7DA77D837C%7D7CFD067DA7FD047D7C7D7D7D587D7C7D7C7D7C7D527D7C7D7C7D7C7D58%7D7C7D527D587C527DFF5258527C527C527C527C527D587D527D7C7D5227%F8527D51F8527D52F8277C837D7C51FD04527C5152515252A7FD04527C7D%527D527D7D7C5252517DFD05527D27FD055258FD06527C2D525152527D52%52515227527C7D7C7D527D527C527C527C527C525252FF7C527C587C527D%7C7D7C7D7C7D7C7D7C7D7C7D272752A7272751A8522727A77DA852522752%27525252275252527D525152277D52522752517D525127527C522751277D%7C27275227512D7D27522752527D272727522752525251515152527D7D7D%7C7D7C7D7C7D7C7D527D587C527DFF5258527C527C527C527C527D7C7D58%7D7C7D5827F8527D51F8527D52F8277CA77D7D7DA77D7C7C7D7D837DA77D%A77DA77DA77DA7FD077DA77DA77DA77D7D7DA77D7D7CA77D7D7DA77C7D7C%7D7D7D7C7D7D7D7C7D7C7D527D7C7D7C7D7C7D527D587C527C527C527C52%5258FF7C527C527C587C527D7C7D7C7D7C7D7C7D7D7D272752A7272151A7%5227277D7DA7525251FD04527D51525152525227FD045283527C5152527C%527D5252277CA7A77DA77DA77DA77DA77DA77DA77DA77DA77DA77D7D7D83%7D7D7C7D7C7D7C7D7C7D7C7D7C7D527D587C527C527DFF51585258527C52%7C527C527C527D587D527D7C51277D7D52F8587D7C20527D7D7D7C275227%5227525152275127522D512752275152525151275252275152275152A77D%7D7D837D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7D52%7D587C527C527C527C5258515258FF7C527C527D587C587D7C7D7C7D7C7D%7C7D7C7D7C837D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA87DA77DA77DA77DA87DA77DA87DA77DA87DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D587D%587C527C527DFF517C5258527C527C527C527C527D7C7D587D7C7D7C7D7C%7D7C7D7C7D7C7D7D7D7C837D7D7DA77D7D7DA77D837DA77D837DA77DA77D%A77DA77DA77DA77DA77D837DA77D7D7DA77D7D7DA77D7D7D837D7D7C7D7D%7D7C7D7C7D7C7D7C7D7C7D7C7D527D587C527C527C527C5258525258FF7C%527C527C527C587C527D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA7%7D837DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D7D7C837D7D7C7D%7C7D7C7D7C7D7C7D7C7D527D587C527C527C517DFF5152517C5258527C52%7C527C527C527D587D527D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C%7D7D7D7C837D7D7D837D7D7DA77D7D7DA77D7D7DA77D7D7D837D7D7D837D%7D7C7D7D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7D527D587C52%7C527C527C5258527C525252FF7C527C527C527D587D587D7C7D7C7D7C7D%7C7D7D7D7C837D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7DA77D837DA77D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D587D587C527C%527C517DFF5152517C5258527C527C527C527C527D7C7D587D7C7D7C7D7C%7D7C7D7C7D7C7D7D7D7CFD047D837D7D7DA77D7D7DA77D7D7DA77D7D7DA7%7D7D7DA77D7D7DA77D7D7DA77D7D7D837D7D7C7D7D7D7C7D7D7D7C7D7C7D%7C7D7C7D7C7D7C7D527D587C527D527C527C5258527C525252FF7C527C52%7C527C527D587C527D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D%837DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D%A77DA77DA77DA77DA77D837DA77D7D7DA77D7D7C7D7D7D7C7D7C7D7C7D7C%7D7C7D7C7D527D587C527C527C527C527DFF51525152517C5258527C527C%527C527C527D587D527D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C7D%7D7D7C7D7D7D7C837D7D7D837D7D7C837D7D7C837D7D7C7D7D7D7C7D7D7D%7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7D527D587C527C527C527C%527C527C5252515252FF7C527C527C527C527D587D587D7C7D7C7D7C7D7C%7D7C7D7CFD047DA77D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA7%7D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D587D587C527C527C527C527D%FF51585152517C527C527C527C527C527C527D7C7D587D7C7D7C7D7C7D7C%7D7C7D7C7D7D7D7C7D7D7D7C837D7D7D837D7D7DA77D7D7DA77D7D7DA77D%7D7DA77D7D7D837D7D7C837D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D527D587C527D527C527C527C527C5252515252FF52517C527C527C%527C527D587C527D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C837D7D7DA77D7D%7DA77D837DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA77DA7%7D837DA77D7D7DA77D7D7D837D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D%527D587C527C527C527C5258517DFF515251525152517C527C527C527C52%7C527C527D587D527D7C7D587D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7D%7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D587D7C7D527D527C527C527C527C527C527C52%525152515252FF58527C527C527C527C527D587D587D7C7D7C7D7C7D7C7D%7C7D7C7D7D7D7C837D7D7DA77D837DA77DA77DA77DA77DA77DA77DA77DA7%7DA77DA77DA77DA77DA77DA77DA77DA77DA77D837DA77D837DA77D7D7C83%7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D587C527C527C527C527C517DFF51%5251585252517C527C527C527C527C527C527D7C7D587D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7D7D7C7D7D7D7C7D7D7D7C837D7D7C837D7D7C837D%7D7C7D7D7D7C7D7D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D587D7C7D52%7D587C527C527C527C527C527C52525158515252FF585252517C527C527C%527C527D587C527D7C7D7C7D7C7D7C7D7C7D7C7D7D7D7C7D7D7D7C837D7D%7DA77D7D7DA77D837DA77D837DA77D837DA77D837DA77D837DA77D7D7DA7%7D7D7DA77D7D7C837D7D7C7D7D7D7C7D7C7D7C7D7C7D7C7D7C7D527D587C%527C527C527C5258517C517CFF2D52515251525152517C527C527C527C52%7C527C527D587C527D7C7D587D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C7D7C%7D7C7D7C7D7C7D587D7C7C527D527C527C527C527C527C527C5252515251%52515252FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/">
         <tiff:XResolution>72</tiff:XResolution>
         <tiff:YResolution>72</tiff:YResolution>
         <tiff:Compression>6</tiff:Compression>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <tiff:JPEGInterchangeFormat>290</tiff:JPEGInterchangeFormat>
         <tiff:JPEGInterchangeFormatLength>4815</tiff:JPEGInterchangeFormatLength>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-01-01T15:33:58Z</xmp:CreateDate>
         <xmp:ModifyDate>2010-01-01T15:33:58Z</xmp:ModifyDate>
         <xmp:MetadataDate>2010-01-01T15:33:58Z</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AI4lzAQjIlwqi41xSio1w&#xA;qiUXFVdFxVXRcKqqriqqq4qvC4qvC4quC4qu44VdxxV3HFWiuKrSuBVhXFVjLiqmy4qosuKqLriq&#xA;g64FQ8i4qhZFxVCyrgQg5VxV7TT/AKx+p/y7/wDY3mR/Al4vEuY6EZEuKUXGuFUVGuKohFxVEIuF&#xA;VZFxVVVcVVVXFVQLiq4LhVcFxVdxxV3HFXccVaK4qtK4qtK4FU2XFVNlxVSZcVUXXFVB1xVDyLgV&#xA;CyLiqFlXAqDlXFD2en/IAaf8u/8A2N5kfwJeMxLmOhGRLilFxrhVExriqJRcKq6Liqsq4qrKuKqi&#xA;riq8LhVeFxVcBirfHFW+OKu44q0Riq0riqwriqxlwKpsuKqTLiqi64qoOuKoeRcCoaRcVQsq4qg5&#xA;VwIeyU/5ALT/AJd/+xvMj+BLxyJcx0IyJcKUVGuKoqNcVRCLhVXRcVVlXFVVRiqoowqqAYqvAxVc&#xA;BirdMVdTFLqYoaIxVaRiq0jFVjDFVNhgVSZcVUXXFVB1xVDuuBUNIuKoWVcVQkq4Few0/wCQD0/5&#xA;d/8AsazI/gV49EuY6oyJcKoqNcVRMYwqiEXFVkxZphGrEHag7b4qqLa3f8//AAxxVJPOusXnl/y/&#xA;NfoazsRDb7kgSPWjH/VAJyURZVF/lrJfT+TbC4vZpLi4m9VzJKxZuPqsF+IknoMMuaspAyKvKdX8&#xA;jefr7UZ7nT9deWOVi5V5poClTsoVS60HQUywSCoT/lW/5pf9Xf8A6fJ/6YeIKk+oR+cNA1m00e61&#xA;Sd9QvHhbnHcSuqRvJxVQWK/EWWp26U33OEUVe/0ylUr8y2t5daLcW1neNYXMwCx3cYq6bgmm69QK&#xA;VrhBV5afy4/MxiTDrXqRH7Dm7nUke4I2yziCrT+W/wCaX/V3/wCnyf8ApjxBVX8rdQ1e683XFpLf&#xA;Tz2llbShhJKzrI4kVeZBJG5J4+A2+YmNletkZWrEPMnnWw0vzDa6LOsvqXMaMksVGUNI7IqsKhv2&#xA;e1cIjYVOWtLv+f8A4Y5FUn806jPomh3ept8ZgUcE5Hd3YItfarb+2GIsqlX5aXOo3nlt7y/ne4lu&#xA;LmV1eQlqLsOK16DkDsMlPmrJpFyCoaRcCoWVcVQkq4FevU/5AVT/AIo/7GsyP4FeQxLmOqLiGFUX&#xA;GMVRMYwqiEGKqMQ5X3yJ/AUxVM1GKvOPzwuuGj6baV/vrhpaf8Yk4/8AM3LMas68oWn1TyvpMBFG&#xA;S0h5j/KKAt+JyJ5qm0x4wu3gp/VgVD6UnwO3iQPu/wBvFUeBirxrWB+kvzwtoR8S208HH/nhEJm+&#xA;5gctH0q9nplSUDqppEi+LV+4f24lCIt0428Y/wAkfqxVS1K5Fpp91dHpbxSSn/YKW/hiFeU/kTal&#xA;pdYvG3IEMSse/IuzfqGWZFeskZWrxrXh+kfzotbf7S201vT5Qxic/jXLR9KvXGGVKwD85Ln0fKsc&#xA;IO9xdRoR7KrP+tRksfNUx8gWn1byZpcZFC0Rl/5Gu0n/ABtgnzVOnGRVDyDAqFkGKoOUYq9dp/yA&#xA;2n/FH/Y1l/8AAryKIZQqLiGKouMYqiYxhVEIMVQqSejMz7OTXcHbfFUSuoN/IPvxVhX5k6AfMLaa&#xA;RfQWMkchhjjuW4o5mK14n+YcRtTfLISpXpMUSxxrGgoiAKo8ABQZBUNrN9Z2Omy3F3OlvCtAXkYK&#xA;CSdlBPc9saV5hJ+d0lnPLbwaOTGjkAzymOTbb4kCtxPtXLBjVr/lfV3/ANWaP/ke3/NGHw1Rf5ea&#xA;Ne6x5vk85Sx/V7eX1XEEvLnzlXjWM0o8fFvtbeFO+CRoUr1mmVqxvzvrUei6YdQeCS5WLb0ohU1b&#xA;ozH9lNt2wgWrz8fn1dgAfoaOg/4vb/mjLPDVD6j+ct1q9hcaWdJ9Nb6N7dnilLyASgqSqlByND0x&#xA;EFZd+UWiLpvluWT6xDcm8nMivA3MBAiqFfYUcGtR2yMzurNiMgrw7X7m78pfmBca7cwC7eeWaSzV&#xA;SVi4SApvIV+2qtQqB9OWjcKjT+ed0f8ApUR/8jz/AM0YPDVJfMXm+TzqttZSwx6Z6Dl1uJJKwVYU&#xA;/euVHD2O/wAvAiNK9g06y+pabaWex+rQxw1HT92gX+GVFVzjAqHkGKoWQYFQkoxV63T/AJAf/wA8&#xA;P+xrL/4FeRxDKFRcQxVFRjCqJjGKqx+GNj4AnFVumoCrk+IGKpgqL4DCryLzIW1L847CzryjtZrV&#xA;QvaiATuPxNctH0q9mAypXnX55XXp+W7K1Bo092HPuscbV/Fxk8fNWVeSNMgh8oaOksStIbSJ2LKC&#xA;fjUPQ1HblTBI7qnhtLNVLGCOgFfsr/TIqhNISrSN4AD7/wDaxVM6YpSu5HqakqHcAqCPbqcUI36l&#xA;af74j/4Ff6YpYJ+crwWfk1liRY3uriKGqgA0o0hGw/yMnDmhM/yvs/q3kXS1p8UivKx8fUkZh/wp&#xA;GCXNWTvsCfDfIqlVjDHK0hkUOBTZhUVPzxVENZ2n++I/+BH9MVePfmbGl55+0rS41AjpbxmMCg5z&#xA;TGpp0+zxy2HJXrTjKVUHGKoaQYqhpBgVCSjFXrNP+QI/88P+xrL/AOBXksQyhUXEMVRUYwqiYxiq&#xA;6eoganU7fecVXWLxRxUdgGJrQnFUYtxb/wC/F+/CryXyqrah+c1/ckEi1lumFa9EBgXr/rDLT9Kv&#xA;ZgMqV5N+eKXV1eaTawoSkMcssjn4Y19RlVebsQq/3Z6nLIKzyz85eSra0htk1qz4QxrGv71OiAAd&#xA;/bI8JVEx+bvLN6Ta2WqW1xcyKwjhjkVnagJNAD2G+AgpR2kp+4dvFqfcMCEdTFLHrzXNG07Uy2o3&#xA;0FpUtwE0ioTsQCATWmEAoX/478mf9Xqz/wCRyf1w8JS85/OnzHpWp6bpcOm3cV3F60rytCwcKyKo&#xA;UGnT+8OTgEPT/Ltn9T8v6ZaUoYLWGM/NYwD+OVnmqKuqi3kI68SB9O2BUDYtHFG3qMFYnoTvQYqr&#xA;NcW/+/F+/FXj8wOpfnYop8EMqlfYQW4av0suW/wq9ZcZSqHcYqh5BiqFkGBUJKMVesf+US/54f8A&#xA;Y1l/8CvJohlCouIYqioxhVEoMVVWiWROJ2B8MVaXTov5m/DFVRdMi/mb8MVQumeUdKsNfu9cg5/X&#xA;byMRSgkcABxJKqB1bgK75K9qVPgMCWLeb/y40jzTeQXd3cXEE0EfpD0mXiV5Ft1ZW3q3UZISpCQj&#xA;8h/Lv/VwvP8Akl/zRkvEKorTfyV0TT7+3vrfUbsTW0iypX0qEqa0PwdD0OAzV6DBAkMYjWtB3PXI&#xA;JVKYq861L8kfLt7f3F4b27ja4kaVkBjIBc1IBKVpXpkxMoQ3/KhvLn/VwvP+SX/NGHxCqItvyR8t&#xA;wo8Ul5dzQuyO0ZMa/FGTTcJ4Mw+nBxlXoJGQSpzRLJGyN0bY0xVAnS4v52/DFCxtMi/mb8MCpUnl&#xA;HSovMX6fHP68IfRpUcD25kUry4/D16ZK9qVNXGRVDuMVQ8gxVCyDAqFlGKvVv/KKf88P+xnL/wCB&#xA;Xk8QyhUXGMVRUYwqiUGKq6DFVdBhVVUYqqqMVXjFK8DFVwxVcBirsKt0xV2KtYFaOKrTiqwjFVjD&#xA;FCmwxVSYYqoOMCqDjFUPIMVQsgxVCyjAr1X/AMor/wA8P+xnL/4FeURDKFRcYwqiYxiqJQYqiEGK&#xA;vMfzC1bW7rzZBoekapNZT8Y1SCNniR5JKkVljJap5DZgF98tiNrVCDyV+cP/AFdZ/wDpPl/5qw8U&#xA;VR+jeTvzIi1GGXWtZuk0+M8pVS+mZnp0TZu/f2wGQV6vYs7WyM5qxrufnlaoglVUsxooFST2AxS8&#xA;IsJvP3m7ULy40LXblgjc5LczyWnpq5PEBEZo6bdmr45dsEJj/gf85/8Aq73H/cQl/wCasFxVk3kv&#xA;QPN+lTyy+YNVubm5kokFu1zJNGqE7ueTEFidhtsPnkJEdFejYEpV5ni1CbRLiHTrv6jeSgLFdceZ&#xA;XcE0FR1G1e2IKvKP8E/nE1TFrU8sdTxkF/OAQO9GIOWcUUNf4H/Ob/q73H/cQl/5qx4oqivyr1nX&#xA;73zdcWNzqNxdWllbS+qJpXlDyCRE5Vct3Pw0psPnVmNleuHKkvJvzL1nWrjzZa6FpGqzWM/CNVgj&#xA;LxK8spNKyxHlWhXZhxHWuWRGyEsPkr84f+rtP/0ny/8ANWHiiqX6xpn5keX7M6lq2rXP1VGChEvZ&#xA;WLu32VoGG3j7Yggq9D/Lm61G88o2l3qE73FxO0repIatxEjKB/wu2QnzVP3GQVDyDFUNIMVQkowK&#xA;9V/8ot/zx/7Gcv8A4FeURDKFRcYwqioxiqITFUQmKvJNP/3JfnbLId0t5pOXt9XgMY/4ZRlv8KvZ&#xA;1ytULqbUiRfFq/cP7cVRtqvG3jHgo/ViqB803f1Pyzqt1WjQ2kzJ/remeP44RzSwH8grThperXlP&#xA;76eKGv8AxiQt/wAzcnkQ9WyCUsl/eaqo/lK/gK4EJpTClAau1IUXxav3D+3AUIq1XjbRD/JH474p&#xA;U9RuhaWFzdHpbxPKf9gpb+GFXkf5CWrPc61evuQsMQY7kly7N/xEZZkQ9fOVJeLR/wC5P882Y7pB&#xA;O1fAfVrfiP8Ah0y3+FD2JsqV5l+eV3w0GwtQaGa69Q+4jjYfrkGTx81ZR5PtPqvlPSYaUItYmYeD&#xA;OodvxbIy5qmb5FUNJiqGkxVCS4Feqf8AlF/+eP8A2M5f/ArymLtlCouMYVRMeKomPFVdMKvE7bVn&#xA;8medb/UNTt2u7y49ZliQlEAmk5cxIy/F0I2FPetRltWFZIPz4tB/0p5P+R6/80YPDVM9B/NDTfMd&#xA;+lnJbNp7dIpZXDRFm/ZL0Xixp8NevzwShSvSVAAAHQZBLHfzFikm8l6nBFLFDJKiqrzOEUj1FLLX&#xA;xKggDuclHmh5f5M/M6w8paS2lDTpLt/WeWWYuIquwCkcCrHbhTc/d0ywxtU+/wCV/wBn/wBWWT/k&#xA;ev8AzRkfDVlnknzVY+Zma8hU29wvJpLSQjmFPwh16ck7cqddsiY0rL8CUFfWzXE0SBlUAEmp3+7A&#xA;qLAAAA6DbCqB17T21LRL/T1lEDXlvLB6xHIL6iFakbeOIVif5TeW5dE0K7Wae3uZLi6crLayCWMo&#xA;ihB8Q78g22SmbQzY5BLwG316Dyp531DWLpBqM1zJcNGts49IetJyLCWhDEbghRt3NQRl1WEMiP58&#xA;2h/6U8n/ACPX/mjI+GrHPM/mM/mBd2FtbRDT5bYsqC4kBhYzcesoUcW+AUBHxdt9iQOFXtMUKwQR&#xA;wp9iJVRfkooMqVTfAqHkxVDSYFQkuKvVP/KMf88f+xnL/wCBXlMWUKi4sVRMeFUSmKqrHjGzeAJ/&#xA;DFULZWVrcKxuIY5gponqKGp40qDhVGLo+k/8sVv/AMik/pjavJ/McMV3+cWn6dAgS3tZ7X9yg4p8&#xA;IWdzRQOo65aPpV7WMqS84/PW79PyxZWwNDPdhj7rHG1fxYZOHNDJfI+iWC+UNINzaxSzvaxSPJIi&#xA;s59ReYBLAnYNTBI7qm9zpui29vLcPY2/CFGkb90nRRU9vbBaXln5DxSXOra1qMpLSLHFGXNdzKzM&#xA;f+TeWTQ9lytKV3JL6rGo/ZKj+OBCZnClgn50X8lp5JkSNyjXdxFASpIJB5SEbdiI8lDmhGflVafV&#xA;vIelgijSiSZv+ekrFf8AhaYJc1T7XLv6no1/eA0+rW8s1fD00LfwwBLyr8jdMguLbV57mJZog8KR&#xA;LIoZQ1HLkA13NVyzIUPT20fSf+WK3/5FJ/TK7V5B5tiiu/za07TYUVLe3ltQ0KAKvaZzxG1Sp65Y&#xA;PpV6++VKoPgVDyYqhZMVQsuBXqf/AJRj/nj/ANjOX/wK8piyhUXFhVEx4qiUxVdcEi3enU7fecVQ&#xA;dlrmhwRlJdRtY5Ax5I00YYdtwWw0VRi+Y/L3/V0tP+R8X/NWGiry3yqw1P8AOi9uwQ6W8t0yt1BW&#xA;NTAp/EZYfpV7WMqS8j/PT61d3ukWNtE0hhjmmk4ioAkZVUsew+A7nLIIekWOueWrWzgtk1Wz4wRp&#xA;EtJ4uiKFH7XtkaKUu84+ZtG/wpq4tdQtp7h7SZI44po3cl0K1Chq7VriBuhjn5C2fDy5f3ZFDPd+&#xA;mPcRRqR+MhyU+avTsglKoiDqbSNsgZviOw2FMCExM8H+/F+8YpeU/n5er+jtItUYMJZpZSRQ7xqq&#xA;/wDMzLMaHovlqz+p+XNLtCKGC0hjb/WWMA/jkDzSlP5l3DQeSNVKAs8sawqoFSTM6x0A/wBlhjzV&#xA;jH5Rz6bpHliWPULuC0u57p5GhnlSOQKFRBVWII+yclPcoZo3mTy7/wBXS0/5Hxf81ZCiryfQSNT/&#xA;ADou7kHnHbzXDchuCsUZhU1Hbplh+lXr75UqHfAqHkxVDSYqhJcCvU//ACjP/PH/ALGcv/gV5TFl&#xA;CouLCqJjxVEpiqC8xaDFr2kyabLPJbpIQfUiIDfCa0NeoPcZIGlYYv5F6Sf+lnP/AMAmT8RVQfkT&#xA;pJ/6Wk//AACY+IrKfKf5fad5e1GTUIriS4upLdbUlwqrwUrvQdz6a1yJlasuGRSxPzp+XFj5qu7e&#xA;5uL2e2eCP0xGlGjIqWrxPRvi3OSjKkMcH5B6R/1dbj/gEyXiKrWf5F6Tb3KTDVJ24H4kKJRlOzKf&#xA;ZlJBx41Zv5U8s2flvRo9LtJHljRmdpZKcmZzUnag9siTaU4wKgZNKjd2f1G+I18cCrf0PH/vw/cM&#xA;UJR5k8h6X5gs4rW9kkVIpVlV46BtgQVqQdmBwxNKySgAoNgOgwJSnzNoMOvaPPpks8tuk1P3sJow&#xA;KmvfqD3GEGlefn8htI/6ulx/wCZPxELD+RGkj/paXH/AJj4ish8s/l9p3l/UW1GO4luLprcWpLhQ&#xA;vFSu9B+1xRR/t5EytWSPkVQ74FQ8mKoaTFUJLgV6p/5Rn/nj/wBjOX/wK8oiyhUXFhVEx4qiUxVX&#xA;TCquuKqq4pVFxQvGKV4xVcMKtjFW8VdirsVaOKtYq0cCrDiqxsVU2xQpNiqi+KqD4FQ74qhZMVQs&#xA;uBXqf/lGP+eP/Yzl/wDAryiLtlCouM4VRUeKohMVRCYVeW+ddb8zX/nF9E0LU3t5YQkcdmhMJdzG&#xA;JGIkGzUB/bI6bZZECrKoceW/zr7Xlx/0mJ/zXhuKoPVn/M/y3bpf6xqNwkTOI4EFyJOcpBIDBWPw&#xA;gKSfHp3wiir1zyLdX915S0u5v5TPdzQh5JWpVgxJWtP8mmVS5qn5YKpZiABuSegGBLwq21P8xvNW&#xA;o3c+gavLMinm1ukn1X0UYngpQ0Tt+yze+XbBCN/wx+eP/Lbcf9Jqf814LiqXXerfmNoOrWul6hql&#xA;x+k7x4jHGZhMixPJxBNC4Jdlp7D/AFsNAq9+ypLsVSVfOPll9bOhrqEZ1QHibf4vtDqvOnDl/k1r&#xA;hoqnBwKtOBVpxVY2KqbYoUmxVRfFVB8CoaTFUNJiqElwK9U/8ox/zx/7Gcv/AIFeTxHKFRceFUVH&#xA;iqITFUQmKvJPJ1dR/N/ULvqLeS7kU/5IJgU7ezjLpfSr2dcqV5V+fF5SHR7MH7TTTOP9UIq/8SOW&#xA;Y1en6Ha/U9FsLSlPq9tDFTw4Rhf4ZAqs8z3f1Py3qt0DQw2k7qf8oRmn44jml59+QVnx07V7yn97&#xA;NFCD/wAYlLH/AJO5OaHq+QS8W8wE6l+eNnb/AGltZ7YAe0MYnbr71ywfSh7VXK0urirAoPylsIvO&#xA;Z8yC+kMf1hrsWXAVEzMX/veX2eRrTj9OS49qQzw5FK04FWHFXnP5m61r8Oo2MGixXMv6JX9L6gLa&#xA;lHSN+KQyVZarIglqBU1A2ycQEMU1zUPPFxD5hfTZZm0K6vhcx3wdxJBHAsbGGMV5ATl46U2oH2yQ&#xA;AV7K2VKoviqg+BUPJiqFkxVCynAr1P8A8ov/AM8f+xnL/wCBXk8RyhUXHhVFRnFUQhxVXU0FRufD&#xA;FXiHlnX18la/qEurWzz6jKpikijoAnJw5PNvtcqA7bU75eRYVlo/PXSR/wBKuf8A4NMj4apBq+o/&#xA;8rE8y6cbGIwJbhIpoJyoHAyFmdXrxJI249dtq9iBwhXuwypKQfmBa3d35O1K1tOH1idERBI6xqay&#xA;LyHJyF+zWmSjzVLvy+0o+V/L40+cia4klaeZo9lDMFWgruaBBvjKVlDJhrEf++z94yKsC0Pyjfr+&#xA;atxrryRSWhEtylHUSqZlMSqY/tbVPxdPeu2WcWyvTsgl2KtE4q0cCrTiq04qptiqm2KFJsVUXOKq&#xA;D4FQ0hxVDSHFUJKcCvVf/KLf88f+xnL/AOBXksRyhUXGcVRUZwqiUOKqkjUhc/5JxVBRaJo1+PVv&#xA;7C3u5F+FHniSQhetAXB2qcIKqy+UfKf/AFZbD/pFh/5pw8RV5hDbWs/50Q2dnCkFlaXFYreFQkaG&#xA;GDm5CqABV03yz+FXtwypLzr887v0/K9pbg0M92pI8VSNyfxIyePmhlPke04+UNHNyPVme1jkZ5Pi&#xA;Y815gEmp2BpkZc0p1cLaQW8s7xJwiRnb4R0UVPbAh5L+Rxub7XNb1W5dpZ/SjjeRySSZnLdSf+Ks&#xA;tmr2OuVpdXFWsCtHFVpxVYTiqCvtW0qxkjjvbyC1km/uUmlSMvvT4QxFevbDSFsmoWCxzStcxLFb&#xA;t6c8hdQsb7fC5rRT8Q2PjgpV7HFVBzgVQc4qh5DiqFkOKoWU4Feq/wDlFf8Anh/2M5f/AAK8kiOU&#xA;Ki4jiqKjOFUShxVu5akBHiQPxxVZZ6lpsUQR7uFHBPJWkQEGtNwThpUWur6V/wAtsH/I1P640ryr&#xA;8tv9yP5n6tqB3CfWplPgZJggHf8AZc5bLkr2gHKkvJfzzee6vdH0+3jaWRI5pmjQFmoxRQaDf9g5&#xA;ZjQ9NsNQ0a1sre1W+t+MESRCkqdEUL4jwyCUu8467p0flPV2gu4ZJjaTLGiSIzcnQqKAE9K1wgbo&#xA;Yv8AkNacPL2oXZFDPdemPcRRqf1yHJTV6dXK0sY/Ma88xWvleebQFc3odA7RLzkWIn4mRd9+nbYb&#xA;5KPNCH/LC98z3nlszeYRJ6/rMLZ5l4SNDQEFhQftVofDGVXsrLScilaTiqwnFWDedvJlx5l162id&#xA;vQ01tNu7e5ufTilIaWa3KogkrxcqjEOBtTJxlQQw/Wfy180SrrYspmXTbm7Ex09mBknNqqC2ZD9n&#xA;ixYmTkQfgXJCQV645ypVFzgVQc4qhpDiqGkOKoSU4Ferf+UU/wCeH/Yzl/8AAryOI5QqLiOKoqM4&#xA;VRMZxVLvNHl99f0o2CXslieYf1Yt60BXi61Xkp5dK5KJpWEr+Rdf+l3/ANOv/X7J+Iq8fkRX/pef&#xA;9Ov/AF+x8RWa+T/I1v5du7y8+tNdXN6qCRinpqCoq7Acn3d/iO+RlK1ZYDkVYf55/LtvNVzBONUk&#xA;shFGI2g4erE1GZg3DnHRvi65KMqVi4/IH/tff9On/X7JeIqvZfkT9XuY5jrnNVNJI/qtOaMOLpX1&#xA;jTkpIx8RWfeUPLNv5a0SPS4Zmn4M0jzMApZnNfsitNtuuQJtKd1wK1XFXVxVaTiq0nFVpOKqbHFC&#xA;mxxVRc4qoucCqDnFUNIcVQshwKhZTir1f/yif/PD/sZy/wDgV5DEcoVGRHFUVGcKomM4qiEOKqyH&#xA;FVZThVVU4qqA4qvBxVcDilcDirdcVdXFXVxVquKtE4oWk4pWE4oU2OKqbHFVFziqi5wKh3OKoeQ4&#xA;qhZTgVCSnFXrNf8AkCP/ADw/7Gsv/gV4/EcoVGRHFUVGcVRMZwqrh1VSzEKqirE7AAeOKpKn5ieS&#xA;/rYtf0rD6pNOVH9Otaf3vH0/+GyfAUoPzF+YugpYXtnpOrQDWeBW2ZgxjD1p/elfRr4ValeuGMD1&#xA;VOvIz+Y38vQP5gZXv3LMrKUJMR3QsY/grTw7YJVeyoTWte862d7fmx0xLqwgIW1pHI0j/uY2JJV9&#xA;x6svEcV/ZPuwQAhq38x+b2sdTmeyQz2yW5s0FneJ6hkCeqeLfE/Hk1FWhFPiIG+NBVs/mnz6Ulkt&#xA;vL9ESQhBLy5mFnQRuEVt2ILcl5VWm+GgqMsfMXmmTWLHT7vTxCrNMNQmFvcNGAqRtD6cwrEC7M9f&#xA;iYDjT5igqjP5q80lo2ttNcAgAwyWd1UsIC7H1KoqBpx6IBG395UrhoKr6p5j8222qXdvb6OZrOMk&#xA;WtyFkf1C1qrxqeJ/5aTwZvs8fChOAAKldz5t/MeIqG0KMFg2yR3E1AIlIclNvtk/B9qm3UHDQVMN&#xA;O8xeb5dQtbe800RwSzMHmW3nH7nor/ExWPcEnm3Ltw3BwEBUNc+YvzBtynHR4rl5DE6xRxyoBFJJ&#xA;R+UpdlDouxUjqeX2VOGgqd6De+YJ7QTatAiyyGLjDDEYTGJIlkfn6sr8uDOUNN/h6eETSsf1DzH5&#xA;9tZp1GmRPAY1e2mSCeXizXJTi6xuzsRAvM0A/UDKgqsmuedJdHFzHp8TX4lm9S2eKaH93GnJFX1G&#xA;B5O23LdcFBVPT/MXm2ZdQNzpRHpRv+jWEUkXrupUIWV2LIJPUDcWoVFdyQ1EgKidH8wajdywQ39h&#xA;NZzyCX1VME3BGTgUX1ePp7qW35UqMBCpu5yKqEhxVDSHFULIcCoSU4q9br/yA/8A54f9jWX/AMCv&#xA;HYmzHVGRHCqKjOKomM4VYz+aN3PB5NuRC5T1njikI6lGapH00yePmkPP5PKOlr+WsXmMNJ+kGkPL&#xA;4h6fH1zDTjTwFfnlvEeKkqlr5L0qX8tZ/MTPL+kUYlKEenxWUR8eNO43x4vVSvRfycvZ7jyZGkzF&#xA;hbTywxE9Qgo4H0FzleTmgta5aSNrt5PH5oNq/rwqdNa5lSOMG3TjGVRgUMgWR6j2PXfEcuSEMbWa&#xA;WATt5wBsk5qojuZhUSgqgaVJFesUxbierDirdMfgqKtnWKzkgtvNaAvqJvIZp7mS4pb8maG1LOVZ&#xA;VqqhwXNQDXrj8FV7C1vNBu4E1rzQHeGBOfrSycmT03hUsjtw3ejcyORKe5xu+ioSTT7x4RKnm76s&#xA;iTRWzTw3M8xE8Mgkkj4zSSJV1QsQVP8AL9iuH4KstfLWuvJYRJ5xnuZIZo0mh+syKXaOKSq8gGZu&#xA;XBnYN14npjfkrpEuLGFon82xPPblgl1Nc3BKejJydZIxIY348gGL79q02x+CpikU8Gl3mkaj5lRG&#xA;na1ks75LiRLtIOKhftkkGRLVzWp5MWrXeo+CpZLZXQsGuh5xX6nJ6sSXb3Uy8HNtJJIKiShIU+qv&#xA;L7KoONK1w/BVsUCILmC682CVnEoVv0hcq8TxFpHK+m8dRxZaq1eIXYmpoPgqZJPFZade2F55jSI3&#xA;TrdW13JcOZ4oJGUijyHpxRioFAB1rQsQqB0yG4NlPp7ea1nvru2SEXCTSsw9Cn1mVeTkRsqVUFOP&#xA;8zfFhPuVBXFtbTWgUebXivJldWuIry6MfqSTRNGUQy8QAsciAf5WPwVZJY6mvq6o3mtY7W4S5aKM&#xA;XEzwBZpHjDISa/uPWHGncL0pjfkrU8UUczej5nKRNIQge7uZCpE0xHWQ1KpPEtD8LcfiB2x+Csj8&#xA;vWGoWGlpb3182ozChFyxJJUIqjck1+zWvfr1yBKoyQ5FULIcVQkrYq9cr/yA3/nh/wBjWX/wK8bi&#xA;bMdUZE2FUXG2KomNsKsY/NGGabyhMIkaQrLEzBQSQoPXbJ4+aQks+n3w/JeK39B/XT960XE8ghui&#xA;/Lj1pxNflk79aq+n2V5/ypa4g9CT1mV3WPieRX6xyrTrTiK/LEn1qnn5OW88HlD99G0fqXMroGBF&#xA;Voq1391ORyc1Kh5juPK667qEd35duL27V4bm4mQv6cvpxCJZB8QUmNJlWlO598RdIQmn3vleSaWO&#xA;fTNQZbhHm9a5nkVXi+KaIkgpVmcCNeVX3CknCbVY+peTbNbkjytfQyIjLJEDMpKsxQw/CxpySRm9&#xA;Ppx60xo96o3X/NHlySVp7jRbmeaON4RcxSst0sVoGl5KQRIsbBmJYH4161FMQCqI0vUfJrXcGmNo&#xA;ptEmupbn0p3JUXKW/JZRFVt3ilHFqAVp+3QAG1Qlvr3laxks57fS7q4nDQTRi1vZbmblM8iBjGsl&#xA;XKJK4aoPxEJvUYaKqsM/k6XUIHfQ5vrOqCWrNM7PzvYo1uUVVY9OZRm2FVIBrjurjqflfzDq1rLc&#xA;eXrie7vXiVn9Vy8Qmi485URv3YRE5LWm3xrud2iFZZP5J8rz6cNNuLET2SusiwzPJJRkh9BCC7Fh&#xA;wj2XfbqN98hxFVCfyD5TnYvPZGVyHQM80xKpIpVo0PP4U4mnEbY8RVVuvJ/lucLzs1DRxpAkiM6O&#xA;sUaNEsYdWDBfTkZSAdwceIq3Y+WdD08ubK29AuJA3F5P93CNZKVbbl6CdO4r1JqklUFaeSvLNlU2&#xA;9nwcgAv6knL4X5jflt8W+2JkVa/wnoC2lva/ViYbUTCD95IGUXAIlHIMDRq9O21OgwcRVTh8s6Jb&#xA;PK8UDB5nMkjGSQ1Yuj13b+aJT/mceIqiwqRxrGgoiAKoqTsBQbnAqjI2BUJK2KoSVsCvX6/8gKr/&#xA;AMUf9jWZH8CvGImzHQjImwpRcbYqiY2xVEI2FVdGxVWVsVVlOKqinCq8HFV4OKrgcVbrirdcVWqF&#xA;UUUBRUmg23JqT9JxVxOKtE4qsJxVYxxVTY4FUmOKqLtiqi7Yqh3bFUNI2BULK2KoOVsCvYa/8gIr&#xA;/wAUf9jWZH8CvFomzHQjImxSio2wqio2xVEI2FVdGxVXVsVVVbFVRWxVUDYVXhsVXA4q3yxV3LFX&#xA;csVaJxVaTiq0tiqxmxVTZsCqTNiqi7YqoO2KoeRsCoaRsVQkrYqhJWwIex1/5ALX/l3/AOxvMj+B&#xA;LxOJsx0IyJsUouNsKoqNsVRCNiqujYVV0bFVVWxVUVsVVA2Krw2FVwbFW+WKt8sVa5Yq0WxVotiq&#xA;wtgVYzYqps2KqLNiqi7YqoO2KoeRsCoaRsVQsrYFQcrYoezV/wCQBV/5d/8AsbzI/gS8QhbMdCMi&#xA;bFUXG2FKKjbFURG2KohGwqrI2KqytiqorYqqBsVXhsVXBsVb5YVb5Yq1yxVotirRbAqwtiqxmxVS&#xA;ZsVUmbFVF2xVQdsCoeRsVQsjYqhJWwIQkrYq9or/ANY/V/5d/wDsbzI/gS//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Free Sample LCD Numbers Font</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Mark Inns</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Free sample for any use private or commercial. No attribution necessary, however a link back to www.markinns.com is appreciated. Full alphabet available at www.markinns.com/shop.</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>LCD</rdf:li>
               <rdf:li>Numbers</rdf:li>
               <rdf:li>Font</rdf:li>
               <rdf:li>Free Sample</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:0280117407206811A613E79F48E0CADF</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0280117407206811A613E79F48E0CADF</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:018011740720681197A5EB95888B3E87</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:026b9624-ac8f-7c47-87e7-5a864c14a5a0</stRef:instanceID>
            <stRef:documentID>xmp.did:018011740720681197A5EB95888B3E87</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:018011740720681197A5EB95888B3E87</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:018011740720681197A5EB95888B3E87</stEvt:instanceID>
                  <stEvt:when>2009-11-28T16:11:18Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0280117407206811A613E79F48E0CADF</stEvt:instanceID>
                  <stEvt:when>2010-01-01T15:33:58Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>147.142440</stDim:w>
            <stDim:h>173.175304</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=185 G=186 B=168</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>185</xmpG:red>
                           <xmpG:green>186</xmpG:green>
                           <xmpG:blue>168</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=100 G=105 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>100</xmpG:red>
                           <xmpG:green>105</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:AuthorsPosition>Illustrator</photoshop:AuthorsPosition>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpRights="http://ns.adobe.com/xap/1.0/rights/">
         <xmpRights:Marked>False</xmpRights:Marked>
         <xmpRights:WebStatement>http://www.markinns.co.uk/legal</xmpRights:WebStatement>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:Iptc4xmpCore="http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/">
         <Iptc4xmpCore:CreatorContactInfo rdf:parseType="Resource">
            <Iptc4xmpCore:CiUrlWork>http://www.markinns.com/</Iptc4xmpCore:CiUrlWork>
         </Iptc4xmpCore:CreatorContactInfo>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -490.891 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 490.891 li
417.097 490.891 li
417.097 0 li
cp
clp
[1 0 0 1 0 0 ]ct
417.097 490.891 mo
0 490.891 li
0 0 li
417.097 0 li
417.097 490.891 li
152.936 352.045 mo
144.081 355.146 li
144.081 355.146 143.761 357.291 144.39 358.523 cv
145.129 359.971 147.091 360.02 147.355 360.02 cv
147.374 360.02 147.384 360.02 147.384 360.02 cv
183.006 360.02 li
179.698 352.045 li
152.936 352.045 li
79.9258 352.045 mo
71.0703 355.146 li
71.0703 355.146 70.75 357.291 71.3789 358.523 cv
72.1197 359.971 74.0802 360.02 74.3436 360.02 cv
74.3628 360.02 74.373 360.02 74.373 360.02 cv
109.996 360.02 li
106.687 352.045 li
79.9258 352.045 li
190.968 321 mo
184.943 324.986 li
181.181 351.75 li
184.746 360.02 li
184.746 360.02 187.123 359.678 187.697 358.984 cv
188.253 358.313 188.42 356.984 188.42 356.984 cv
193.332 322.033 li
190.968 321 li
117.957 321 mo
111.931 324.986 li
108.169 351.75 li
111.736 360.02 li
111.736 360.02 114.111 359.678 114.685 358.984 cv
115.242 358.313 115.41 356.984 115.41 356.984 cv
120.322 322.033 li
117.957 321 li
151.539 321 mo
148.883 322.033 li
144.474 353.408 li
152.863 350.455 li
156.441 324.986 li
151.539 321 li
78.5274 321 mo
75.8731 322.033 li
71.4629 353.408 li
79.8515 350.455 li
83.4297 324.986 li
78.5274 321 li
230.5 340.443 mo
227.463 340.443 225 342.906 225 345.943 cv
225 348.98 227.463 351.443 230.5 351.443 cv
233.537 351.443 236 348.98 236 345.943 cv
236 342.906 233.537 340.443 230.5 340.443 cv
158.054 315.623 mo
152.029 319.611 li
156.933 323.598 li
184.843 323.598 li
190.869 319.611 li
185.964 315.623 li
158.054 315.623 li
85.045 315.623 mo
79.0196 319.611 li
83.9238 323.598 li
111.832 323.598 li
117.857 319.611 li
112.953 315.623 li
85.045 315.623 li
196.132 279 mo
190.244 287.27 li
186.482 314.033 li
191.386 318.02 li
194.042 316.986 li
198.954 282.037 li
198.954 282.037 199.16 280.707 198.792 280.036 cv
198.412 279.342 196.132 279 196.132 279 cv
154.001 285.613 mo
149.592 316.986 li
151.958 318.02 li
157.982 314.033 li
161.56 288.566 li
154.001 285.613 li
123.121 279 mo
117.232 287.27 li
113.47 314.033 li
118.375 318.02 li
121.031 316.986 li
125.943 282.037 li
125.943 282.037 126.148 280.707 125.781 280.036 cv
125.4 279.342 123.121 279 123.121 279 cv
80.9902 285.613 mo
76.5821 316.986 li
78.9493 318.02 li
84.9707 314.033 li
88.5488 288.566 li
80.9902 285.613 li
237.5 288 mo
234.463 288 232 290.463 232 293.5 cv
232 296.537 234.463 299 237.5 299 cv
240.537 299 243 296.537 243 293.5 cv
243 290.463 240.537 288 237.5 288 cv
158.742 279 mo
158.478 279 156.502 279.049 155.357 280.497 cv
154.38 281.729 154.099 283.874 154.099 283.874 cv
162.082 286.975 li
188.843 286.975 li
194.393 279 li
158.771 279 li
158.771 279 158.761 279 158.742 279 cv
85.7324 279 mo
85.4685 279 83.4906 279.049 82.3457 280.497 cv
81.3691 281.729 81.0879 283.874 81.0879 283.874 cv
89.0703 286.975 li
115.832 286.975 li
121.382 279 li
85.7618 279 li
85.7618 279 85.7517 279 85.7324 279 cv
295.926 244.045 mo
287.07 247.146 li
287.07 247.146 286.75 249.291 287.379 250.523 cv
288.12 251.97 290.08 252.02 290.344 252.02 cv
290.363 252.02 290.373 252.019 290.373 252.019 cv
325.996 252.019 li
322.687 244.045 li
295.926 244.045 li
224.937 244.045 mo
216.081 247.146 li
216.081 247.146 215.761 249.291 216.39 250.523 cv
217.13 251.97 219.091 252.02 219.355 252.02 cv
219.374 252.02 219.384 252.019 219.384 252.019 cv
255.007 252.019 li
251.698 244.045 li
224.937 244.045 li
152.936 244.045 mo
144.081 247.146 li
144.081 247.146 143.761 249.291 144.39 250.523 cv
145.129 251.97 147.091 252.02 147.355 252.02 cv
147.374 252.02 147.384 252.019 147.384 252.019 cv
183.006 252.019 li
179.698 244.045 li
152.936 244.045 li
80.936 244.045 mo
72.0816 247.146 li
72.0816 247.146 71.7612 249.291 72.3902 250.523 cv
73.1291 251.97 75.0912 252.02 75.3548 252.02 cv
75.3741 252.02 75.3842 252.019 75.3842 252.019 cv
111.006 252.019 li
107.698 244.045 li
80.936 244.045 li
333.957 213 mo
327.932 216.986 li
324.17 243.75 li
327.736 252.019 li
327.736 252.019 330.111 251.678 330.685 250.984 cv
331.242 250.313 331.41 248.984 331.41 248.984 cv
336.322 214.033 li
333.957 213 li
262.968 213 mo
256.942 216.986 li
253.181 243.75 li
256.747 252.019 li
256.747 252.019 259.122 251.678 259.696 250.984 cv
260.255 250.313 260.421 248.984 260.421 248.984 cv
265.333 214.033 li
262.968 213 li
190.969 213 mo
184.943 216.986 li
181.181 243.75 li
184.746 252.019 li
184.746 252.019 187.123 251.678 187.697 250.984 cv
188.254 250.313 188.42 248.984 188.42 248.984 cv
193.332 214.033 li
190.969 213 li
118.968 213 mo
112.943 216.986 li
109.181 243.75 li
112.746 252.019 li
112.746 252.019 115.123 251.678 115.697 250.984 cv
116.253 250.313 116.42 248.984 116.42 248.984 cv
121.333 214.033 li
118.968 213 li
294.527 213 mo
291.873 214.033 li
287.463 245.408 li
295.852 242.455 li
299.432 216.986 li
294.527 213 li
223.539 213 mo
220.884 214.033 li
216.474 245.408 li
224.863 242.455 li
228.442 216.986 li
223.539 213 li
151.539 213 mo
148.883 214.033 li
144.474 245.408 li
152.863 242.455 li
156.441 216.986 li
151.539 213 li
79.5385 213 mo
76.8833 214.033 li
72.4741 245.408 li
80.8628 242.455 li
84.4409 216.986 li
79.5385 213 li
301.045 207.623 mo
295.02 211.611 li
299.924 215.598 li
327.832 215.598 li
333.857 211.611 li
328.953 207.623 li
301.045 207.623 li
158.055 207.623 mo
152.029 211.611 li
156.934 215.598 li
184.844 215.598 li
190.869 211.611 li
185.965 207.623 li
158.055 207.623 li
86.0542 207.623 mo
80.0289 211.611 li
84.9331 215.598 li
112.843 215.598 li
118.869 211.611 li
113.964 207.623 li
86.0542 207.623 li
339.121 171.001 mo
333.232 179.27 li
329.471 206.033 li
334.375 210.019 li
337.031 208.986 li
341.943 174.037 li
341.943 174.037 342.148 172.708 341.781 172.036 cv
341.4 171.342 339.121 171.001 339.121 171.001 cv
296.99 177.613 mo
292.582 208.986 li
294.949 210.019 li
300.971 206.033 li
304.549 180.566 li
296.99 177.613 li
268.132 171.001 mo
262.243 179.27 li
258.481 206.033 li
263.386 210.019 li
266.042 208.986 li
270.954 174.037 li
270.954 174.037 271.159 172.708 270.792 172.036 cv
270.411 171.342 268.132 171.001 268.132 171.001 cv
226.001 177.613 mo
221.592 208.986 li
223.959 210.019 li
229.981 206.033 li
233.56 180.566 li
226.001 177.613 li
196.132 171.001 mo
190.244 179.27 li
186.482 206.033 li
191.387 210.019 li
194.041 208.986 li
198.954 174.037 li
198.954 174.037 199.159 172.708 198.792 172.036 cv
198.411 171.342 196.132 171.001 196.132 171.001 cv
154.001 177.613 mo
149.592 208.986 li
151.958 210.019 li
157.982 206.033 li
161.561 180.566 li
154.001 177.613 li
124.132 171.001 mo
118.244 179.27 li
114.482 206.033 li
119.386 210.019 li
122.042 208.986 li
126.954 174.037 li
126.954 174.037 127.16 172.708 126.792 172.036 cv
126.412 171.342 124.132 171.001 124.132 171.001 cv
82.0015 177.613 mo
77.5923 208.986 li
79.9584 210.019 li
85.982 206.033 li
89.56 180.566 li
82.0015 177.613 li
301.732 171 mo
301.469 171 299.491 171.05 298.346 172.497 cv
297.369 173.729 297.088 175.875 297.088 175.875 cv
305.07 178.975 li
331.832 178.975 li
337.383 171.001 li
301.762 171.001 li
301.762 171.001 301.752 171 301.732 171 cv
230.743 171 mo
230.479 171 228.501 171.05 227.356 172.497 cv
226.38 173.729 226.099 175.875 226.099 175.875 cv
234.081 178.975 li
260.843 178.975 li
266.394 171.001 li
230.772 171.001 li
230.772 171.001 230.762 171 230.743 171 cv
158.742 171 mo
158.478 171 156.502 171.05 155.357 172.497 cv
154.38 173.729 154.099 175.875 154.099 175.875 cv
162.082 178.975 li
188.844 178.975 li
194.394 171.001 li
158.771 171.001 li
158.771 171.001 158.761 171 158.742 171 cv
86.7417 171 mo
86.4781 171 84.5019 171.05 83.3569 172.497 cv
82.3803 173.729 82.0992 175.875 82.0992 175.875 cv
90.0816 178.975 li
116.843 178.975 li
122.393 171.001 li
86.771 171.001 li
86.771 171.001 86.761 171 86.7417 171 cv
296.936 136.045 mo
288.082 139.146 li
288.082 139.146 287.762 141.291 288.391 142.523 cv
289.13 143.971 291.092 144.02 291.355 144.02 cv
291.375 144.02 291.385 144.02 291.385 144.02 cv
327.006 144.02 li
323.697 136.045 li
296.936 136.045 li
224.937 136.045 mo
216.081 139.146 li
216.081 139.146 215.761 141.291 216.39 142.523 cv
217.13 143.971 219.091 144.02 219.354 144.02 cv
219.374 144.02 219.384 144.02 219.384 144.02 cv
255.007 144.02 li
251.698 136.045 li
224.937 136.045 li
152.937 136.045 mo
144.081 139.146 li
144.081 139.146 143.761 141.291 144.39 142.523 cv
145.13 143.971 147.091 144.02 147.355 144.02 cv
147.374 144.02 147.384 144.02 147.384 144.02 cv
183.007 144.02 li
179.698 136.045 li
152.937 136.045 li
80.937 136.045 mo
72.0816 139.146 li
72.0816 139.146 71.7612 141.291 72.3902 142.523 cv
73.13 143.971 75.0913 144.02 75.3549 144.02 cv
75.3741 144.02 75.3842 144.02 75.3842 144.02 cv
111.007 144.02 li
107.698 136.045 li
80.937 136.045 li
334.969 105 mo
328.943 108.986 li
325.182 135.75 li
328.746 144.02 li
328.746 144.02 331.123 143.678 331.697 142.984 cv
332.254 142.312 332.42 140.984 332.42 140.984 cv
337.334 106.033 li
334.969 105 li
262.968 105 mo
256.942 108.986 li
253.181 135.75 li
256.747 144.02 li
256.747 144.02 259.122 143.678 259.696 142.984 cv
260.253 142.312 260.421 140.983 260.421 140.983 cv
265.333 106.033 li
262.968 105 li
190.968 105 mo
184.943 108.986 li
181.181 135.75 li
184.747 144.02 li
184.747 144.02 187.123 143.678 187.697 142.984 cv
188.253 142.312 188.421 140.983 188.421 140.983 cv
193.333 106.033 li
190.968 105 li
118.968 105 mo
112.943 108.986 li
109.181 135.75 li
112.747 144.02 li
112.747 144.02 115.123 143.678 115.697 142.984 cv
116.254 142.312 116.421 140.983 116.421 140.983 cv
121.333 106.033 li
118.968 105 li
295.539 105 mo
292.883 106.033 li
288.475 137.408 li
296.863 134.455 li
300.441 108.986 li
295.539 105 li
223.538 105 mo
220.884 106.033 li
216.474 137.407 li
224.862 134.454 li
228.44 108.986 li
223.538 105 li
151.539 105 mo
148.884 106.033 li
144.474 137.407 li
152.863 134.454 li
156.442 108.986 li
151.539 105 li
79.5385 105 mo
76.8842 106.033 li
72.4741 137.407 li
80.8628 134.454 li
84.4419 108.986 li
79.5385 105 li
302.055 99.6231 mo
296.029 103.611 li
300.934 107.598 li
328.844 107.598 li
334.869 103.611 li
329.965 99.6231 li
302.055 99.6231 li
230.056 99.6231 mo
224.03 103.611 li
228.935 107.598 li
256.843 107.598 li
262.868 103.611 li
257.964 99.6231 li
230.056 99.6231 li
158.055 99.6231 mo
152.03 103.611 li
156.934 107.598 li
184.843 107.598 li
190.869 103.611 li
185.964 99.6231 li
158.055 99.6231 li
86.0552 99.6231 mo
80.0298 103.611 li
84.9341 107.598 li
112.843 107.598 li
118.869 103.611 li
113.964 99.6231 li
86.0552 99.6231 li
340.133 63.0004 mo
334.244 71.27 li
330.482 98.0332 li
335.387 102.02 li
338.043 100.986 li
342.955 66.0367 li
342.955 66.0367 343.16 64.7075 342.793 64.0357 cv
342.412 63.3423 340.133 63.0004 340.133 63.0004 cv
298.002 69.6128 mo
293.592 100.986 li
295.959 102.02 li
301.982 98.0332 li
305.561 72.5659 li
298.002 69.6128 li
268.132 63 mo
262.243 71.2695 li
258.481 98.0332 li
263.386 102.02 li
266.042 100.986 li
270.954 66.0362 li
270.954 66.0362 271.159 64.707 270.792 64.0352 cv
270.411 63.3418 268.132 63 268.132 63 cv
226.001 69.6123 mo
221.593 100.986 li
223.96 102.02 li
229.981 98.0332 li
233.56 72.5654 li
226.001 69.6123 li
196.132 63 mo
190.244 71.2695 li
186.482 98.0332 li
191.386 102.02 li
194.042 100.986 li
198.954 66.0362 li
198.954 66.0362 199.159 64.707 198.792 64.0352 cv
198.411 63.3418 196.132 63 196.132 63 cv
154.001 69.6123 mo
149.592 100.986 li
151.959 102.02 li
157.982 98.0332 li
161.56 72.5654 li
154.001 69.6123 li
124.132 63 mo
118.244 71.2695 li
114.482 98.0332 li
119.386 102.02 li
122.043 100.986 li
126.955 66.0362 li
126.955 66.0362 127.16 64.707 126.792 64.0352 cv
126.412 63.3418 124.132 63 124.132 63 cv
82.0015 69.6123 mo
77.5923 100.986 li
79.9594 102.02 li
85.982 98.0332 li
89.56 72.5654 li
82.0015 69.6123 li
302.742 63.0002 mo
302.478 63.0002 300.502 63.0495 299.357 64.4966 cv
298.381 65.729 298.1 67.8745 298.1 67.8745 cv
306.082 70.9751 li
332.844 70.9751 li
338.394 63.0004 li
302.771 63.0004 li
302.771 63.0004 302.761 63.0002 302.742 63.0002 cv
230.743 62.9997 mo
230.479 62.9997 228.501 63.049 227.356 64.4961 cv
226.38 65.7285 226.099 67.874 226.099 67.874 cv
234.081 70.9746 li
260.843 70.9746 li
266.394 63 li
230.772 63 li
230.772 63 230.762 62.9997 230.743 62.9997 cv
158.743 62.9997 mo
158.479 62.9997 156.502 63.049 155.357 64.4961 cv
154.38 65.7285 154.099 67.874 154.099 67.874 cv
162.082 70.9746 li
188.843 70.9746 li
194.394 63 li
158.772 63 li
158.772 63 158.762 62.9997 158.743 62.9997 cv
86.7426 62.9997 mo
86.4788 62.9997 84.5019 63.049 83.3569 64.4961 cv
82.3803 65.7285 82.0992 67.874 82.0992 67.874 cv
90.0816 70.9746 li
116.843 70.9746 li
122.393 63 li
86.7719 63 li
86.7719 63 86.7618 62.9997 86.7426 62.9997 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~8i9ZM8i9ZM8i9ZM8i9ZM8i9ZM8i9ZM8i9ZM8i9ZM8i9]N8i9]N9/]lP9/]lP9/]oQ9K$#R9K-,T9fH5U
9fH8V:,lGX:,lJY:H2SZ:H;\\:cVh^;*&%a;EJ4c;`e@e<'4Rh<BXdk<]spm=$C0q=?gBt=[6U#>!cp(
>XN6,>srK0?Ueo6@7P5;@RtJ?@nC\BAP7+IB2!INBME^SC/0'YCJT<^D,>]dDc2,kEDqJrE`If#FB4/*
G$'V2GZg":H<ZFCHsDgKIU89TJ7+`^Jmk,gKO^SqL1Hu%Lh<D/MJ/n:N,#@ENbbaOODV6\P&I]gP]4)r
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P2TI8kM]J8kM]J8kVfM91qoN92&#Q9MA,R
9MA/T9he>V9heAX:/4PZ:/4S\:JXe`:f("d;,L4h;GpFl;c?Xp<)cjt<E3(#<`W:'='&L+=BJ^/=]np3
>$G39>[1N>?!^iE?XR8M@:<SR@U`eV@q9+]AS,OeB4kjjBPD0qC2.L!CM[g(D/O60DfBZ8EH,u=EcZ;D
FEDYJG'8(RG^+LZH?spbI!g?jIXZcrJ:N3%JqAW-KS5&5L5(J=LkpnEMMd=MN/WaUNfK0]OH>TeP*2#m
~>
<~1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c7-J2)R6K2)R6K2)R6K2)[?N2E!HO2E!HO
2E!KQ2`EZS2`EZS2`E]U3&ilW3&ioY3B9,]3]];_3]]>a4$,Pe4?P_g4?Pbi4Zttm5!D1q5<hCu5s[h(
6:+"+6UO4/6q'O67Rfj;7n6'?84Z9C8P2TJ91qoO9MA,S9he>W:/4P[:JXb_:f1(f;GpCk;cH^r<E3%"
<`W:'=BJ[-=]np3>?b<9>[1Q??=$uG?smAM@:<VS@q0"YA7T7_AnG[gBP;*oC2.KuCMRa&D/F0.Df9Q4
~>
<~<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<``@(='&I)='&I)='&I)='/R,=BJ[-=BSd0=]nm1=^#!4
>$>*5>$>-7>?b<9>?b?;>[1Q??!UcC?=$rE?=$uG?XI2K?smDO@:<VS@U`hWA7T7_AS#IcAnG[gBP;*o
Bk_9rC27U$Ci+$,DJj?1DfBZ8EH,u=EcZ;DFEM_LG'A.TG^4R\H@(!dI!pHnIt3'#JV&K+K7no3Knb>;
LPUeDMMmFPNK&sYO-#KdP*;,pQ'R`&R$jA2S"-">StDXJTqS3TUSO``Vl-JmWiE,$Xfek3Z*CU@['[6L
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3&!WiE)!WiE*!s8W."9\i2"U,&5"
U,&6"pP8:#7(SA#mgnF$4@4M$k*OQ%1NdW%hK<b&eYik'GM8s()Ic()&aD4*$$%@+!;[L+sS?Z-7:/h.
4Qi!/M8\10etOA2E*TU3]fGe~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
184.843 323.598 mo
156.933 323.598 li
152.029 319.611 li
158.054 315.623 li
185.964 315.623 li
190.869 319.611 li
184.843 323.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~BhigSBhigSBhigSBhigSBhigSBhigSBhigSBhijTBhijTBhijTBhijTBhijTBhijTBhimUC/9'XC/9'X
C/9'XC/9*YC/9*YCJT3ZCJ]<\CJ]<\Cf#H_Cf#H_Cf,QaD,GZbD,G]dDGkogDGkogDc;,jDc;/lE)_Ao
EE%JqEE.SsE`I`!F&mr$F&mu&FB=2*F]aD-G$'P0G?Kb4G?Tk7G[$(;H!?4>H<cICHX2[GHsMgJI9r'O
IUA9SIpeNYJ74`]JRXucJmt,fKO^JmKk-_sL1Qr#LM!2)LhEG/M.i\5MJ8n:Me].@NGGLHNbkaOO);!U
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~BP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBP;'mBPD0pBk_9qBk_9q
Bk_9qBk_9qBk_<sC2.KuC2.KuC2.O"CMR^$CMR^$CMRa&Ci!p(Ci!s*D/F-,D/F0.DJj?0DJjB2Df9T6
E,]c8E,]c9EH,u=EcQ2@EcQ2AF)uDEFEDVIF`hhMG'8%PG'8%QGB\7UG^+IYH$O[]H?smaH[C*eI!g<i
I=6NlIXZ`pIt)rtJ:N0#JUrB'JqAW-KS5#3KnY57L5(G;LPLY?LkpkCM2@(GMMd:KMi3OQNK&pWNfK-[
~>
<~9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9hnGY:/4PZ:/4PZ
:/4PZ:/4PZ:/4PZ:/4S\:JXb^:JXb^:JXb^:JXe`:f'tb:f'tb:f("d;,L1f;,L4h;GpCj;GpFl;c?Un
;c?Uo<)cgr<)cgs<E3%!<E3%"<`W7&='&I)='&I*=BJ[.=]nm2>$>*5>$>*6>?b<:>[1N=>[1N>?!U`B
?=$rE?XI/I?smAM@:<SQ@:<SQ@U`eU@q0"YA7T4]AS#FaAnGXeB4kjiBP;'mBk_9qC2.KuCMR^$Ci!p(
~>
<~F`hhLF`hhLF`hhLF`hhLF`hhLF`hhLF`qqOG'8%PG'8%PG'8%PG'8%PG'8%PG'A.SGB\7TGB\7TGB\7T
GB\:VG^+IXG^+IXG^+LZH$O[\H$O^^H?sm`H?spbH[C*dH[C-fI!g?jI=6NlI=6QnIXZcrIt*!!J:N0#
J:N0$JUrB(JqAT,K7ef0KS5#4KnY58L5(G<LPLY@LkpkDM2@(HMMd:LMi3LPN/`gWNfK-\O,o?`OHGZg
P*1ukPEV5qQ'IW"QBml(R$a8.R@0M4S"#q<SXl=BSt;RHTV/!PU8"EXUnjf^V5:&dVl-JlWMuntX/i>'
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP89"pP;;#6tJ=#6tM?
#RC\A#RC\B#mgnE#mgnF$47+J$O[=M$O[=N$k*OR%1NaV%LrsZ%hB0^&.fBb&J5Tf&eYfj',)#n'GM5r
'bqGu()@]&(`4),)&X>2)]K_8*#ot>*ZcCF+<VgN+sJ6V,U=Z^-71)f-n$Mn.Olr!/1`A*0/#"61,:XA
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
151.958 318.02 mo
149.592 316.986 li
154.001 285.613 li
161.56 288.566 li
157.982 314.033 li
151.958 318.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Yb8)#Yb8)#Yb8)#Yb8)#Yb8)#Yb8)#Yb8)$Yb8)$Yb8)$Yb8)$Yb8)$Yb8)$Yb8)$Yb8)$YbA/%Z(\8'
Z(\8'Z(\8'Z(\8'Z(\8'Z(\;)Z(\;)Z(\;)Z(\;*Z(\;*Z(\;*Z(\;+Z(\;+Z(\>-Z(\>-Z(\>.Z(\>.
Z(\>/Z(\>/ZD"J2ZD+P3ZD+P4ZD+P5ZD+P5ZD+S7ZD+S8ZD+S8ZD+S9ZD+S:Z_F\<Z_F_>Z_F_>Z_F_?
Z_F_@Z_F_AZ_F_BZ_FbD[%akF[%jqG[%jqH[%jqI[%jqJ[%jqK[%jqL[A1(O[A1(P[A1(P[A1(Q[A1(R
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5YHY78Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@:Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR>ZEgdAZEgdAZEgdAZEgdA
ZEgdAZEgdAZEgdAZEgdAZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E['[3I['[3I['[3I['[3I['[3I
~>
<~T:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:_aJT:hjMTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sOTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BVU8"BV
~>
<~X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%
X/i;%X/i;%X/i;%X/i>'XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)XK8P+Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_.Y-+q1Y-+q1Y-+q1Y-+q1Y-+q2YHP.5YHP.5YHP.5YHP.5YHP.5YHP.6Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=Z*CR=ZEgdAZEgdAZEgdAZEgdAZEgdA
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xfeh0Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-5%4YHP.5
YHP.5YHP.5YHP.5YHP17Yct@9Yct@9YctC;Z*CR=Z*CR=Z*CU?ZEgdAZEggCZa7!EZa7$G['[3I['[6K
[C*EM[C*EN[^NWQ[^NWR\$riV\@B&Y\@B&Z\[f8^]"5Ja]"5Jb]=Y\f]Y(nj]tM+n^:q=q^:q=r^V@P!
^qdb$_83t(_SX1,_o'C0`5KU4`5KU4`Pog8`l?$<a2c6@aN2HDaiVZHb0%lLbKJ)PbKJ)Pbfn;Tc-=MX
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
188.843 286.975 mo
162.082 286.975 li
154.099 283.874 li
154.099 283.874 154.38 281.729 155.357 280.497 cv
156.502 279.049 158.478 279 158.742 279 cv
158.761 279 158.771 279 158.771 279 cv
194.393 279 li
188.843 286.975 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
191.386 318.02 mo
186.482 314.033 li
190.244 287.27 li
196.132 279 li
196.132 279 198.412 279.342 198.792 280.036 cv
199.16 280.707 198.954 282.037 198.954 282.037 cv
194.042 316.986 li
191.386 318.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
144.474 353.408 mo
148.883 322.033 li
151.539 321 li
156.441 324.986 li
152.863 350.455 li
144.474 353.408 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
147.355 360.02 mo
147.091 360.02 145.129 359.971 144.39 358.523 cv
143.761 357.291 144.081 355.146 144.081 355.146 cv
152.936 352.045 li
179.698 352.045 li
183.006 360.02 li
147.384 360.02 li
147.384 360.02 147.374 360.02 147.355 360.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
184.746 360.02 mo
181.181 351.75 li
184.943 324.986 li
190.968 321 li
193.332 322.033 li
188.42 356.984 li
188.42 356.984 188.253 358.313 187.697 358.984 cv
187.123 359.678 184.746 360.02 184.746 360.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
112.843 107.598 mo
84.9341 107.598 li
80.0298 103.611 li
86.0552 99.6231 li
113.964 99.6231 li
118.869 103.611 li
112.843 107.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
79.9594 102.02 mo
77.5923 100.986 li
82.0015 69.6123 li
89.56 72.5654 li
85.982 98.0332 li
79.9594 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
116.843 70.9746 mo
90.0816 70.9746 li
82.0992 67.874 li
82.0992 67.874 82.3803 65.7285 83.3569 64.4961 cv
84.5019 63.049 86.4788 62.9997 86.7426 62.9997 cv
86.7618 62.9997 86.7719 63 86.7719 63 cv
122.393 63 li
116.843 70.9746 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
119.386 102.02 mo
114.482 98.0332 li
118.244 71.2695 li
124.132 63 li
124.132 63 126.412 63.3418 126.792 64.0352 cv
127.16 64.707 126.955 66.0362 126.955 66.0362 cv
122.043 100.986 li
119.386 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
72.4741 137.407 mo
76.8842 106.033 li
79.5385 105 li
84.4419 108.986 li
80.8628 134.454 li
72.4741 137.407 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
75.3549 144.02 mo
75.0913 144.02 73.13 143.971 72.3902 142.523 cv
71.7612 141.291 72.0816 139.146 72.0816 139.146 cv
80.937 136.045 li
107.698 136.045 li
111.007 144.02 li
75.3842 144.02 li
75.3842 144.02 75.3741 144.02 75.3549 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
112.747 144.02 mo
109.181 135.75 li
112.943 108.986 li
118.968 105 li
121.333 106.033 li
116.421 140.983 li
116.421 140.983 116.254 142.312 115.697 142.984 cv
115.123 143.678 112.747 144.02 112.747 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
184.843 107.598 mo
156.934 107.598 li
152.03 103.611 li
158.055 99.6231 li
185.964 99.6231 li
190.869 103.611 li
184.843 107.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
151.959 102.02 mo
149.592 100.986 li
154.001 69.6123 li
161.56 72.5654 li
157.982 98.0332 li
151.959 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
188.843 70.9746 mo
162.082 70.9746 li
154.099 67.874 li
154.099 67.874 154.38 65.7285 155.357 64.4961 cv
156.502 63.049 158.479 62.9997 158.743 62.9997 cv
158.762 62.9997 158.772 63 158.772 63 cv
194.394 63 li
188.843 70.9746 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
191.386 102.02 mo
186.482 98.0332 li
190.244 71.2695 li
196.132 63 li
196.132 63 198.411 63.3418 198.792 64.0352 cv
199.159 64.707 198.954 66.0362 198.954 66.0362 cv
194.042 100.986 li
191.386 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
144.474 137.407 mo
148.884 106.033 li
151.539 105 li
156.442 108.986 li
152.863 134.454 li
144.474 137.407 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
147.355 144.02 mo
147.091 144.02 145.13 143.971 144.39 142.523 cv
143.761 141.291 144.081 139.146 144.081 139.146 cv
152.937 136.045 li
179.698 136.045 li
183.007 144.02 li
147.384 144.02 li
147.384 144.02 147.374 144.02 147.355 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
184.747 144.02 mo
181.181 135.75 li
184.943 108.986 li
190.968 105 li
193.333 106.033 li
188.421 140.983 li
188.421 140.983 188.253 142.312 187.697 142.984 cv
187.123 143.678 184.747 144.02 184.747 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
256.843 107.598 mo
228.935 107.598 li
224.03 103.611 li
230.056 99.6231 li
257.964 99.6231 li
262.868 103.611 li
256.843 107.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
223.96 102.02 mo
221.593 100.986 li
226.001 69.6123 li
233.56 72.5654 li
229.981 98.0332 li
223.96 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
260.843 70.9746 mo
234.081 70.9746 li
226.099 67.874 li
226.099 67.874 226.38 65.7285 227.356 64.4961 cv
228.501 63.049 230.479 62.9997 230.743 62.9997 cv
230.762 62.9997 230.772 63 230.772 63 cv
266.394 63 li
260.843 70.9746 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
263.386 102.02 mo
258.481 98.0332 li
262.243 71.2695 li
268.132 63 li
268.132 63 270.411 63.3418 270.792 64.0352 cv
271.159 64.707 270.954 66.0362 270.954 66.0362 cv
266.042 100.986 li
263.386 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
216.474 137.407 mo
220.884 106.033 li
223.538 105 li
228.44 108.986 li
224.862 134.454 li
216.474 137.407 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
219.354 144.02 mo
219.091 144.02 217.13 143.971 216.39 142.523 cv
215.761 141.291 216.081 139.146 216.081 139.146 cv
224.937 136.045 li
251.698 136.045 li
255.007 144.02 li
219.384 144.02 li
219.384 144.02 219.374 144.02 219.354 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
256.747 144.02 mo
253.181 135.75 li
256.942 108.986 li
262.968 105 li
265.333 106.033 li
260.421 140.983 li
260.421 140.983 260.253 142.312 259.696 142.984 cv
259.122 143.678 256.747 144.02 256.747 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
328.844 107.598 mo
300.934 107.598 li
296.029 103.611 li
302.055 99.6231 li
329.965 99.6231 li
334.869 103.611 li
328.844 107.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
295.959 102.02 mo
293.592 100.986 li
298.002 69.6128 li
305.561 72.5659 li
301.982 98.0332 li
295.959 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
332.844 70.9751 mo
306.082 70.9751 li
298.1 67.8745 li
298.1 67.8745 298.381 65.729 299.357 64.4966 cv
300.502 63.0495 302.478 63.0002 302.742 63.0002 cv
302.761 63.0002 302.771 63.0004 302.771 63.0004 cv
338.394 63.0004 li
332.844 70.9751 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
335.387 102.02 mo
330.482 98.0332 li
334.244 71.27 li
340.133 63.0004 li
340.133 63.0004 342.412 63.3423 342.793 64.0357 cv
343.16 64.7075 342.955 66.0367 342.955 66.0367 cv
338.043 100.986 li
335.387 102.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
288.475 137.408 mo
292.883 106.033 li
295.539 105 li
300.441 108.986 li
296.863 134.455 li
288.475 137.408 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
291.355 144.02 mo
291.092 144.02 289.13 143.971 288.391 142.523 cv
287.762 141.291 288.082 139.146 288.082 139.146 cv
296.936 136.045 li
323.697 136.045 li
327.006 144.02 li
291.385 144.02 li
291.385 144.02 291.375 144.02 291.355 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
328.746 144.02 mo
325.182 135.75 li
328.943 108.986 li
334.969 105 li
337.334 106.033 li
332.42 140.984 li
332.42 140.984 332.254 142.312 331.697 142.984 cv
331.123 143.678 328.746 144.02 328.746 144.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
112.843 215.598 mo
84.9331 215.598 li
80.0289 211.611 li
86.0542 207.623 li
113.964 207.623 li
118.869 211.611 li
112.843 215.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
79.9584 210.019 mo
77.5923 208.986 li
82.0015 177.613 li
89.56 180.566 li
85.982 206.033 li
79.9584 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
116.843 178.975 mo
90.0816 178.975 li
82.0992 175.875 li
82.0992 175.875 82.3803 173.729 83.3569 172.497 cv
84.5019 171.05 86.4781 171 86.7417 171 cv
86.761 171 86.771 171.001 86.771 171.001 cv
122.393 171.001 li
116.843 178.975 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
119.386 210.019 mo
114.482 206.033 li
118.244 179.27 li
124.132 171.001 li
124.132 171.001 126.412 171.342 126.792 172.036 cv
127.16 172.708 126.954 174.037 126.954 174.037 cv
122.042 208.986 li
119.386 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
72.4741 245.408 mo
76.8833 214.033 li
79.5385 213 li
84.4409 216.986 li
80.8628 242.455 li
72.4741 245.408 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
75.3548 252.02 mo
75.0912 252.02 73.1291 251.97 72.3902 250.523 cv
71.7612 249.291 72.0816 247.146 72.0816 247.146 cv
80.936 244.045 li
107.698 244.045 li
111.006 252.019 li
75.3842 252.019 li
75.3842 252.019 75.3741 252.02 75.3548 252.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
112.746 252.019 mo
109.181 243.75 li
112.943 216.986 li
118.968 213 li
121.333 214.033 li
116.42 248.984 li
116.42 248.984 116.253 250.313 115.697 250.984 cv
115.123 251.678 112.746 252.019 112.746 252.019 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
184.844 215.598 mo
156.934 215.598 li
152.029 211.611 li
158.055 207.623 li
185.965 207.623 li
190.869 211.611 li
184.844 215.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
151.958 210.019 mo
149.592 208.986 li
154.001 177.613 li
161.561 180.566 li
157.982 206.033 li
151.958 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
188.844 178.975 mo
162.082 178.975 li
154.099 175.875 li
154.099 175.875 154.38 173.729 155.357 172.497 cv
156.502 171.05 158.478 171 158.742 171 cv
158.761 171 158.771 171.001 158.771 171.001 cv
194.394 171.001 li
188.844 178.975 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
191.387 210.019 mo
186.482 206.033 li
190.244 179.27 li
196.132 171.001 li
196.132 171.001 198.411 171.342 198.792 172.036 cv
199.159 172.708 198.954 174.037 198.954 174.037 cv
194.041 208.986 li
191.387 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
144.474 245.408 mo
148.883 214.033 li
151.539 213 li
156.441 216.986 li
152.863 242.455 li
144.474 245.408 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
147.355 252.02 mo
147.091 252.02 145.129 251.97 144.39 250.523 cv
143.761 249.291 144.081 247.146 144.081 247.146 cv
152.936 244.045 li
179.698 244.045 li
183.006 252.019 li
147.384 252.019 li
147.384 252.019 147.374 252.02 147.355 252.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
184.746 252.019 mo
181.181 243.75 li
184.943 216.986 li
190.969 213 li
193.332 214.033 li
188.42 248.984 li
188.42 248.984 188.254 250.313 187.697 250.984 cv
187.123 251.678 184.746 252.019 184.746 252.019 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
223.959 210.019 mo
221.592 208.986 li
226.001 177.613 li
233.56 180.566 li
229.981 206.033 li
223.959 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
260.843 178.975 mo
234.081 178.975 li
226.099 175.875 li
226.099 175.875 226.38 173.729 227.356 172.497 cv
228.501 171.05 230.479 171 230.743 171 cv
230.762 171 230.772 171.001 230.772 171.001 cv
266.394 171.001 li
260.843 178.975 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
263.386 210.019 mo
258.481 206.033 li
262.243 179.27 li
268.132 171.001 li
268.132 171.001 270.411 171.342 270.792 172.036 cv
271.159 172.708 270.954 174.037 270.954 174.037 cv
266.042 208.986 li
263.386 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
216.474 245.408 mo
220.884 214.033 li
223.539 213 li
228.442 216.986 li
224.863 242.455 li
216.474 245.408 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
219.355 252.02 mo
219.091 252.02 217.13 251.97 216.39 250.523 cv
215.761 249.291 216.081 247.146 216.081 247.146 cv
224.937 244.045 li
251.698 244.045 li
255.007 252.019 li
219.384 252.019 li
219.384 252.019 219.374 252.02 219.355 252.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
256.747 252.019 mo
253.181 243.75 li
256.942 216.986 li
262.968 213 li
265.333 214.033 li
260.421 248.984 li
260.421 248.984 260.255 250.313 259.696 250.984 cv
259.122 251.678 256.747 252.019 256.747 252.019 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
327.832 215.598 mo
299.924 215.598 li
295.02 211.611 li
301.045 207.623 li
328.953 207.623 li
333.857 211.611 li
327.832 215.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
294.949 210.019 mo
292.582 208.986 li
296.99 177.613 li
304.549 180.566 li
300.971 206.033 li
294.949 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
331.832 178.975 mo
305.07 178.975 li
297.088 175.875 li
297.088 175.875 297.369 173.729 298.346 172.497 cv
299.491 171.05 301.469 171 301.732 171 cv
301.752 171 301.762 171.001 301.762 171.001 cv
337.383 171.001 li
331.832 178.975 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
334.375 210.019 mo
329.471 206.033 li
333.232 179.27 li
339.121 171.001 li
339.121 171.001 341.4 171.342 341.781 172.036 cv
342.148 172.708 341.943 174.037 341.943 174.037 cv
337.031 208.986 li
334.375 210.019 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
287.463 245.408 mo
291.873 214.033 li
294.527 213 li
299.432 216.986 li
295.852 242.455 li
287.463 245.408 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
290.344 252.02 mo
290.08 252.02 288.12 251.97 287.379 250.523 cv
286.75 249.291 287.07 247.146 287.07 247.146 cv
295.926 244.045 li
322.687 244.045 li
325.996 252.019 li
290.373 252.019 li
290.373 252.019 290.363 252.02 290.344 252.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
327.736 252.019 mo
324.17 243.75 li
327.932 216.986 li
333.957 213 li
336.322 214.033 li
331.41 248.984 li
331.41 248.984 331.242 250.313 330.685 250.984 cv
330.111 251.678 327.736 252.019 327.736 252.019 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
111.832 323.598 mo
83.9238 323.598 li
79.0196 319.611 li
85.045 315.623 li
112.953 315.623 li
117.857 319.611 li
111.832 323.598 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
78.9493 318.02 mo
76.5821 316.986 li
80.9902 285.613 li
88.5488 288.566 li
84.9707 314.033 li
78.9493 318.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
115.832 286.975 mo
89.0703 286.975 li
81.0879 283.874 li
81.0879 283.874 81.3691 281.729 82.3457 280.497 cv
83.4906 279.049 85.4685 279 85.7324 279 cv
85.7517 279 85.7618 279 85.7618 279 cv
121.382 279 li
115.832 286.975 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
118.375 318.02 mo
113.47 314.033 li
117.232 287.27 li
123.121 279 li
123.121 279 125.4 279.342 125.781 280.036 cv
126.148 280.707 125.943 282.037 125.943 282.037 cv
121.031 316.986 li
118.375 318.02 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
71.4629 353.408 mo
75.8731 322.033 li
78.5274 321 li
83.4297 324.986 li
79.8515 350.455 li
71.4629 353.408 li
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
74.3436 360.02 mo
74.0802 360.02 72.1197 359.971 71.3789 358.523 cv
70.75 357.291 71.0703 355.146 71.0703 355.146 cv
79.9258 352.045 li
106.687 352.045 li
109.996 360.02 li
74.373 360.02 li
74.373 360.02 74.3628 360.02 74.3436 360.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
111.736 360.02 mo
108.169 351.75 li
111.931 324.986 li
117.957 321 li
120.322 322.033 li
115.41 356.984 li
115.41 356.984 115.242 358.313 114.685 358.984 cv
114.111 359.678 111.736 360.02 111.736 360.02 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
302.672 296.079 mo
300.673 301.769 li
304.616 301.769 li
302.672 296.079 li
cp
306.038 306 mo
305.156 303.425 li
300.097 303.425 li
299.215 306 li
297.144 306 li
301.843 293.18 li
303.41 293.18 li
308.109 306 li
306.038 306 li
cp
.75021 .679683 .670222 .90164 cmyk
f
319.287 306 mo
319.287 297.43 li
316.335 303.677 li
314.894 303.677 li
311.869 297.43 li
311.869 306 li
309.925 306 li
309.925 293.18 li
311.869 293.18 li
315.614 301.157 li
319.287 293.18 li
321.231 293.18 li
321.231 306 li
319.287 306 li
cp
f
303.428 338.127 mo
300.619 338.127 li
300.619 342.394 li
303.428 342.394 li
304.778 342.394 305.696 341.62 305.696 340.27 cv
305.696 338.919 304.778 338.127 303.428 338.127 cv
cp
303.536 344.159 mo
300.619 344.159 li
300.619 349.2 li
298.675 349.2 li
298.675 336.38 li
303.536 336.38 li
306.038 336.38 307.642 338.037 307.642 340.27 cv
307.642 342.502 306.038 344.159 303.536 344.159 cv
cp
f
319.358 349.2 mo
319.358 340.63 li
316.406 346.877 li
314.966 346.877 li
311.94 340.63 li
311.94 349.2 li
309.996 349.2 li
309.996 336.38 li
311.94 336.38 li
315.687 344.357 li
319.358 336.38 li
321.304 336.38 li
321.304 349.2 li
319.358 349.2 li
cp
f
237.5 299 mo
234.463 299 232 296.537 232 293.5 cv
232 290.463 234.463 288 237.5 288 cv
240.537 288 243 290.463 243 293.5 cv
243 296.537 240.537 299 237.5 299 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
230.5 351.443 mo
227.463 351.443 225 348.98 225 345.943 cv
225 342.906 227.463 340.443 230.5 340.443 cv
233.537 340.443 236 342.906 236 345.943 cv
236 348.98 233.537 351.443 230.5 351.443 cv
level3{
gsave
clp
[255.426 0 0 425.117 208.548 245.445 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[255.426 0 0 425.117 208.548 245.445 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
92.1553 398.59 mo
92.1553 398.59 93.6846 395.324 100.319 395.408 cv
111.909 395.555 112.311 406.651 112.311 406.651 cv
112.311 424.791 li
112.311 424.791 112.311 428.822 108.28 428.822 cv
104.249 428.822 104.249 424.791 104.249 424.791 cv
104.249 406.651 li
104.249 406.651 104.249 403.397 100.319 403.387 cv
96.1865 403.376 96.1865 406.651 96.1865 406.651 cv
96.1865 424.791 li
96.1865 424.791 96.1865 428.822 92.1553 428.822 cv
88.1245 428.822 88.1245 424.791 88.1245 424.791 cv
88.1245 406.651 li
88.1245 406.651 88.1245 403.452 84.1934 403.415 cv
80.062 403.376 80.062 406.651 80.062 406.651 cv
80.0781 424.832 li
80.0781 424.832 80.062 428.822 76.0313 428.822 cv
72 428.822 72 424.791 72 424.791 cv
72 406.651 li
72 406.651 72.604 395.583 84.1934 395.436 cv
90.8286 395.352 92.1553 398.59 92.1553 398.59 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
112.311 391.057 mo
112.311 393.298 110.524 395.114 108.321 395.114 cv
106.118 395.114 104.332 393.298 104.332 391.057 cv
104.332 388.816 106.118 387 108.321 387 cv
110.524 387 112.311 388.816 112.311 391.057 cv
cp
f
130.496 390.871 mo
127.555 390.871 li
127.555 392.512 li
130.082 392.512 li
130.082 393.199 li
127.555 393.199 li
127.555 396 li
126.781 396 li
126.781 390.184 li
130.496 390.184 li
130.496 390.871 li
cp
.75021 .679683 .670222 .90164 cmyk
f
134.383 391.82 mo
134.383 391.653 134.354 391.506 134.295 391.377 cv
134.236 391.248 134.139 391.14 134.004 391.051 cv
133.892 390.976 133.759 390.923 133.605 390.893 cv
133.452 390.862 133.271 390.848 133.063 390.848 cv
132.152 390.848 li
132.152 393.043 li
132.934 393.043 li
133.178 393.043 133.392 393.021 133.574 392.979 cv
133.756 392.936 133.912 392.855 134.039 392.738 cv
134.156 392.629 134.243 392.503 134.299 392.361 cv
134.355 392.22 134.383 392.039 134.383 391.82 cv
cp
136.191 396 mo
135.188 396 li
133.242 393.688 li
132.152 393.688 li
132.152 396 li
131.379 396 li
131.379 390.184 li
133.008 390.184 li
133.359 390.184 133.652 390.206 133.887 390.252 cv
134.121 390.298 134.332 390.379 134.52 390.496 cv
134.73 390.629 134.895 390.796 135.014 390.998 cv
135.132 391.2 135.191 391.456 135.191 391.766 cv
135.191 392.185 135.086 392.536 134.875 392.818 cv
134.664 393.101 134.374 393.313 134.004 393.457 cv
136.191 396 li
cp
f
140.773 396 mo
136.941 396 li
136.941 390.184 li
140.773 390.184 li
140.773 390.871 li
137.715 390.871 li
137.715 392.465 li
140.773 392.465 li
140.773 393.152 li
137.715 393.152 li
137.715 395.313 li
140.773 395.313 li
140.773 396 li
cp
f
145.832 396 mo
142 396 li
142 390.184 li
145.832 390.184 li
145.832 390.871 li
142.773 390.871 li
142.773 392.465 li
145.832 392.465 li
145.832 393.152 li
142.773 393.152 li
142.773 395.313 li
145.832 395.313 li
145.832 396 li
cp
f
154.098 394.34 mo
154.098 394.566 154.045 394.79 153.939 395.012 cv
153.834 395.233 153.686 395.421 153.496 395.574 cv
153.288 395.741 153.045 395.871 152.768 395.965 cv
152.49 396.059 152.156 396.105 151.766 396.105 cv
151.346 396.105 150.969 396.066 150.635 395.988 cv
150.3 395.91 149.959 395.794 149.613 395.641 cv
149.613 394.672 li
149.668 394.672 li
149.962 394.917 150.302 395.105 150.688 395.238 cv
151.073 395.371 151.435 395.438 151.773 395.438 cv
152.252 395.438 152.625 395.348 152.893 395.168 cv
153.16 394.988 153.293 394.749 153.293 394.449 cv
153.293 394.191 153.23 394.001 153.104 393.879 cv
152.977 393.757 152.785 393.661 152.527 393.594 cv
152.332 393.542 152.121 393.499 151.893 393.465 cv
151.665 393.431 151.423 393.388 151.168 393.336 cv
150.652 393.227 150.27 393.04 150.021 392.775 cv
149.773 392.511 149.648 392.167 149.648 391.742 cv
149.648 391.255 149.854 390.856 150.266 390.545 cv
150.677 390.233 151.199 390.078 151.832 390.078 cv
152.241 390.078 152.616 390.117 152.957 390.195 cv
153.298 390.273 153.6 390.37 153.863 390.484 cv
153.863 391.398 li
153.809 391.398 li
153.587 391.211 153.296 391.056 152.936 390.932 cv
152.575 390.808 152.206 390.746 151.828 390.746 cv
151.414 390.746 151.082 390.832 150.83 391.004 cv
150.579 391.176 150.453 391.397 150.453 391.668 cv
150.453 391.91 150.516 392.101 150.641 392.238 cv
150.766 392.376 150.986 392.481 151.301 392.555 cv
151.467 392.591 151.705 392.636 152.012 392.688 cv
152.319 392.739 152.58 392.793 152.793 392.848 cv
153.225 392.962 153.551 393.136 153.77 393.367 cv
153.988 393.599 154.098 393.923 154.098 394.34 cv
cp
f
158.215 393.715 mo
157.195 390.859 li
156.172 393.715 li
158.215 393.715 li
cp
159.848 396 mo
159.023 396 li
158.453 394.379 li
155.938 394.379 li
155.367 396 li
154.582 396 li
156.699 390.184 li
157.73 390.184 li
159.848 396 li
cp
f
165.91 396 mo
165.137 396 li
165.137 390.988 li
163.52 394.398 li
163.059 394.398 li
161.453 390.988 li
161.453 396 li
160.73 396 li
160.73 390.184 li
161.785 390.184 li
163.336 393.422 li
164.836 390.184 li
165.91 390.184 li
165.91 396 li
cp
f
170.473 391.961 mo
170.473 391.761 170.438 391.586 170.367 391.438 cv
170.297 391.289 170.19 391.168 170.047 391.074 cv
169.922 390.993 169.779 390.936 169.619 390.9 cv
169.459 390.865 169.256 390.848 169.012 390.848 cv
168.246 390.848 li
168.246 393.172 li
168.898 393.172 li
169.211 393.172 169.465 393.144 169.66 393.088 cv
169.855 393.032 170.014 392.942 170.137 392.82 cv
170.259 392.695 170.346 392.563 170.396 392.426 cv
170.447 392.288 170.473 392.133 170.473 391.961 cv
cp
171.277 391.941 mo
171.277 392.199 171.232 392.438 171.143 392.658 cv
171.053 392.878 170.927 393.069 170.766 393.23 cv
170.565 393.431 170.328 393.581 170.055 393.682 cv
169.781 393.782 169.436 393.832 169.02 393.832 cv
168.246 393.832 li
168.246 396 li
167.473 396 li
167.473 390.184 li
169.051 390.184 li
169.4 390.184 169.695 390.213 169.938 390.271 cv
170.18 390.33 170.395 390.422 170.582 390.547 cv
170.803 390.695 170.975 390.88 171.096 391.102 cv
171.217 391.323 171.277 391.603 171.277 391.941 cv
cp
f
175.977 396 mo
172.297 396 li
172.297 390.184 li
173.07 390.184 li
173.07 395.313 li
175.977 395.313 li
175.977 396 li
cp
f
180.582 396 mo
176.75 396 li
176.75 390.184 li
180.582 390.184 li
180.582 390.871 li
177.523 390.871 li
177.523 392.465 li
180.582 392.465 li
180.582 393.152 li
177.523 393.152 li
177.523 395.313 li
180.582 395.313 li
180.582 396 li
cp
f
188.301 396 mo
184.621 396 li
184.621 390.184 li
185.395 390.184 li
185.395 395.313 li
188.301 395.313 li
188.301 396 li
cp
f
193.488 395.578 mo
193.345 395.641 193.215 395.699 193.1 395.754 cv
192.984 395.809 192.832 395.866 192.645 395.926 cv
192.486 395.976 192.313 396.018 192.127 396.053 cv
191.941 396.088 191.736 396.105 191.512 396.105 cv
191.09 396.105 190.707 396.046 190.361 395.928 cv
190.016 395.81 189.716 395.624 189.461 395.371 cv
189.211 395.124 189.016 394.81 188.875 394.428 cv
188.734 394.046 188.664 393.603 188.664 393.098 cv
188.664 392.618 188.732 392.19 188.867 391.813 cv
189.002 391.435 189.198 391.116 189.453 390.855 cv
189.701 390.603 190 390.41 190.35 390.277 cv
190.7 390.145 191.088 390.078 191.516 390.078 cv
191.828 390.078 192.14 390.116 192.451 390.191 cv
192.762 390.267 193.108 390.399 193.488 390.59 cv
193.488 391.508 li
193.43 391.508 li
193.109 391.239 192.792 391.044 192.477 390.922 cv
192.162 390.8 191.824 390.738 191.465 390.738 cv
191.17 390.738 190.906 390.786 190.67 390.881 cv
190.434 390.976 190.224 391.124 190.039 391.324 cv
189.859 391.52 189.719 391.767 189.619 392.064 cv
189.519 392.362 189.469 392.707 189.469 393.098 cv
189.469 393.507 189.524 393.858 189.635 394.152 cv
189.746 394.446 189.888 394.687 190.063 394.871 cv
190.245 395.063 190.458 395.206 190.701 395.299 cv
190.945 395.392 191.202 395.438 191.473 395.438 cv
191.845 395.438 192.194 395.374 192.52 395.246 cv
192.845 395.118 193.15 394.927 193.434 394.672 cv
193.488 394.672 li
193.488 395.578 li
cp
f
198.688 393.086 mo
198.688 392.63 198.608 392.246 198.449 391.934 cv
198.291 391.621 198.053 391.375 197.738 391.195 cv
197.509 391.065 197.266 390.975 197.008 390.924 cv
196.75 390.873 196.441 390.848 196.082 390.848 cv
195.355 390.848 li
195.355 395.336 li
196.082 395.336 li
196.455 395.336 196.779 395.309 197.057 395.254 cv
197.334 395.199 197.588 395.098 197.82 394.949 cv
198.109 394.765 198.326 394.521 198.471 394.219 cv
198.615 393.917 198.688 393.539 198.688 393.086 cv
cp
199.496 393.098 mo
199.496 393.626 199.381 394.105 199.15 394.535 cv
198.92 394.965 198.613 395.298 198.23 395.535 cv
197.965 395.699 197.668 395.817 197.342 395.891 cv
197.015 395.964 196.584 396 196.051 396 cv
194.582 396 li
194.582 390.184 li
196.035 390.184 li
196.603 390.184 197.054 390.225 197.389 390.307 cv
197.723 390.389 198.006 390.501 198.238 390.645 cv
198.634 390.892 198.943 391.222 199.164 391.633 cv
199.385 392.044 199.496 392.532 199.496 393.098 cv
cp
f
207.996 396 mo
207.039 396 li
204.281 390.797 li
204.281 396 li
203.559 396 li
203.559 390.184 li
204.758 390.184 li
207.273 394.934 li
207.273 390.184 li
207.996 390.184 li
207.996 396 li
cp
f
213.922 393.664 mo
213.922 394.086 213.875 394.454 213.783 394.768 cv
213.691 395.081 213.539 395.343 213.328 395.551 cv
213.127 395.749 212.893 395.894 212.625 395.984 cv
212.357 396.075 212.044 396.121 211.688 396.121 cv
211.323 396.121 211.005 396.073 210.734 395.977 cv
210.463 395.88 210.236 395.738 210.051 395.551 cv
209.84 395.337 209.688 395.079 209.596 394.777 cv
209.503 394.476 209.457 394.104 209.457 393.664 cv
209.457 390.184 li
210.23 390.184 li
210.23 393.703 li
210.23 394.019 210.252 394.267 210.295 394.449 cv
210.338 394.632 210.41 394.797 210.512 394.945 cv
210.626 395.114 210.782 395.242 210.979 395.328 cv
211.175 395.414 211.412 395.457 211.688 395.457 cv
211.966 395.457 212.203 395.415 212.398 395.33 cv
212.594 395.245 212.75 395.117 212.867 394.945 cv
212.969 394.797 213.041 394.627 213.084 394.436 cv
213.127 394.244 213.148 394.007 213.148 393.723 cv
213.148 390.184 li
213.922 390.184 li
213.922 393.664 li
cp
f
220.578 396 mo
219.805 396 li
219.805 390.988 li
218.188 394.398 li
217.727 394.398 li
216.121 390.988 li
216.121 396 li
215.398 396 li
215.398 390.184 li
216.453 390.184 li
218.004 393.422 li
219.504 390.184 li
220.578 390.184 li
220.578 396 li
cp
f
225.723 394.242 mo
225.723 394.008 225.688 393.821 225.617 393.684 cv
225.547 393.546 225.419 393.429 225.234 393.332 cv
225.109 393.267 224.958 393.225 224.779 393.205 cv
224.601 393.186 224.384 393.176 224.129 393.176 cv
222.914 393.176 li
222.914 395.34 li
223.938 395.34 li
224.276 395.34 224.553 395.322 224.77 395.287 cv
224.986 395.252 225.163 395.188 225.301 395.094 cv
225.447 394.992 225.553 394.876 225.621 394.746 cv
225.689 394.616 225.723 394.448 225.723 394.242 cv
cp
225.227 391.59 mo
225.227 391.449 225.203 391.331 225.156 391.234 cv
225.109 391.138 225.034 391.06 224.93 391 cv
224.807 390.93 224.659 390.886 224.484 390.869 cv
224.31 390.853 224.094 390.844 223.836 390.844 cv
222.914 390.844 li
222.914 392.523 li
223.914 392.523 li
224.156 392.523 224.349 392.511 224.492 392.486 cv
224.635 392.462 224.768 392.41 224.891 392.332 cv
225.013 392.254 225.1 392.153 225.15 392.029 cv
225.201 391.905 225.227 391.759 225.227 391.59 cv
cp
226.527 394.211 mo
226.527 394.5 226.473 394.755 226.363 394.977 cv
226.254 395.198 226.107 395.38 225.922 395.523 cv
225.703 395.695 225.463 395.817 225.201 395.891 cv
224.939 395.964 224.607 396 224.203 396 cv
222.141 396 li
222.141 390.184 li
223.863 390.184 li
224.288 390.184 224.605 390.199 224.816 390.23 cv
225.027 390.262 225.229 390.327 225.422 390.426 cv
225.635 390.538 225.791 390.682 225.887 390.857 cv
225.983 391.033 226.031 391.243 226.031 391.488 cv
226.031 391.765 225.961 391.999 225.82 392.193 cv
225.68 392.388 225.492 392.543 225.258 392.66 cv
225.258 392.691 li
225.651 392.772 225.961 392.944 226.188 393.209 cv
226.414 393.474 226.527 393.808 226.527 394.211 cv
cp
f
231.457 396 mo
227.625 396 li
227.625 390.184 li
231.457 390.184 li
231.457 390.871 li
228.398 390.871 li
228.398 392.465 li
231.457 392.465 li
231.457 393.152 li
228.398 393.152 li
228.398 395.313 li
231.457 395.313 li
231.457 396 li
cp
f
235.688 391.82 mo
235.688 391.653 235.658 391.506 235.6 391.377 cv
235.541 391.248 235.444 391.14 235.309 391.051 cv
235.196 390.976 235.063 390.923 234.91 390.893 cv
234.757 390.862 234.575 390.848 234.367 390.848 cv
233.457 390.848 li
233.457 393.043 li
234.238 393.043 li
234.483 393.043 234.696 393.021 234.879 392.979 cv
235.062 392.936 235.216 392.855 235.344 392.738 cv
235.461 392.629 235.548 392.503 235.604 392.361 cv
235.659 392.22 235.688 392.039 235.688 391.82 cv
cp
237.496 396 mo
236.492 396 li
234.547 393.688 li
233.457 393.688 li
233.457 396 li
232.684 396 li
232.684 390.184 li
234.313 390.184 li
234.664 390.184 234.957 390.206 235.191 390.252 cv
235.426 390.298 235.637 390.379 235.824 390.496 cv
236.035 390.629 236.2 390.796 236.318 390.998 cv
236.437 391.2 236.496 391.456 236.496 391.766 cv
236.496 392.185 236.391 392.536 236.18 392.818 cv
235.969 393.101 235.679 393.313 235.309 393.457 cv
237.496 396 li
cp
f
242.473 394.34 mo
242.473 394.566 242.42 394.79 242.314 395.012 cv
242.209 395.233 242.062 395.421 241.871 395.574 cv
241.663 395.741 241.42 395.871 241.143 395.965 cv
240.865 396.059 240.531 396.105 240.141 396.105 cv
239.722 396.105 239.345 396.066 239.01 395.988 cv
238.675 395.91 238.335 395.794 237.988 395.641 cv
237.988 394.672 li
238.043 394.672 li
238.337 394.917 238.677 395.105 239.063 395.238 cv
239.448 395.371 239.81 395.438 240.148 395.438 cv
240.628 395.438 241.001 395.348 241.268 395.168 cv
241.534 394.988 241.668 394.749 241.668 394.449 cv
241.668 394.191 241.604 394.001 241.479 393.879 cv
241.353 393.757 241.16 393.661 240.902 393.594 cv
240.707 393.542 240.495 393.499 240.268 393.465 cv
240.04 393.431 239.798 393.388 239.543 393.336 cv
239.027 393.227 238.646 393.04 238.396 392.775 cv
238.147 392.511 238.023 392.167 238.023 391.742 cv
238.023 391.255 238.229 390.856 238.641 390.545 cv
239.052 390.233 239.574 390.078 240.207 390.078 cv
240.616 390.078 240.991 390.117 241.332 390.195 cv
241.673 390.273 241.976 390.37 242.238 390.484 cv
242.238 391.398 li
242.184 391.398 li
241.962 391.211 241.671 391.056 241.311 390.932 cv
240.95 390.808 240.581 390.746 240.203 390.746 cv
239.789 390.746 239.456 390.832 239.205 391.004 cv
238.954 391.176 238.828 391.397 238.828 391.668 cv
238.828 391.91 238.891 392.101 239.016 392.238 cv
239.141 392.376 239.36 392.481 239.676 392.555 cv
239.843 392.591 240.079 392.636 240.387 392.688 cv
240.694 392.739 240.954 392.793 241.168 392.848 cv
241.601 392.962 241.926 393.136 242.145 393.367 cv
242.363 393.599 242.473 393.923 242.473 394.34 cv
cp
f
250.242 390.871 mo
247.301 390.871 li
247.301 392.512 li
249.828 392.512 li
249.828 393.199 li
247.301 393.199 li
247.301 396 li
246.527 396 li
246.527 390.184 li
250.242 390.184 li
250.242 390.871 li
cp
f
255.391 393.094 mo
255.391 392.339 255.222 391.756 254.883 391.346 cv
254.544 390.936 254.082 390.73 253.496 390.73 cv
252.905 390.73 252.44 390.936 252.104 391.346 cv
251.767 391.756 251.598 392.339 251.598 393.094 cv
251.598 393.856 251.77 394.44 252.113 394.846 cv
252.457 395.251 252.918 395.453 253.496 395.453 cv
254.074 395.453 254.534 395.251 254.877 394.846 cv
255.22 394.44 255.391 393.856 255.391 393.094 cv
cp
255.461 390.852 mo
255.698 391.112 255.88 391.431 256.006 391.809 cv
256.132 392.187 256.195 392.614 256.195 393.094 cv
256.195 393.573 256.131 394.002 256.002 394.381 cv
255.873 394.76 255.692 395.075 255.461 395.328 cv
255.222 395.591 254.938 395.789 254.611 395.922 cv
254.284 396.055 253.911 396.121 253.492 396.121 cv
253.083 396.121 252.712 396.054 252.377 395.918 cv
252.042 395.782 251.758 395.586 251.523 395.328 cv
251.289 395.07 251.108 394.754 250.982 394.379 cv
250.856 394.004 250.793 393.575 250.793 393.094 cv
250.793 392.62 250.855 392.194 250.98 391.818 cv
251.105 391.442 251.288 391.12 251.527 390.852 cv
251.757 390.597 252.041 390.401 252.381 390.266 cv
252.721 390.13 253.091 390.063 253.492 390.063 cv
253.909 390.063 254.283 390.131 254.615 390.268 cv
254.947 390.404 255.229 390.599 255.461 390.852 cv
cp
f
261.859 396 mo
260.902 396 li
258.145 390.797 li
258.145 396 li
257.422 396 li
257.422 390.184 li
258.621 390.184 li
261.137 394.934 li
261.137 390.184 li
261.859 390.184 li
261.859 396 li
cp
f
267.555 390.871 mo
265.477 390.871 li
265.477 396 li
264.703 396 li
264.703 390.871 li
262.625 390.871 li
262.625 390.184 li
267.555 390.184 li
267.555 390.871 li
cp
f
273.402 393.809 mo
270.965 393.809 li
270.965 393.102 li
273.402 393.102 li
273.402 393.809 li
cp
f
281.309 390.871 mo
278.367 390.871 li
278.367 392.512 li
280.895 392.512 li
280.895 393.199 li
278.367 393.199 li
278.367 396 li
277.594 396 li
277.594 390.184 li
281.309 390.184 li
281.309 390.871 li
cp
f
285.195 391.82 mo
285.195 391.653 285.166 391.506 285.107 391.377 cv
285.049 391.248 284.952 391.14 284.816 391.051 cv
284.704 390.976 284.571 390.923 284.418 390.893 cv
284.265 390.862 284.083 390.848 283.875 390.848 cv
282.965 390.848 li
282.965 393.043 li
283.746 393.043 li
283.991 393.043 284.204 393.021 284.387 392.979 cv
284.569 392.936 284.724 392.855 284.852 392.738 cv
284.969 392.629 285.056 392.503 285.111 392.361 cv
285.167 392.22 285.195 392.039 285.195 391.82 cv
cp
287.004 396 mo
286 396 li
284.055 393.688 li
282.965 393.688 li
282.965 396 li
282.191 396 li
282.191 390.184 li
283.82 390.184 li
284.172 390.184 284.465 390.206 284.699 390.252 cv
284.934 390.298 285.145 390.379 285.332 390.496 cv
285.543 390.629 285.708 390.796 285.826 390.998 cv
285.944 391.2 286.004 391.456 286.004 391.766 cv
286.004 392.185 285.898 392.536 285.688 392.818 cv
285.477 393.101 285.187 393.313 284.816 393.457 cv
287.004 396 li
cp
f
291.586 396 mo
287.754 396 li
287.754 390.184 li
291.586 390.184 li
291.586 390.871 li
288.527 390.871 li
288.527 392.465 li
291.586 392.465 li
291.586 393.152 li
288.527 393.152 li
288.527 395.313 li
291.586 395.313 li
291.586 396 li
cp
f
296.645 396 mo
292.813 396 li
292.813 390.184 li
296.645 390.184 li
296.645 390.871 li
293.586 390.871 li
293.586 392.465 li
296.645 392.465 li
296.645 393.152 li
293.586 393.152 li
293.586 395.313 li
296.645 395.313 li
296.645 396 li
cp
f
304.398 390.871 mo
301.457 390.871 li
301.457 392.512 li
303.984 392.512 li
303.984 393.199 li
301.457 393.199 li
301.457 396 li
300.684 396 li
300.684 390.184 li
304.398 390.184 li
304.398 390.871 li
cp
f
309.547 393.094 mo
309.547 392.339 309.378 391.756 309.039 391.346 cv
308.7 390.936 308.238 390.73 307.652 390.73 cv
307.062 390.73 306.597 390.936 306.26 391.346 cv
305.923 391.756 305.754 392.339 305.754 393.094 cv
305.754 393.856 305.926 394.44 306.27 394.846 cv
306.613 395.251 307.074 395.453 307.652 395.453 cv
308.23 395.453 308.69 395.251 309.033 394.846 cv
309.376 394.44 309.547 393.856 309.547 393.094 cv
cp
309.617 390.852 mo
309.854 391.112 310.036 391.431 310.162 391.809 cv
310.288 392.187 310.352 392.614 310.352 393.094 cv
310.352 393.573 310.287 394.002 310.158 394.381 cv
310.029 394.76 309.849 395.075 309.617 395.328 cv
309.378 395.591 309.095 395.789 308.768 395.922 cv
308.44 396.055 308.067 396.121 307.648 396.121 cv
307.239 396.121 306.868 396.054 306.533 395.918 cv
306.198 395.782 305.914 395.586 305.68 395.328 cv
305.445 395.07 305.265 394.754 305.139 394.379 cv
305.013 394.004 304.949 393.575 304.949 393.094 cv
304.949 392.62 305.012 392.194 305.137 391.818 cv
305.262 391.442 305.444 391.12 305.684 390.852 cv
305.913 390.597 306.197 390.401 306.537 390.266 cv
306.877 390.13 307.247 390.063 307.648 390.063 cv
308.065 390.063 308.439 390.131 308.771 390.268 cv
309.104 390.404 309.386 390.599 309.617 390.852 cv
cp
f
314.582 391.82 mo
314.582 391.653 314.553 391.506 314.494 391.377 cv
314.436 391.248 314.339 391.14 314.203 391.051 cv
314.091 390.976 313.958 390.923 313.805 390.893 cv
313.651 390.862 313.47 390.848 313.262 390.848 cv
312.352 390.848 li
312.352 393.043 li
313.133 393.043 li
313.378 393.043 313.591 393.021 313.773 392.979 cv
313.956 392.936 314.11 392.855 314.238 392.738 cv
314.355 392.629 314.442 392.503 314.498 392.361 cv
314.554 392.22 314.582 392.039 314.582 391.82 cv
cp
316.391 396 mo
315.387 396 li
313.441 393.688 li
312.352 393.688 li
312.352 396 li
311.578 396 li
311.578 390.184 li
313.207 390.184 li
313.559 390.184 313.852 390.206 314.086 390.252 cv
314.32 390.298 314.531 390.379 314.719 390.496 cv
314.93 390.629 315.095 390.796 315.213 390.998 cv
315.331 391.2 315.391 391.456 315.391 391.766 cv
315.391 392.185 315.285 392.536 315.074 392.818 cv
314.863 393.101 314.573 393.313 314.203 393.457 cv
316.391 396 li
cp
f
322.906 393.715 mo
321.887 390.859 li
320.863 393.715 li
322.906 393.715 li
cp
324.539 396 mo
323.715 396 li
323.145 394.379 li
320.629 394.379 li
320.059 396 li
319.273 396 li
321.391 390.184 li
322.422 390.184 li
324.539 396 li
cp
f
329.102 396 mo
325.422 396 li
325.422 390.184 li
326.195 390.184 li
326.195 395.313 li
329.102 395.313 li
329.102 396 li
cp
f
333.555 396 mo
329.875 396 li
329.875 390.184 li
330.648 390.184 li
330.648 395.313 li
333.555 395.313 li
333.555 396 li
cp
f
129.781 402.961 mo
129.781 402.761 129.746 402.586 129.676 402.438 cv
129.605 402.289 129.499 402.168 129.355 402.074 cv
129.23 401.993 129.088 401.936 128.928 401.9 cv
128.768 401.865 128.565 401.848 128.32 401.848 cv
127.555 401.848 li
127.555 404.172 li
128.207 404.172 li
128.52 404.172 128.773 404.144 128.969 404.088 cv
129.164 404.032 129.323 403.942 129.445 403.82 cv
129.568 403.695 129.654 403.563 129.705 403.426 cv
129.756 403.288 129.781 403.133 129.781 402.961 cv
cp
130.586 402.941 mo
130.586 403.199 130.541 403.438 130.451 403.658 cv
130.361 403.878 130.236 404.069 130.074 404.23 cv
129.874 404.431 129.637 404.581 129.363 404.682 cv
129.09 404.782 128.745 404.832 128.328 404.832 cv
127.555 404.832 li
127.555 407 li
126.781 407 li
126.781 401.184 li
128.359 401.184 li
128.708 401.184 129.004 401.213 129.246 401.271 cv
129.488 401.33 129.703 401.422 129.891 401.547 cv
130.112 401.695 130.283 401.88 130.404 402.102 cv
130.525 402.323 130.586 402.603 130.586 402.941 cv
cp
f
134.609 402.82 mo
134.609 402.653 134.58 402.506 134.521 402.377 cv
134.463 402.248 134.366 402.14 134.23 402.051 cv
134.119 401.976 133.986 401.923 133.832 401.893 cv
133.678 401.862 133.498 401.848 133.289 401.848 cv
132.379 401.848 li
132.379 404.043 li
133.16 404.043 li
133.405 404.043 133.619 404.021 133.801 403.979 cv
133.983 403.936 134.138 403.855 134.266 403.738 cv
134.383 403.629 134.469 403.503 134.525 403.361 cv
134.582 403.22 134.609 403.039 134.609 402.82 cv
cp
136.418 407 mo
135.414 407 li
133.469 404.688 li
132.379 404.688 li
132.379 407 li
131.605 407 li
131.605 401.184 li
133.234 401.184 li
133.586 401.184 133.879 401.206 134.113 401.252 cv
134.348 401.298 134.559 401.379 134.746 401.496 cv
134.957 401.629 135.122 401.796 135.24 401.998 cv
135.359 402.2 135.418 402.456 135.418 402.766 cv
135.418 403.185 135.313 403.536 135.102 403.818 cv
134.891 404.101 134.6 404.313 134.23 404.457 cv
136.418 407 li
cp
f
139.219 407 mo
136.922 407 li
136.922 406.406 li
137.684 406.406 li
137.684 401.777 li
136.922 401.777 li
136.922 401.184 li
139.219 401.184 li
139.219 401.777 li
138.457 401.777 li
138.457 406.406 li
139.219 406.406 li
139.219 407 li
cp
f
145.121 401.184 mo
143.004 407 li
141.973 407 li
139.855 401.184 li
140.684 401.184 li
142.508 406.301 li
144.332 401.184 li
145.121 401.184 li
cp
f
148.723 404.715 mo
147.703 401.859 li
146.68 404.715 li
148.723 404.715 li
cp
150.355 407 mo
149.531 407 li
148.961 405.379 li
146.445 405.379 li
145.875 407 li
145.09 407 li
147.207 401.184 li
148.238 401.184 li
150.355 407 li
cp
f
154.918 401.871 mo
152.84 401.871 li
152.84 407 li
152.066 407 li
152.066 401.871 li
149.988 401.871 li
149.988 401.184 li
154.918 401.184 li
154.918 401.871 li
cp
f
159.531 407 mo
155.699 407 li
155.699 401.184 li
159.531 401.184 li
159.531 401.871 li
156.473 401.871 li
156.473 403.465 li
159.531 403.465 li
159.531 404.152 li
156.473 404.152 li
156.473 406.313 li
159.531 406.313 li
159.531 407 li
cp
f
166.523 404.715 mo
165.504 401.859 li
164.48 404.715 li
166.523 404.715 li
cp
168.156 407 mo
167.332 407 li
166.762 405.379 li
164.246 405.379 li
163.676 407 li
162.891 407 li
165.008 401.184 li
166.039 401.184 li
168.156 407 li
cp
f
173.477 407 mo
172.52 407 li
169.762 401.797 li
169.762 407 li
169.039 407 li
169.039 401.184 li
170.238 401.184 li
172.754 405.934 li
172.754 401.184 li
173.477 401.184 li
173.477 407 li
cp
f
179.129 404.086 mo
179.129 403.63 179.049 403.246 178.891 402.934 cv
178.732 402.621 178.495 402.375 178.18 402.195 cv
177.951 402.065 177.707 401.975 177.449 401.924 cv
177.191 401.873 176.883 401.848 176.523 401.848 cv
175.797 401.848 li
175.797 406.336 li
176.523 406.336 li
176.896 406.336 177.221 406.309 177.498 406.254 cv
177.775 406.199 178.03 406.098 178.262 405.949 cv
178.551 405.765 178.768 405.521 178.912 405.219 cv
179.057 404.917 179.129 404.539 179.129 404.086 cv
cp
179.938 404.098 mo
179.938 404.626 179.822 405.105 179.592 405.535 cv
179.361 405.965 179.055 406.298 178.672 406.535 cv
178.406 406.699 178.11 406.817 177.783 406.891 cv
177.457 406.964 177.026 407 176.492 407 cv
175.023 407 li
175.023 401.184 li
176.477 401.184 li
177.044 401.184 177.496 401.225 177.83 401.307 cv
178.165 401.389 178.448 401.501 178.68 401.645 cv
179.076 401.892 179.384 402.222 179.605 402.633 cv
179.827 403.044 179.938 403.532 179.938 404.098 cv
cp
f
188.492 406.578 mo
188.349 406.641 188.219 406.699 188.104 406.754 cv
187.988 406.809 187.836 406.866 187.648 406.926 cv
187.49 406.976 187.317 407.018 187.131 407.053 cv
186.945 407.088 186.74 407.105 186.516 407.105 cv
186.094 407.105 185.71 407.046 185.365 406.928 cv
185.02 406.81 184.72 406.624 184.465 406.371 cv
184.215 406.124 184.02 405.81 183.879 405.428 cv
183.738 405.046 183.668 404.603 183.668 404.098 cv
183.668 403.618 183.736 403.19 183.871 402.813 cv
184.006 402.435 184.202 402.116 184.457 401.855 cv
184.705 401.603 185.003 401.41 185.354 401.277 cv
185.704 401.145 186.092 401.078 186.52 401.078 cv
186.832 401.078 187.144 401.116 187.455 401.191 cv
187.766 401.267 188.112 401.399 188.492 401.59 cv
188.492 402.508 li
188.434 402.508 li
188.113 402.239 187.795 402.044 187.48 401.922 cv
187.166 401.8 186.828 401.738 186.469 401.738 cv
186.174 401.738 185.91 401.786 185.674 401.881 cv
185.438 401.976 185.228 402.124 185.043 402.324 cv
184.863 402.52 184.723 402.767 184.623 403.064 cv
184.523 403.362 184.473 403.707 184.473 404.098 cv
184.473 404.507 184.528 404.858 184.639 405.152 cv
184.75 405.446 184.892 405.687 185.066 405.871 cv
185.249 406.063 185.461 406.206 185.705 406.299 cv
185.949 406.392 186.206 406.438 186.477 406.438 cv
186.849 406.438 187.198 406.374 187.523 406.246 cv
187.849 406.118 188.154 405.927 188.438 405.672 cv
188.492 405.672 li
188.492 406.578 li
cp
f
193.852 404.094 mo
193.852 403.339 193.682 402.756 193.344 402.346 cv
193.005 401.936 192.543 401.73 191.957 401.73 cv
191.366 401.73 190.902 401.936 190.564 402.346 cv
190.227 402.756 190.059 403.339 190.059 404.094 cv
190.059 404.856 190.23 405.44 190.574 405.846 cv
190.918 406.251 191.379 406.453 191.957 406.453 cv
192.535 406.453 192.996 406.251 193.338 405.846 cv
193.68 405.44 193.852 404.856 193.852 404.094 cv
cp
193.922 401.852 mo
194.159 402.112 194.34 402.431 194.467 402.809 cv
194.593 403.187 194.656 403.614 194.656 404.094 cv
194.656 404.573 194.592 405.002 194.463 405.381 cv
194.334 405.76 194.154 406.075 193.922 406.328 cv
193.682 406.591 193.399 406.789 193.072 406.922 cv
192.746 407.055 192.373 407.121 191.953 407.121 cv
191.544 407.121 191.172 407.054 190.838 406.918 cv
190.503 406.782 190.219 406.586 189.984 406.328 cv
189.75 406.07 189.57 405.754 189.443 405.379 cv
189.317 405.004 189.254 404.575 189.254 404.094 cv
189.254 403.62 189.316 403.194 189.441 402.818 cv
189.566 402.442 189.749 402.12 189.988 401.852 cv
190.217 401.597 190.502 401.401 190.842 401.266 cv
191.182 401.13 191.552 401.063 191.953 401.063 cv
192.37 401.063 192.744 401.131 193.076 401.268 cv
193.408 401.404 193.69 401.599 193.922 401.852 cv
cp
f
201.063 407 mo
200.289 407 li
200.289 401.988 li
198.672 405.398 li
198.211 405.398 li
196.605 401.988 li
196.605 407 li
195.883 407 li
195.883 401.184 li
196.938 401.184 li
198.488 404.422 li
199.988 401.184 li
201.063 401.184 li
201.063 407 li
cp
f
207.805 407 mo
207.031 407 li
207.031 401.988 li
205.414 405.398 li
204.953 405.398 li
203.348 401.988 li
203.348 407 li
202.625 407 li
202.625 401.184 li
203.68 401.184 li
205.23 404.422 li
206.73 401.184 li
207.805 401.184 li
207.805 407 li
cp
f
213.199 407 mo
209.367 407 li
209.367 401.184 li
213.199 401.184 li
213.199 401.871 li
210.141 401.871 li
210.141 403.465 li
213.199 403.465 li
213.199 404.152 li
210.141 404.152 li
210.141 406.313 li
213.199 406.313 li
213.199 407 li
cp
f
217.43 402.82 mo
217.43 402.653 217.4 402.506 217.342 402.377 cv
217.283 402.248 217.186 402.14 217.051 402.051 cv
216.939 401.976 216.806 401.923 216.652 401.893 cv
216.499 401.862 216.318 401.848 216.109 401.848 cv
215.199 401.848 li
215.199 404.043 li
215.98 404.043 li
216.225 404.043 216.439 404.021 216.621 403.979 cv
216.803 403.936 216.958 403.855 217.086 403.738 cv
217.203 403.629 217.29 403.503 217.346 403.361 cv
217.402 403.22 217.43 403.039 217.43 402.82 cv
cp
219.238 407 mo
218.234 407 li
216.289 404.688 li
215.199 404.688 li
215.199 407 li
214.426 407 li
214.426 401.184 li
216.055 401.184 li
216.406 401.184 216.699 401.206 216.934 401.252 cv
217.168 401.298 217.379 401.379 217.566 401.496 cv
217.777 401.629 217.942 401.796 218.061 401.998 cv
218.179 402.2 218.238 402.456 218.238 402.766 cv
218.238 403.185 218.133 403.536 217.922 403.818 cv
217.711 404.101 217.42 404.313 217.051 404.457 cv
219.238 407 li
cp
f
224.48 406.578 mo
224.337 406.641 224.208 406.699 224.092 406.754 cv
223.976 406.809 223.824 406.866 223.637 406.926 cv
223.478 406.976 223.305 407.018 223.119 407.053 cv
222.933 407.088 222.728 407.105 222.504 407.105 cv
222.082 407.105 221.699 407.046 221.354 406.928 cv
221.008 406.81 220.708 406.624 220.453 406.371 cv
220.203 406.124 220.008 405.81 219.867 405.428 cv
219.727 405.046 219.656 404.603 219.656 404.098 cv
219.656 403.618 219.724 403.19 219.859 402.813 cv
219.995 402.435 220.19 402.116 220.445 401.855 cv
220.693 401.603 220.992 401.41 221.342 401.277 cv
221.692 401.145 222.081 401.078 222.508 401.078 cv
222.82 401.078 223.132 401.116 223.443 401.191 cv
223.754 401.267 224.1 401.399 224.48 401.59 cv
224.48 402.508 li
224.422 402.508 li
224.102 402.239 223.784 402.044 223.469 401.922 cv
223.154 401.8 222.816 401.738 222.457 401.738 cv
222.163 401.738 221.898 401.786 221.662 401.881 cv
221.426 401.976 221.216 402.124 221.031 402.324 cv
220.852 402.52 220.711 402.767 220.611 403.064 cv
220.511 403.362 220.461 403.707 220.461 404.098 cv
220.461 404.507 220.516 404.858 220.627 405.152 cv
220.738 405.446 220.88 405.687 221.055 405.871 cv
221.237 406.063 221.45 406.206 221.693 406.299 cv
221.937 406.392 222.194 406.438 222.465 406.438 cv
222.837 406.438 223.186 406.374 223.512 406.246 cv
223.837 406.118 224.142 405.927 224.426 405.672 cv
224.48 405.672 li
224.48 406.578 li
cp
f
227.625 407 mo
225.328 407 li
225.328 406.406 li
226.09 406.406 li
226.09 401.777 li
225.328 401.777 li
225.328 401.184 li
227.625 401.184 li
227.625 401.777 li
226.863 401.777 li
226.863 406.406 li
227.625 406.406 li
227.625 407 li
cp
f
231.895 404.715 mo
230.875 401.859 li
229.852 404.715 li
231.895 404.715 li
cp
233.527 407 mo
232.703 407 li
232.133 405.379 li
229.617 405.379 li
229.047 407 li
228.262 407 li
230.379 401.184 li
231.41 401.184 li
233.527 407 li
cp
f
238.09 407 mo
234.41 407 li
234.41 401.184 li
235.184 401.184 li
235.184 406.313 li
238.09 406.313 li
238.09 407 li
cp
f
244.676 402.961 mo
244.676 402.761 244.641 402.586 244.57 402.438 cv
244.5 402.289 244.394 402.168 244.25 402.074 cv
244.125 401.993 243.982 401.936 243.822 401.9 cv
243.662 401.865 243.46 401.848 243.215 401.848 cv
242.449 401.848 li
242.449 404.172 li
243.102 404.172 li
243.414 404.172 243.668 404.144 243.863 404.088 cv
244.059 404.032 244.218 403.942 244.34 403.82 cv
244.462 403.695 244.549 403.563 244.6 403.426 cv
244.65 403.288 244.676 403.133 244.676 402.961 cv
cp
245.48 402.941 mo
245.48 403.199 245.436 403.438 245.346 403.658 cv
245.256 403.878 245.13 404.069 244.969 404.23 cv
244.769 404.431 244.531 404.581 244.258 404.682 cv
243.984 404.782 243.64 404.832 243.223 404.832 cv
242.449 404.832 li
242.449 407 li
241.676 407 li
241.676 401.184 li
243.254 401.184 li
243.603 401.184 243.898 401.213 244.141 401.271 cv
244.383 401.33 244.598 401.422 244.785 401.547 cv
245.007 401.695 245.178 401.88 245.299 402.102 cv
245.42 402.323 245.48 402.603 245.48 402.941 cv
cp
f
249.504 402.82 mo
249.504 402.653 249.475 402.506 249.416 402.377 cv
249.357 402.248 249.261 402.14 249.125 402.051 cv
249.013 401.976 248.88 401.923 248.727 401.893 cv
248.573 401.862 248.392 401.848 248.184 401.848 cv
247.273 401.848 li
247.273 404.043 li
248.055 404.043 li
248.3 404.043 248.513 404.021 248.695 403.979 cv
248.878 403.936 249.032 403.855 249.16 403.738 cv
249.277 403.629 249.364 403.503 249.42 403.361 cv
249.476 403.22 249.504 403.039 249.504 402.82 cv
cp
251.313 407 mo
250.309 407 li
248.363 404.688 li
247.273 404.688 li
247.273 407 li
246.5 407 li
246.5 401.184 li
248.129 401.184 li
248.48 401.184 248.773 401.206 249.008 401.252 cv
249.242 401.298 249.453 401.379 249.641 401.496 cv
249.852 401.629 250.017 401.796 250.135 401.998 cv
250.253 402.2 250.313 402.456 250.313 402.766 cv
250.313 403.185 250.207 403.536 249.996 403.818 cv
249.785 404.101 249.495 404.313 249.125 404.457 cv
251.313 407 li
cp
f
256.328 404.094 mo
256.328 403.339 256.159 402.756 255.82 402.346 cv
255.481 401.936 255.02 401.73 254.434 401.73 cv
253.843 401.73 253.378 401.936 253.041 402.346 cv
252.704 402.756 252.535 403.339 252.535 404.094 cv
252.535 404.856 252.707 405.44 253.051 405.846 cv
253.395 406.251 253.855 406.453 254.434 406.453 cv
255.012 406.453 255.472 406.251 255.814 405.846 cv
256.157 405.44 256.328 404.856 256.328 404.094 cv
cp
256.398 401.852 mo
256.636 402.112 256.817 402.431 256.943 402.809 cv
257.069 403.187 257.133 403.614 257.133 404.094 cv
257.133 404.573 257.068 405.002 256.939 405.381 cv
256.811 405.76 256.63 406.075 256.398 406.328 cv
256.159 406.591 255.876 406.789 255.549 406.922 cv
255.222 407.055 254.849 407.121 254.43 407.121 cv
254.021 407.121 253.649 407.054 253.314 406.918 cv
252.979 406.782 252.695 406.586 252.461 406.328 cv
252.227 406.07 252.046 405.754 251.92 405.379 cv
251.794 405.004 251.73 404.575 251.73 404.094 cv
251.73 403.62 251.793 403.194 251.918 402.818 cv
252.043 402.442 252.226 402.12 252.465 401.852 cv
252.694 401.597 252.979 401.401 253.318 401.266 cv
253.658 401.13 254.028 401.063 254.43 401.063 cv
254.847 401.063 255.221 401.131 255.553 401.268 cv
255.885 401.404 256.167 401.599 256.398 401.852 cv
cp
f
260.492 405.488 mo
260.492 405.999 260.337 406.392 260.025 406.668 cv
259.714 406.944 259.297 407.082 258.773 407.082 cv
258.648 407.082 258.481 407.071 258.273 407.049 cv
258.065 407.026 257.891 407 257.75 406.969 cv
257.75 406.246 li
257.793 406.246 li
257.899 406.282 258.031 406.32 258.188 406.359 cv
258.344 406.398 258.504 406.418 258.668 406.418 cv
258.907 406.418 259.099 406.391 259.24 406.336 cv
259.382 406.281 259.487 406.203 259.555 406.102 cv
259.625 405.997 259.67 405.87 259.689 405.719 cv
259.709 405.567 259.719 405.394 259.719 405.195 cv
259.719 401.801 li
258.488 401.801 li
258.488 401.184 li
260.492 401.184 li
260.492 405.488 li
cp
f
265.828 407 mo
261.996 407 li
261.996 401.184 li
265.828 401.184 li
265.828 401.871 li
262.77 401.871 li
262.77 403.465 li
265.828 403.465 li
265.828 404.152 li
262.77 404.152 li
262.77 406.313 li
265.828 406.313 li
265.828 407 li
cp
f
271.547 406.578 mo
271.403 406.641 271.274 406.699 271.158 406.754 cv
271.042 406.809 270.891 406.866 270.703 406.926 cv
270.544 406.976 270.372 407.018 270.186 407.053 cv
269.999 407.088 269.794 407.105 269.57 407.105 cv
269.148 407.105 268.765 407.046 268.42 406.928 cv
268.075 406.81 267.774 406.624 267.52 406.371 cv
267.27 406.124 267.074 405.81 266.934 405.428 cv
266.793 405.046 266.723 404.603 266.723 404.098 cv
266.723 403.618 266.79 403.19 266.926 402.813 cv
267.062 402.435 267.257 402.116 267.512 401.855 cv
267.759 401.603 268.058 401.41 268.408 401.277 cv
268.759 401.145 269.147 401.078 269.574 401.078 cv
269.887 401.078 270.198 401.116 270.51 401.191 cv
270.821 401.267 271.167 401.399 271.547 401.59 cv
271.547 402.508 li
271.488 402.508 li
271.168 402.239 270.851 402.044 270.535 401.922 cv
270.22 401.8 269.883 401.738 269.523 401.738 cv
269.229 401.738 268.964 401.786 268.729 401.881 cv
268.493 401.976 268.282 402.124 268.098 402.324 cv
267.918 402.52 267.778 402.767 267.678 403.064 cv
267.577 403.362 267.527 403.707 267.527 404.098 cv
267.527 404.507 267.583 404.858 267.693 405.152 cv
267.804 405.446 267.946 405.687 268.121 405.871 cv
268.304 406.063 268.517 406.206 268.76 406.299 cv
269.003 406.392 269.261 406.438 269.531 406.438 cv
269.903 406.438 270.253 406.374 270.578 406.246 cv
270.903 406.118 271.208 405.927 271.492 405.672 cv
271.547 405.672 li
271.547 406.578 li
cp
f
276.789 401.871 mo
274.711 401.871 li
274.711 407 li
273.938 407 li
273.938 401.871 li
271.859 401.871 li
271.859 401.184 li
276.789 401.184 li
276.789 401.871 li
cp
f
281.75 405.34 mo
281.75 405.566 281.697 405.79 281.592 406.012 cv
281.486 406.233 281.339 406.421 281.148 406.574 cv
280.94 406.741 280.697 406.871 280.42 406.965 cv
280.143 407.059 279.809 407.105 279.418 407.105 cv
278.999 407.105 278.622 407.066 278.287 406.988 cv
277.952 406.91 277.612 406.794 277.266 406.641 cv
277.266 405.672 li
277.32 405.672 li
277.614 405.917 277.954 406.105 278.34 406.238 cv
278.726 406.371 279.087 406.438 279.426 406.438 cv
279.905 406.438 280.278 406.348 280.545 406.168 cv
280.812 405.988 280.945 405.749 280.945 405.449 cv
280.945 405.191 280.882 405.001 280.756 404.879 cv
280.63 404.757 280.438 404.661 280.18 404.594 cv
279.984 404.542 279.772 404.499 279.545 404.465 cv
279.317 404.431 279.075 404.388 278.82 404.336 cv
278.305 404.227 277.923 404.04 277.674 403.775 cv
277.425 403.511 277.301 403.167 277.301 402.742 cv
277.301 402.255 277.507 401.856 277.918 401.545 cv
278.329 401.233 278.852 401.078 279.484 401.078 cv
279.894 401.078 280.269 401.117 280.609 401.195 cv
280.95 401.273 281.253 401.37 281.516 401.484 cv
281.516 402.398 li
281.461 402.398 li
281.239 402.211 280.948 402.056 280.588 401.932 cv
280.228 401.808 279.858 401.746 279.48 401.746 cv
279.066 401.746 278.733 401.832 278.482 402.004 cv
278.231 402.176 278.105 402.397 278.105 402.668 cv
278.105 402.91 278.168 403.101 278.293 403.238 cv
278.418 403.376 278.638 403.481 278.953 403.555 cv
279.12 403.591 279.356 403.636 279.664 403.688 cv
279.972 403.739 280.231 403.793 280.445 403.848 cv
280.878 403.962 281.203 404.136 281.422 404.367 cv
281.641 404.599 281.75 404.923 281.75 405.34 cv
cp
f
284.055 407 mo
283.121 407 li
283.121 405.887 li
284.055 405.887 li
284.055 407 li
cp
f
293.074 407 mo
292.117 407 li
289.359 401.797 li
289.359 407 li
288.637 407 li
288.637 401.184 li
289.836 401.184 li
292.352 405.934 li
292.352 401.184 li
293.074 401.184 li
293.074 407 li
cp
f
298.887 404.094 mo
298.887 403.339 298.718 402.756 298.379 402.346 cv
298.04 401.936 297.578 401.73 296.992 401.73 cv
296.401 401.73 295.937 401.936 295.6 402.346 cv
295.263 402.756 295.094 403.339 295.094 404.094 cv
295.094 404.856 295.266 405.44 295.609 405.846 cv
295.953 406.251 296.414 406.453 296.992 406.453 cv
297.57 406.453 298.03 406.251 298.373 405.846 cv
298.716 405.44 298.887 404.856 298.887 404.094 cv
cp
298.957 401.852 mo
299.194 402.112 299.376 402.431 299.502 402.809 cv
299.628 403.187 299.691 403.614 299.691 404.094 cv
299.691 404.573 299.627 405.002 299.498 405.381 cv
299.369 405.76 299.188 406.075 298.957 406.328 cv
298.718 406.591 298.435 406.789 298.107 406.922 cv
297.78 407.055 297.407 407.121 296.988 407.121 cv
296.579 407.121 296.208 407.054 295.873 406.918 cv
295.538 406.782 295.254 406.586 295.02 406.328 cv
294.785 406.07 294.604 405.754 294.479 405.379 cv
294.353 405.004 294.289 404.575 294.289 404.094 cv
294.289 403.62 294.352 403.194 294.477 402.818 cv
294.602 402.442 294.784 402.12 295.023 401.852 cv
295.253 401.597 295.537 401.401 295.877 401.266 cv
296.217 401.13 296.587 401.063 296.988 401.063 cv
297.405 401.063 297.779 401.131 298.111 401.268 cv
298.443 401.404 298.726 401.599 298.957 401.852 cv
cp
f
306.684 404.715 mo
305.664 401.859 li
304.641 404.715 li
306.684 404.715 li
cp
308.316 407 mo
307.492 407 li
306.922 405.379 li
304.406 405.379 li
303.836 407 li
303.051 407 li
305.168 401.184 li
306.199 401.184 li
308.316 407 li
cp
f
312.879 401.871 mo
310.801 401.871 li
310.801 407 li
310.027 407 li
310.027 401.871 li
307.949 401.871 li
307.949 401.184 li
312.879 401.184 li
312.879 401.871 li
cp
f
317.535 401.871 mo
315.457 401.871 li
315.457 407 li
314.684 407 li
314.684 401.871 li
312.605 401.871 li
312.605 401.184 li
317.535 401.184 li
317.535 401.871 li
cp
f
321.32 402.82 mo
321.32 402.653 321.291 402.506 321.232 402.377 cv
321.174 402.248 321.077 402.14 320.941 402.051 cv
320.829 401.976 320.696 401.923 320.543 401.893 cv
320.39 401.862 320.208 401.848 320 401.848 cv
319.09 401.848 li
319.09 404.043 li
319.871 404.043 li
320.116 404.043 320.329 404.021 320.512 403.979 cv
320.694 403.936 320.849 403.855 320.977 403.738 cv
321.094 403.629 321.181 403.503 321.236 403.361 cv
321.292 403.22 321.32 403.039 321.32 402.82 cv
cp
323.129 407 mo
322.125 407 li
320.18 404.688 li
319.09 404.688 li
319.09 407 li
318.316 407 li
318.316 401.184 li
319.945 401.184 li
320.297 401.184 320.59 401.206 320.824 401.252 cv
321.059 401.298 321.27 401.379 321.457 401.496 cv
321.668 401.629 321.833 401.796 321.951 401.998 cv
322.069 402.2 322.129 402.456 322.129 402.766 cv
322.129 403.185 322.023 403.536 321.813 403.818 cv
321.602 404.101 321.312 404.313 320.941 404.457 cv
323.129 407 li
cp
f
325.93 407 mo
323.633 407 li
323.633 406.406 li
324.395 406.406 li
324.395 401.777 li
323.633 401.777 li
323.633 401.184 li
325.93 401.184 li
325.93 401.777 li
325.168 401.777 li
325.168 406.406 li
325.93 406.406 li
325.93 407 li
cp
f
330.828 405.242 mo
330.828 405.008 330.793 404.821 330.723 404.684 cv
330.652 404.546 330.524 404.429 330.34 404.332 cv
330.215 404.267 330.063 404.225 329.885 404.205 cv
329.706 404.186 329.489 404.176 329.234 404.176 cv
328.02 404.176 li
328.02 406.34 li
329.043 406.34 li
329.382 406.34 329.659 406.322 329.875 406.287 cv
330.091 406.252 330.269 406.188 330.406 406.094 cv
330.552 405.992 330.659 405.876 330.727 405.746 cv
330.794 405.616 330.828 405.448 330.828 405.242 cv
cp
330.332 402.59 mo
330.332 402.449 330.309 402.331 330.262 402.234 cv
330.215 402.138 330.14 402.06 330.035 402 cv
329.913 401.93 329.765 401.886 329.59 401.869 cv
329.415 401.853 329.199 401.844 328.941 401.844 cv
328.02 401.844 li
328.02 403.523 li
329.02 403.523 li
329.262 403.523 329.454 403.511 329.598 403.486 cv
329.741 403.462 329.874 403.41 329.996 403.332 cv
330.118 403.254 330.205 403.153 330.256 403.029 cv
330.307 402.905 330.332 402.759 330.332 402.59 cv
cp
331.633 405.211 mo
331.633 405.5 331.578 405.755 331.469 405.977 cv
331.359 406.198 331.212 406.38 331.027 406.523 cv
330.809 406.695 330.568 406.817 330.307 406.891 cv
330.045 406.964 329.712 407 329.309 407 cv
327.246 407 li
327.246 401.184 li
328.969 401.184 li
329.394 401.184 329.711 401.199 329.922 401.23 cv
330.133 401.262 330.335 401.327 330.527 401.426 cv
330.741 401.538 330.896 401.682 330.992 401.857 cv
331.089 402.033 331.137 402.243 331.137 402.488 cv
331.137 402.765 331.066 402.999 330.926 403.193 cv
330.785 403.388 330.598 403.543 330.363 403.66 cv
330.363 403.691 li
330.757 403.772 331.066 403.944 331.293 404.209 cv
331.52 404.474 331.633 404.808 331.633 405.211 cv
cp
f
337.109 404.664 mo
337.109 405.086 337.063 405.454 336.971 405.768 cv
336.878 406.081 336.727 406.343 336.516 406.551 cv
336.315 406.749 336.081 406.894 335.813 406.984 cv
335.544 407.075 335.231 407.121 334.875 407.121 cv
334.511 407.121 334.192 407.073 333.922 406.977 cv
333.651 406.88 333.423 406.738 333.238 406.551 cv
333.027 406.337 332.876 406.079 332.783 405.777 cv
332.69 405.476 332.645 405.104 332.645 404.664 cv
332.645 401.184 li
333.418 401.184 li
333.418 404.703 li
333.418 405.019 333.439 405.267 333.482 405.449 cv
333.525 405.632 333.598 405.797 333.699 405.945 cv
333.813 406.114 333.97 406.242 334.166 406.328 cv
334.362 406.414 334.599 406.457 334.875 406.457 cv
335.153 406.457 335.391 406.415 335.586 406.33 cv
335.781 406.245 335.938 406.117 336.055 405.945 cv
336.156 405.797 336.229 405.627 336.271 405.436 cv
336.314 405.244 336.336 405.007 336.336 404.723 cv
336.336 401.184 li
337.109 401.184 li
337.109 404.664 li
cp
f
342.734 401.871 mo
340.656 401.871 li
340.656 407 li
339.883 407 li
339.883 401.871 li
337.805 401.871 li
337.805 401.184 li
342.734 401.184 li
342.734 401.871 li
cp
f
345.566 407 mo
343.27 407 li
343.27 406.406 li
344.031 406.406 li
344.031 401.777 li
343.27 401.777 li
343.27 401.184 li
345.566 401.184 li
345.566 401.777 li
344.805 401.777 li
344.805 406.406 li
345.566 406.406 li
345.566 407 li
cp
f
351.148 404.094 mo
351.148 403.339 350.979 402.756 350.641 402.346 cv
350.302 401.936 349.84 401.73 349.254 401.73 cv
348.663 401.73 348.198 401.936 347.861 402.346 cv
347.524 402.756 347.355 403.339 347.355 404.094 cv
347.355 404.856 347.527 405.44 347.871 405.846 cv
348.215 406.251 348.676 406.453 349.254 406.453 cv
349.832 406.453 350.292 406.251 350.635 405.846 cv
350.978 405.44 351.148 404.856 351.148 404.094 cv
cp
351.219 401.852 mo
351.456 402.112 351.638 402.431 351.764 402.809 cv
351.89 403.187 351.953 403.614 351.953 404.094 cv
351.953 404.573 351.889 405.002 351.76 405.381 cv
351.631 405.76 351.45 406.075 351.219 406.328 cv
350.979 406.591 350.696 406.789 350.369 406.922 cv
350.042 407.055 349.669 407.121 349.25 407.121 cv
348.841 407.121 348.47 407.054 348.135 406.918 cv
347.8 406.782 347.516 406.586 347.281 406.328 cv
347.047 406.07 346.866 405.754 346.74 405.379 cv
346.614 405.004 346.551 404.575 346.551 404.094 cv
346.551 403.62 346.613 403.194 346.738 402.818 cv
346.863 402.442 347.046 402.12 347.285 401.852 cv
347.515 401.597 347.799 401.401 348.139 401.266 cv
348.479 401.13 348.849 401.063 349.25 401.063 cv
349.667 401.063 350.041 401.131 350.373 401.268 cv
350.705 401.404 350.987 401.599 351.219 401.852 cv
cp
f
357.617 407 mo
356.66 407 li
353.902 401.797 li
353.902 407 li
353.18 407 li
353.18 401.184 li
354.379 401.184 li
356.895 405.934 li
356.895 401.184 li
357.617 401.184 li
357.617 407 li
cp
f
129.785 413.82 mo
129.785 413.653 129.756 413.506 129.697 413.377 cv
129.639 413.248 129.542 413.14 129.406 413.051 cv
129.294 412.976 129.162 412.923 129.008 412.893 cv
128.854 412.862 128.673 412.848 128.465 412.848 cv
127.555 412.848 li
127.555 415.043 li
128.336 415.043 li
128.581 415.043 128.794 415.021 128.977 414.979 cv
129.159 414.936 129.314 414.855 129.441 414.738 cv
129.559 414.629 129.645 414.503 129.701 414.361 cv
129.757 414.22 129.785 414.039 129.785 413.82 cv
cp
131.594 418 mo
130.59 418 li
128.645 415.688 li
127.555 415.688 li
127.555 418 li
126.781 418 li
126.781 412.184 li
128.41 412.184 li
128.762 412.184 129.055 412.206 129.289 412.252 cv
129.523 412.298 129.734 412.379 129.922 412.496 cv
130.133 412.629 130.297 412.796 130.416 412.998 cv
130.535 413.2 130.594 413.456 130.594 413.766 cv
130.594 414.185 130.488 414.536 130.277 414.818 cv
130.066 415.101 129.776 415.313 129.406 415.457 cv
131.594 418 li
cp
f
136.176 418 mo
132.344 418 li
132.344 412.184 li
136.176 412.184 li
136.176 412.871 li
133.117 412.871 li
133.117 414.465 li
136.176 414.465 li
136.176 415.152 li
133.117 415.152 li
133.117 417.313 li
136.176 417.313 li
136.176 418 li
cp
f
141.668 415.094 mo
141.668 414.339 141.499 413.756 141.16 413.346 cv
140.822 412.936 140.359 412.73 139.773 412.73 cv
139.182 412.73 138.718 412.936 138.381 413.346 cv
138.043 413.756 137.875 414.339 137.875 415.094 cv
137.875 415.856 138.047 416.44 138.391 416.846 cv
138.734 417.251 139.195 417.453 139.773 417.453 cv
140.352 417.453 140.812 417.251 141.154 416.846 cv
141.497 416.44 141.668 415.856 141.668 415.094 cv
cp
142.59 419.426 mo
142.434 419.465 142.279 419.493 142.127 419.51 cv
141.975 419.526 141.819 419.535 141.66 419.535 cv
141.207 419.535 140.843 419.411 140.568 419.162 cv
140.293 418.913 140.145 418.558 140.121 418.094 cv
139.939 418.115 li
139.77 418.121 li
139.361 418.121 138.989 418.054 138.654 417.918 cv
138.32 417.782 138.035 417.586 137.801 417.328 cv
137.566 417.07 137.386 416.754 137.26 416.379 cv
137.133 416.004 137.07 415.575 137.07 415.094 cv
137.07 414.62 137.133 414.194 137.258 413.818 cv
137.383 413.442 137.565 413.12 137.805 412.852 cv
138.034 412.597 138.318 412.401 138.658 412.266 cv
138.998 412.13 139.369 412.063 139.77 412.063 cv
140.186 412.063 140.561 412.131 140.893 412.268 cv
141.225 412.404 141.506 412.599 141.738 412.852 cv
141.975 413.112 142.157 413.431 142.283 413.809 cv
142.41 414.187 142.473 414.614 142.473 415.094 cv
142.473 415.805 142.328 416.403 142.037 416.891 cv
141.747 417.378 141.357 417.719 140.867 417.914 cv
140.877 418.211 140.948 418.441 141.078 418.605 cv
141.208 418.77 141.445 418.852 141.789 418.852 cv
141.896 418.852 142.023 418.835 142.17 418.803 cv
142.317 418.771 142.422 418.741 142.484 418.715 cv
142.59 418.715 li
142.59 419.426 li
cp
f
148.078 415.664 mo
148.078 416.086 148.032 416.454 147.939 416.768 cv
147.847 417.081 147.695 417.343 147.484 417.551 cv
147.284 417.749 147.049 417.894 146.781 417.984 cv
146.513 418.075 146.201 418.121 145.844 418.121 cv
145.479 418.121 145.162 418.073 144.891 417.977 cv
144.62 417.88 144.392 417.738 144.207 417.551 cv
143.996 417.337 143.844 417.079 143.752 416.777 cv
143.66 416.476 143.613 416.104 143.613 415.664 cv
143.613 412.184 li
144.387 412.184 li
144.387 415.703 li
144.387 416.019 144.408 416.267 144.451 416.449 cv
144.494 416.632 144.566 416.797 144.668 416.945 cv
144.783 417.114 144.938 417.242 145.135 417.328 cv
145.332 417.414 145.568 417.457 145.844 417.457 cv
146.123 417.457 146.359 417.415 146.555 417.33 cv
146.75 417.245 146.906 417.117 147.023 416.945 cv
147.125 416.797 147.197 416.627 147.24 416.436 cv
147.283 416.244 147.305 416.007 147.305 415.723 cv
147.305 412.184 li
148.078 412.184 li
148.078 415.664 li
cp
f
151.605 418 mo
149.309 418 li
149.309 417.406 li
150.07 417.406 li
150.07 412.777 li
149.309 412.777 li
149.309 412.184 li
151.605 412.184 li
151.605 412.777 li
150.844 412.777 li
150.844 417.406 li
151.605 417.406 li
151.605 418 li
cp
f
155.926 413.82 mo
155.926 413.653 155.896 413.506 155.838 413.377 cv
155.779 413.248 155.682 413.14 155.547 413.051 cv
155.435 412.976 155.302 412.923 155.148 412.893 cv
154.995 412.862 154.814 412.848 154.605 412.848 cv
153.695 412.848 li
153.695 415.043 li
154.477 415.043 li
154.721 415.043 154.935 415.021 155.117 414.979 cv
155.299 414.936 155.455 414.855 155.582 414.738 cv
155.699 414.629 155.786 414.503 155.842 414.361 cv
155.898 414.22 155.926 414.039 155.926 413.82 cv
cp
157.734 418 mo
156.73 418 li
154.785 415.688 li
153.695 415.688 li
153.695 418 li
152.922 418 li
152.922 412.184 li
154.551 412.184 li
154.902 412.184 155.195 412.206 155.43 412.252 cv
155.664 412.298 155.875 412.379 156.063 412.496 cv
156.273 412.629 156.438 412.796 156.557 412.998 cv
156.675 413.2 156.734 413.456 156.734 413.766 cv
156.734 414.185 156.629 414.536 156.418 414.818 cv
156.207 415.101 155.917 415.313 155.547 415.457 cv
157.734 418 li
cp
f
162.316 418 mo
158.484 418 li
158.484 412.184 li
162.316 412.184 li
162.316 412.871 li
159.258 412.871 li
159.258 414.465 li
162.316 414.465 li
162.316 415.152 li
159.258 415.152 li
159.258 417.313 li
162.316 417.313 li
162.316 418 li
cp
f
167.648 415.086 mo
167.648 414.63 167.569 414.246 167.41 413.934 cv
167.251 413.621 167.014 413.375 166.699 413.195 cv
166.47 413.065 166.227 412.975 165.969 412.924 cv
165.711 412.873 165.402 412.848 165.043 412.848 cv
164.316 412.848 li
164.316 417.336 li
165.043 417.336 li
165.416 417.336 165.74 417.309 166.018 417.254 cv
166.295 417.199 166.549 417.098 166.781 416.949 cv
167.07 416.765 167.287 416.521 167.432 416.219 cv
167.576 415.917 167.648 415.539 167.648 415.086 cv
cp
168.457 415.098 mo
168.457 415.626 168.342 416.105 168.111 416.535 cv
167.881 416.965 167.574 417.298 167.191 417.535 cv
166.926 417.699 166.629 417.817 166.303 417.891 cv
165.976 417.964 165.545 418 165.012 418 cv
163.543 418 li
163.543 412.184 li
164.996 412.184 li
165.564 412.184 166.015 412.225 166.35 412.307 cv
166.684 412.389 166.967 412.501 167.199 412.645 cv
167.595 412.892 167.904 413.222 168.125 413.633 cv
168.346 414.044 168.457 414.532 168.457 415.098 cv
cp
f
170.652 418 mo
169.719 418 li
169.719 416.887 li
170.652 416.887 li
170.652 418 li
cp
f
178.949 412.871 mo
176.008 412.871 li
176.008 414.512 li
178.535 414.512 li
178.535 415.199 li
176.008 415.199 li
176.008 418 li
175.234 418 li
175.234 412.184 li
178.949 412.184 li
178.949 412.871 li
cp
f
184.098 415.094 mo
184.098 414.339 183.928 413.756 183.59 413.346 cv
183.251 412.936 182.789 412.73 182.203 412.73 cv
181.612 412.73 181.148 412.936 180.811 413.346 cv
180.473 413.756 180.305 414.339 180.305 415.094 cv
180.305 415.856 180.477 416.44 180.82 416.846 cv
181.164 417.251 181.625 417.453 182.203 417.453 cv
182.781 417.453 183.242 417.251 183.584 416.846 cv
183.926 416.44 184.098 415.856 184.098 415.094 cv
cp
184.168 412.852 mo
184.405 413.112 184.586 413.431 184.713 413.809 cv
184.839 414.187 184.902 414.614 184.902 415.094 cv
184.902 415.573 184.838 416.002 184.709 416.381 cv
184.58 416.76 184.4 417.075 184.168 417.328 cv
183.928 417.591 183.645 417.789 183.318 417.922 cv
182.992 418.055 182.619 418.121 182.199 418.121 cv
181.791 418.121 181.418 418.054 181.084 417.918 cv
180.75 417.782 180.465 417.586 180.23 417.328 cv
179.996 417.07 179.816 416.754 179.689 416.379 cv
179.563 416.004 179.5 415.575 179.5 415.094 cv
179.5 414.62 179.563 414.194 179.688 413.818 cv
179.813 413.442 179.995 413.12 180.234 412.852 cv
180.463 412.597 180.748 412.401 181.088 412.266 cv
181.428 412.13 181.798 412.063 182.199 412.063 cv
182.616 412.063 182.99 412.131 183.322 412.268 cv
183.654 412.404 183.936 412.599 184.168 412.852 cv
cp
f
189.133 413.82 mo
189.133 413.653 189.104 413.506 189.045 413.377 cv
188.986 413.248 188.889 413.14 188.754 413.051 cv
188.642 412.976 188.509 412.923 188.355 412.893 cv
188.202 412.862 188.021 412.848 187.813 412.848 cv
186.902 412.848 li
186.902 415.043 li
187.684 415.043 li
187.928 415.043 188.142 415.021 188.324 414.979 cv
188.506 414.936 188.662 414.855 188.789 414.738 cv
188.906 414.629 188.993 414.503 189.049 414.361 cv
189.105 414.22 189.133 414.039 189.133 413.82 cv
cp
190.941 418 mo
189.938 418 li
187.992 415.688 li
186.902 415.688 li
186.902 418 li
186.129 418 li
186.129 412.184 li
187.758 412.184 li
188.109 412.184 188.402 412.206 188.637 412.252 cv
188.871 412.298 189.082 412.379 189.27 412.496 cv
189.48 412.629 189.645 412.796 189.764 412.998 cv
189.882 413.2 189.941 413.456 189.941 413.766 cv
189.941 414.185 189.836 414.536 189.625 414.818 cv
189.414 415.101 189.124 415.313 188.754 415.457 cv
190.941 418 li
cp
f
198.219 412.871 mo
195.277 412.871 li
195.277 414.512 li
197.805 414.512 li
197.805 415.199 li
195.277 415.199 li
195.277 418 li
194.504 418 li
194.504 412.184 li
198.219 412.184 li
198.219 412.871 li
cp
f
203.48 415.664 mo
203.48 416.086 203.434 416.454 203.342 416.768 cv
203.25 417.081 203.098 417.343 202.887 417.551 cv
202.686 417.749 202.452 417.894 202.184 417.984 cv
201.916 418.075 201.603 418.121 201.246 418.121 cv
200.881 418.121 200.564 418.073 200.293 417.977 cv
200.022 417.88 199.794 417.738 199.609 417.551 cv
199.398 417.337 199.247 417.079 199.154 416.777 cv
199.062 416.476 199.016 416.104 199.016 415.664 cv
199.016 412.184 li
199.789 412.184 li
199.789 415.703 li
199.789 416.019 199.811 416.267 199.854 416.449 cv
199.896 416.632 199.969 416.797 200.07 416.945 cv
200.185 417.114 200.34 417.242 200.537 417.328 cv
200.734 417.414 200.97 417.457 201.246 417.457 cv
201.525 417.457 201.762 417.415 201.957 417.33 cv
202.152 417.245 202.309 417.117 202.426 416.945 cv
202.527 416.797 202.6 416.627 202.643 416.436 cv
202.686 416.244 202.707 416.007 202.707 415.723 cv
202.707 412.184 li
203.48 412.184 li
203.48 415.664 li
cp
f
208.637 418 mo
204.957 418 li
204.957 412.184 li
205.73 412.184 li
205.73 417.313 li
208.637 417.313 li
208.637 418 li
cp
f
213.09 418 mo
209.41 418 li
209.41 412.184 li
210.184 412.184 li
210.184 417.313 li
213.09 417.313 li
213.09 418 li
cp
f
220.902 416.34 mo
220.902 416.566 220.85 416.79 220.744 417.012 cv
220.639 417.233 220.491 417.421 220.301 417.574 cv
220.092 417.741 219.85 417.871 219.572 417.965 cv
219.295 418.059 218.961 418.105 218.57 418.105 cv
218.151 418.105 217.774 418.066 217.439 417.988 cv
217.105 417.91 216.764 417.794 216.418 417.641 cv
216.418 416.672 li
216.473 416.672 li
216.767 416.917 217.107 417.105 217.492 417.238 cv
217.877 417.371 218.24 417.438 218.578 417.438 cv
219.057 417.438 219.43 417.348 219.697 417.168 cv
219.964 416.988 220.098 416.749 220.098 416.449 cv
220.098 416.191 220.035 416.001 219.908 415.879 cv
219.782 415.757 219.59 415.661 219.332 415.594 cv
219.137 415.542 218.925 415.499 218.697 415.465 cv
218.469 415.431 218.228 415.388 217.973 415.336 cv
217.457 415.227 217.075 415.04 216.826 414.775 cv
216.578 414.511 216.453 414.167 216.453 413.742 cv
216.453 413.255 216.659 412.856 217.07 412.545 cv
217.482 412.233 218.004 412.078 218.637 412.078 cv
219.045 412.078 219.42 412.117 219.762 412.195 cv
220.103 412.273 220.405 412.37 220.668 412.484 cv
220.668 413.398 li
220.613 413.398 li
220.392 413.211 220.101 413.056 219.74 412.932 cv
219.379 412.808 219.01 412.746 218.633 412.746 cv
218.219 412.746 217.886 412.832 217.635 413.004 cv
217.383 413.176 217.258 413.397 217.258 413.668 cv
217.258 413.91 217.32 414.101 217.445 414.238 cv
217.57 414.376 217.791 414.481 218.105 414.555 cv
218.272 414.591 218.509 414.636 218.816 414.688 cv
219.124 414.739 219.384 414.793 219.598 414.848 cv
220.03 414.962 220.355 415.136 220.574 415.367 cv
220.793 415.599 220.902 415.923 220.902 416.34 cv
cp
f
225.977 418 mo
222.145 418 li
222.145 412.184 li
225.977 412.184 li
225.977 412.871 li
222.918 412.871 li
222.918 414.465 li
225.977 414.465 li
225.977 415.152 li
222.918 415.152 li
222.918 417.313 li
225.977 417.313 li
225.977 418 li
cp
f
231.352 412.871 mo
229.273 412.871 li
229.273 418 li
228.5 418 li
228.5 412.871 li
226.422 412.871 li
226.422 412.184 li
231.352 412.184 li
231.352 412.871 li
cp
f
237.898 415.715 mo
236.879 412.859 li
235.855 415.715 li
237.898 415.715 li
cp
239.531 418 mo
238.707 418 li
238.137 416.379 li
235.621 416.379 li
235.051 418 li
234.266 418 li
236.383 412.184 li
237.414 412.184 li
239.531 418 li
cp
f
244.852 418 mo
243.895 418 li
241.137 412.797 li
241.137 418 li
240.414 418 li
240.414 412.184 li
241.613 412.184 li
244.129 416.934 li
244.129 412.184 li
244.852 412.184 li
244.852 418 li
cp
f
250.504 415.086 mo
250.504 414.63 250.425 414.246 250.266 413.934 cv
250.106 413.621 249.87 413.375 249.555 413.195 cv
249.325 413.065 249.082 412.975 248.824 412.924 cv
248.566 412.873 248.258 412.848 247.898 412.848 cv
247.172 412.848 li
247.172 417.336 li
247.898 417.336 li
248.271 417.336 248.596 417.309 248.873 417.254 cv
249.15 417.199 249.405 417.098 249.637 416.949 cv
249.926 416.765 250.143 416.521 250.287 416.219 cv
250.432 415.917 250.504 415.539 250.504 415.086 cv
cp
251.313 415.098 mo
251.313 415.626 251.197 416.105 250.967 416.535 cv
250.736 416.965 250.43 417.298 250.047 417.535 cv
249.781 417.699 249.485 417.817 249.158 417.891 cv
248.831 417.964 248.401 418 247.867 418 cv
246.398 418 li
246.398 412.184 li
247.852 412.184 li
248.419 412.184 248.87 412.225 249.205 412.307 cv
249.54 412.389 249.823 412.501 250.055 412.645 cv
250.45 412.892 250.759 413.222 250.98 413.633 cv
251.202 414.044 251.313 414.532 251.313 415.098 cv
cp
f
260.555 418 mo
259.781 418 li
259.781 412.988 li
258.164 416.398 li
257.703 416.398 li
256.098 412.988 li
256.098 418 li
255.375 418 li
255.375 412.184 li
256.43 412.184 li
257.98 415.422 li
259.48 412.184 li
260.555 412.184 li
260.555 418 li
cp
f
266.383 415.094 mo
266.383 414.339 266.214 413.756 265.875 413.346 cv
265.536 412.936 265.074 412.73 264.488 412.73 cv
263.897 412.73 263.433 412.936 263.096 413.346 cv
262.759 413.756 262.59 414.339 262.59 415.094 cv
262.59 415.856 262.762 416.44 263.105 416.846 cv
263.449 417.251 263.91 417.453 264.488 417.453 cv
265.066 417.453 265.526 417.251 265.869 416.846 cv
266.212 416.44 266.383 415.856 266.383 415.094 cv
cp
266.453 412.852 mo
266.69 413.112 266.872 413.431 266.998 413.809 cv
267.124 414.187 267.188 414.614 267.188 415.094 cv
267.188 415.573 267.123 416.002 266.994 416.381 cv
266.865 416.76 266.685 417.075 266.453 417.328 cv
266.214 417.591 265.931 417.789 265.604 417.922 cv
265.276 418.055 264.903 418.121 264.484 418.121 cv
264.075 418.121 263.704 418.054 263.369 417.918 cv
263.034 417.782 262.75 417.586 262.516 417.328 cv
262.281 417.07 262.101 416.754 261.975 416.379 cv
261.849 416.004 261.785 415.575 261.785 415.094 cv
261.785 414.62 261.848 414.194 261.973 413.818 cv
262.098 413.442 262.28 413.12 262.52 412.852 cv
262.749 412.597 263.033 412.401 263.373 412.266 cv
263.713 412.13 264.083 412.063 264.484 412.063 cv
264.901 412.063 265.275 412.131 265.607 412.268 cv
265.939 412.404 266.222 412.599 266.453 412.852 cv
cp
f
271.418 413.82 mo
271.418 413.653 271.389 413.506 271.33 413.377 cv
271.271 413.248 271.175 413.14 271.039 413.051 cv
270.927 412.976 270.794 412.923 270.641 412.893 cv
270.487 412.862 270.306 412.848 270.098 412.848 cv
269.188 412.848 li
269.188 415.043 li
269.969 415.043 li
270.214 415.043 270.427 415.021 270.609 414.979 cv
270.792 414.936 270.946 414.855 271.074 414.738 cv
271.191 414.629 271.278 414.503 271.334 414.361 cv
271.39 414.22 271.418 414.039 271.418 413.82 cv
cp
273.227 418 mo
272.223 418 li
270.277 415.688 li
269.188 415.688 li
269.188 418 li
268.414 418 li
268.414 412.184 li
270.043 412.184 li
270.395 412.184 270.688 412.206 270.922 412.252 cv
271.156 412.298 271.367 412.379 271.555 412.496 cv
271.766 412.629 271.931 412.796 272.049 412.998 cv
272.167 413.2 272.227 413.456 272.227 413.766 cv
272.227 414.185 272.121 414.536 271.91 414.818 cv
271.699 415.101 271.409 415.313 271.039 415.457 cv
273.227 418 li
cp
f
277.809 418 mo
273.977 418 li
273.977 412.184 li
277.809 412.184 li
277.809 412.871 li
274.75 412.871 li
274.75 414.465 li
277.809 414.465 li
277.809 415.152 li
274.75 415.152 li
274.75 417.313 li
277.809 417.313 li
277.809 418 li
cp
f
285.563 412.871 mo
282.621 412.871 li
282.621 414.512 li
285.148 414.512 li
285.148 415.199 li
282.621 415.199 li
282.621 418 li
281.848 418 li
281.848 412.184 li
285.563 412.184 li
285.563 412.871 li
cp
f
290.711 415.094 mo
290.711 414.339 290.542 413.756 290.203 413.346 cv
289.864 412.936 289.402 412.73 288.816 412.73 cv
288.226 412.73 287.761 412.936 287.424 413.346 cv
287.087 413.756 286.918 414.339 286.918 415.094 cv
286.918 415.856 287.09 416.44 287.434 416.846 cv
287.777 417.251 288.238 417.453 288.816 417.453 cv
289.395 417.453 289.854 417.251 290.197 416.846 cv
290.54 416.44 290.711 415.856 290.711 415.094 cv
cp
290.781 412.852 mo
291.019 413.112 291.2 413.431 291.326 413.809 cv
291.452 414.187 291.516 414.614 291.516 415.094 cv
291.516 415.573 291.451 416.002 291.322 416.381 cv
291.193 416.76 291.013 417.075 290.781 417.328 cv
290.542 417.591 290.259 417.789 289.932 417.922 cv
289.604 418.055 289.231 418.121 288.813 418.121 cv
288.403 418.121 288.032 418.054 287.697 417.918 cv
287.362 417.782 287.078 417.586 286.844 417.328 cv
286.609 417.07 286.429 416.754 286.303 416.379 cv
286.177 416.004 286.113 415.575 286.113 415.094 cv
286.113 414.62 286.176 414.194 286.301 413.818 cv
286.426 413.442 286.608 413.12 286.848 412.852 cv
287.077 412.597 287.361 412.401 287.701 412.266 cv
288.041 412.13 288.411 412.063 288.813 412.063 cv
289.229 412.063 289.604 412.131 289.936 412.268 cv
290.268 412.404 290.55 412.599 290.781 412.852 cv
cp
f
297.18 418 mo
296.223 418 li
293.465 412.797 li
293.465 418 li
292.742 418 li
292.742 412.184 li
293.941 412.184 li
296.457 416.934 li
296.457 412.184 li
297.18 412.184 li
297.18 418 li
cp
f
302.875 412.871 mo
300.797 412.871 li
300.797 418 li
300.023 418 li
300.023 412.871 li
297.945 412.871 li
297.945 412.184 li
302.875 412.184 li
302.875 412.871 li
cp
f
310.695 416.34 mo
310.695 416.566 310.643 416.79 310.537 417.012 cv
310.432 417.233 310.284 417.421 310.094 417.574 cv
309.886 417.741 309.643 417.871 309.365 417.965 cv
309.088 418.059 308.754 418.105 308.363 418.105 cv
307.944 418.105 307.567 418.066 307.232 417.988 cv
306.897 417.91 306.558 417.794 306.211 417.641 cv
306.211 416.672 li
306.266 416.672 li
306.56 416.917 306.899 417.105 307.285 417.238 cv
307.671 417.371 308.032 417.438 308.371 417.438 cv
308.851 417.438 309.224 417.348 309.49 417.168 cv
309.757 416.988 309.891 416.749 309.891 416.449 cv
309.891 416.191 309.827 416.001 309.701 415.879 cv
309.575 415.757 309.383 415.661 309.125 415.594 cv
308.93 415.542 308.718 415.499 308.49 415.465 cv
308.263 415.431 308.021 415.388 307.766 415.336 cv
307.25 415.227 306.868 415.04 306.619 414.775 cv
306.37 414.511 306.246 414.167 306.246 413.742 cv
306.246 413.255 306.452 412.856 306.863 412.545 cv
307.274 412.233 307.797 412.078 308.43 412.078 cv
308.839 412.078 309.214 412.117 309.555 412.195 cv
309.896 412.273 310.198 412.37 310.461 412.484 cv
310.461 413.398 li
310.406 413.398 li
310.185 413.211 309.894 413.056 309.533 412.932 cv
309.173 412.808 308.804 412.746 308.426 412.746 cv
308.012 412.746 307.679 412.832 307.428 413.004 cv
307.177 413.176 307.051 413.397 307.051 413.668 cv
307.051 413.91 307.113 414.101 307.238 414.238 cv
307.363 414.376 307.583 414.481 307.898 414.555 cv
308.065 414.591 308.302 414.636 308.609 414.688 cv
308.917 414.739 309.177 414.793 309.391 414.848 cv
309.823 414.962 310.148 415.136 310.367 415.367 cv
310.586 415.599 310.695 415.923 310.695 416.34 cv
cp
f
315.77 418 mo
311.938 418 li
311.938 412.184 li
315.77 412.184 li
315.77 412.871 li
312.711 412.871 li
312.711 414.465 li
315.77 414.465 li
315.77 415.152 li
312.711 415.152 li
312.711 417.313 li
315.77 417.313 li
315.77 418 li
cp
f
321.145 412.871 mo
319.066 412.871 li
319.066 418 li
318.293 418 li
318.293 412.871 li
316.215 412.871 li
316.215 412.184 li
321.145 412.184 li
321.145 412.871 li
cp
f
326.105 416.34 mo
326.105 416.566 326.053 416.79 325.947 417.012 cv
325.842 417.233 325.694 417.421 325.504 417.574 cv
325.296 417.741 325.053 417.871 324.775 417.965 cv
324.498 418.059 324.164 418.105 323.773 418.105 cv
323.354 418.105 322.978 418.066 322.643 417.988 cv
322.308 417.91 321.968 417.794 321.621 417.641 cv
321.621 416.672 li
321.676 416.672 li
321.97 416.917 322.31 417.105 322.695 417.238 cv
323.081 417.371 323.442 417.438 323.781 417.438 cv
324.261 417.438 324.634 417.348 324.9 417.168 cv
325.167 416.988 325.301 416.749 325.301 416.449 cv
325.301 416.191 325.237 416.001 325.111 415.879 cv
324.985 415.757 324.793 415.661 324.535 415.594 cv
324.34 415.542 324.128 415.499 323.9 415.465 cv
323.673 415.431 323.431 415.388 323.176 415.336 cv
322.66 415.227 322.278 415.04 322.029 414.775 cv
321.78 414.511 321.656 414.167 321.656 413.742 cv
321.656 413.255 321.862 412.856 322.273 412.545 cv
322.685 412.233 323.207 412.078 323.84 412.078 cv
324.249 412.078 324.624 412.117 324.965 412.195 cv
325.306 412.273 325.608 412.37 325.871 412.484 cv
325.871 413.398 li
325.816 413.398 li
325.595 413.211 325.304 413.056 324.943 412.932 cv
324.583 412.808 324.214 412.746 323.836 412.746 cv
323.422 412.746 323.089 412.832 322.838 413.004 cv
322.587 413.176 322.461 413.397 322.461 413.668 cv
322.461 413.91 322.523 414.101 322.648 414.238 cv
322.773 414.376 322.993 414.481 323.309 414.555 cv
323.476 414.591 323.712 414.636 324.02 414.688 cv
324.327 414.739 324.587 414.793 324.801 414.848 cv
325.233 414.962 325.559 415.136 325.777 415.367 cv
325.996 415.599 326.105 415.923 326.105 416.34 cv
cp
f
334.746 412.184 mo
332.629 418 li
331.598 418 li
329.48 412.184 li
330.309 412.184 li
332.133 417.301 li
333.957 412.184 li
334.746 412.184 li
cp
f
337.68 418 mo
335.383 418 li
335.383 417.406 li
336.145 417.406 li
336.145 412.777 li
335.383 412.777 li
335.383 412.184 li
337.68 412.184 li
337.68 412.777 li
336.918 412.777 li
336.918 417.406 li
337.68 417.406 li
337.68 418 li
cp
f
343.223 416.34 mo
343.223 416.566 343.17 416.79 343.064 417.012 cv
342.959 417.233 342.812 417.421 342.621 417.574 cv
342.413 417.741 342.17 417.871 341.893 417.965 cv
341.615 418.059 341.281 418.105 340.891 418.105 cv
340.472 418.105 340.095 418.066 339.76 417.988 cv
339.425 417.91 339.085 417.794 338.738 417.641 cv
338.738 416.672 li
338.793 416.672 li
339.087 416.917 339.427 417.105 339.813 417.238 cv
340.198 417.371 340.56 417.438 340.898 417.438 cv
341.378 417.438 341.751 417.348 342.018 417.168 cv
342.284 416.988 342.418 416.749 342.418 416.449 cv
342.418 416.191 342.354 416.001 342.229 415.879 cv
342.103 415.757 341.91 415.661 341.652 415.594 cv
341.457 415.542 341.245 415.499 341.018 415.465 cv
340.79 415.431 340.548 415.388 340.293 415.336 cv
339.777 415.227 339.396 415.04 339.146 414.775 cv
338.897 414.511 338.773 414.167 338.773 413.742 cv
338.773 413.255 338.979 412.856 339.391 412.545 cv
339.802 412.233 340.324 412.078 340.957 412.078 cv
341.366 412.078 341.741 412.117 342.082 412.195 cv
342.423 412.273 342.726 412.37 342.988 412.484 cv
342.988 413.398 li
342.934 413.398 li
342.712 413.211 342.421 413.056 342.061 412.932 cv
341.7 412.808 341.331 412.746 340.953 412.746 cv
340.539 412.746 340.206 412.832 339.955 413.004 cv
339.704 413.176 339.578 413.397 339.578 413.668 cv
339.578 413.91 339.641 414.101 339.766 414.238 cv
339.891 414.376 340.11 414.481 340.426 414.555 cv
340.593 414.591 340.829 414.636 341.137 414.688 cv
341.444 414.739 341.704 414.793 341.918 414.848 cv
342.351 414.962 342.676 415.136 342.895 415.367 cv
343.113 415.599 343.223 415.923 343.223 416.34 cv
cp
f
346.516 418 mo
344.219 418 li
344.219 417.406 li
344.98 417.406 li
344.98 412.777 li
344.219 412.777 li
344.219 412.184 li
346.516 412.184 li
346.516 412.777 li
345.754 412.777 li
345.754 417.406 li
346.516 417.406 li
346.516 418 li
cp
f
351.98 412.871 mo
349.902 412.871 li
349.902 418 li
349.129 418 li
349.129 412.871 li
347.051 412.871 li
347.051 412.184 li
351.98 412.184 li
351.98 412.871 li
cp
f
353.484 418 mo
352.551 418 li
352.551 416.887 li
353.484 416.887 li
353.484 418 li
cp
353.484 414.75 mo
352.551 414.75 li
352.551 413.637 li
353.484 413.637 li
353.484 414.75 li
cp
f
133.551 423.184 mo
132.039 429 li
131.168 429 li
129.945 424.172 li
128.75 429 li
127.898 429 li
126.359 423.184 li
127.152 423.184 li
128.375 428.02 li
129.578 423.184 li
130.363 423.184 li
131.578 428.066 li
132.793 423.184 li
133.551 423.184 li
cp
f
141.461 423.184 mo
139.949 429 li
139.078 429 li
137.855 424.172 li
136.66 429 li
135.809 429 li
134.27 423.184 li
135.063 423.184 li
136.285 428.02 li
137.488 423.184 li
138.273 423.184 li
139.488 428.066 li
140.703 423.184 li
141.461 423.184 li
cp
f
149.371 423.184 mo
147.859 429 li
146.988 429 li
145.766 424.172 li
144.57 429 li
143.719 429 li
142.18 423.184 li
142.973 423.184 li
144.195 428.02 li
145.398 423.184 li
146.184 423.184 li
147.398 428.066 li
148.613 423.184 li
149.371 423.184 li
cp
f
150.793 429 mo
149.859 429 li
149.859 427.887 li
150.793 427.887 li
150.793 429 li
cp
f
157.742 429 mo
156.969 429 li
156.969 423.988 li
155.352 427.398 li
154.891 427.398 li
153.285 423.988 li
153.285 429 li
152.563 429 li
152.563 423.184 li
153.617 423.184 li
155.168 426.422 li
156.668 423.184 li
157.742 423.184 li
157.742 429 li
cp
f
162.258 426.715 mo
161.238 423.859 li
160.215 426.715 li
162.258 426.715 li
cp
163.891 429 mo
163.066 429 li
162.496 427.379 li
159.98 427.379 li
159.41 429 li
158.625 429 li
160.742 423.184 li
161.773 423.184 li
163.891 429 li
cp
f
167.777 424.82 mo
167.777 424.653 167.748 424.506 167.689 424.377 cv
167.631 424.248 167.534 424.14 167.398 424.051 cv
167.287 423.976 167.154 423.923 167 423.893 cv
166.846 423.862 166.666 423.848 166.457 423.848 cv
165.547 423.848 li
165.547 426.043 li
166.328 426.043 li
166.573 426.043 166.787 426.021 166.969 425.979 cv
167.151 425.936 167.306 425.855 167.434 425.738 cv
167.551 425.629 167.637 425.503 167.693 425.361 cv
167.75 425.22 167.777 425.039 167.777 424.82 cv
cp
169.586 429 mo
168.582 429 li
166.637 426.688 li
165.547 426.688 li
165.547 429 li
164.773 429 li
164.773 423.184 li
166.402 423.184 li
166.754 423.184 167.047 423.206 167.281 423.252 cv
167.516 423.298 167.727 423.379 167.914 423.496 cv
168.125 423.629 168.29 423.796 168.408 423.998 cv
168.527 424.2 168.586 424.456 168.586 424.766 cv
168.586 425.185 168.48 425.536 168.27 425.818 cv
168.059 426.101 167.768 426.313 167.398 426.457 cv
169.586 429 li
cp
f
175.012 429 mo
174.008 429 li
171.707 426.41 li
171.129 427.027 li
171.129 429 li
170.355 429 li
170.355 423.184 li
171.129 423.184 li
171.129 426.219 li
173.953 423.184 li
174.891 423.184 li
172.293 425.918 li
175.012 429 li
cp
f
177.93 429 mo
175.633 429 li
175.633 428.406 li
176.395 428.406 li
176.395 423.777 li
175.633 423.777 li
175.633 423.184 li
177.93 423.184 li
177.93 423.777 li
177.168 423.777 li
177.168 428.406 li
177.93 428.406 li
177.93 429 li
cp
f
183.684 429 mo
182.727 429 li
179.969 423.797 li
179.969 429 li
179.246 429 li
179.246 423.184 li
180.445 423.184 li
182.961 427.934 li
182.961 423.184 li
183.684 423.184 li
183.684 429 li
cp
f
189.668 429 mo
188.711 429 li
185.953 423.797 li
185.953 429 li
185.23 429 li
185.23 423.184 li
186.43 423.184 li
188.945 427.934 li
188.945 423.184 li
189.668 423.184 li
189.668 429 li
cp
f
195.441 427.34 mo
195.441 427.566 195.389 427.79 195.283 428.012 cv
195.178 428.233 195.03 428.421 194.84 428.574 cv
194.631 428.741 194.389 428.871 194.111 428.965 cv
193.834 429.059 193.5 429.105 193.109 429.105 cv
192.69 429.105 192.313 429.066 191.979 428.988 cv
191.644 428.91 191.303 428.794 190.957 428.641 cv
190.957 427.672 li
191.012 427.672 li
191.306 427.917 191.646 428.105 192.031 428.238 cv
192.417 428.371 192.779 428.438 193.117 428.438 cv
193.596 428.438 193.969 428.348 194.236 428.168 cv
194.503 427.988 194.637 427.749 194.637 427.449 cv
194.637 427.191 194.574 427.001 194.447 426.879 cv
194.321 426.757 194.129 426.661 193.871 426.594 cv
193.676 426.542 193.464 426.499 193.236 426.465 cv
193.008 426.431 192.767 426.388 192.512 426.336 cv
191.996 426.227 191.614 426.04 191.365 425.775 cv
191.117 425.511 190.992 425.167 190.992 424.742 cv
190.992 424.255 191.198 423.856 191.609 423.545 cv
192.021 423.233 192.543 423.078 193.176 423.078 cv
193.584 423.078 193.959 423.117 194.301 423.195 cv
194.642 423.273 194.944 423.37 195.207 423.484 cv
195.207 424.398 li
195.152 424.398 li
194.931 424.211 194.64 424.056 194.279 423.932 cv
193.918 423.808 193.549 423.746 193.172 423.746 cv
192.758 423.746 192.425 423.832 192.174 424.004 cv
191.922 424.176 191.797 424.397 191.797 424.668 cv
191.797 424.91 191.859 425.101 191.984 425.238 cv
192.109 425.376 192.33 425.481 192.645 425.555 cv
192.811 425.591 193.048 425.636 193.355 425.688 cv
193.663 425.739 193.923 425.793 194.137 425.848 cv
194.569 425.962 194.895 426.136 195.113 426.367 cv
195.332 426.599 195.441 426.923 195.441 427.34 cv
cp
f
197.746 429 mo
196.813 429 li
196.813 427.887 li
197.746 427.887 li
197.746 429 li
cp
f
204.008 428.578 mo
203.865 428.641 203.735 428.699 203.619 428.754 cv
203.503 428.809 203.352 428.866 203.164 428.926 cv
203.005 428.976 202.833 429.018 202.646 429.053 cv
202.46 429.088 202.255 429.105 202.031 429.105 cv
201.609 429.105 201.226 429.046 200.881 428.928 cv
200.536 428.81 200.236 428.624 199.98 428.371 cv
199.73 428.124 199.535 427.81 199.395 427.428 cv
199.254 427.046 199.184 426.603 199.184 426.098 cv
199.184 425.618 199.251 425.19 199.387 424.813 cv
199.522 424.435 199.717 424.116 199.973 423.855 cv
200.22 423.603 200.519 423.41 200.869 423.277 cv
201.219 423.145 201.608 423.078 202.035 423.078 cv
202.348 423.078 202.66 423.116 202.971 423.191 cv
203.282 423.267 203.627 423.399 204.008 423.59 cv
204.008 424.508 li
203.949 424.508 li
203.629 424.239 203.311 424.044 202.996 423.922 cv
202.681 423.8 202.344 423.738 201.984 423.738 cv
201.69 423.738 201.425 423.786 201.189 423.881 cv
200.954 423.976 200.744 424.124 200.559 424.324 cv
200.379 424.52 200.239 424.767 200.139 425.064 cv
200.039 425.362 199.988 425.707 199.988 426.098 cv
199.988 426.507 200.043 426.858 200.154 427.152 cv
200.265 427.446 200.408 427.687 200.582 427.871 cv
200.764 428.063 200.977 428.206 201.221 428.299 cv
201.464 428.392 201.721 428.438 201.992 428.438 cv
202.365 428.438 202.713 428.374 203.039 428.246 cv
203.365 428.118 203.669 427.927 203.953 427.672 cv
204.008 427.672 li
204.008 428.578 li
cp
f
209.367 426.094 mo
209.367 425.339 209.198 424.756 208.859 424.346 cv
208.521 423.936 208.059 423.73 207.473 423.73 cv
206.881 423.73 206.417 423.936 206.08 424.346 cv
205.743 424.756 205.574 425.339 205.574 426.094 cv
205.574 426.856 205.746 427.44 206.09 427.846 cv
206.434 428.251 206.895 428.453 207.473 428.453 cv
208.051 428.453 208.511 428.251 208.854 427.846 cv
209.196 427.44 209.367 426.856 209.367 426.094 cv
cp
209.438 423.852 mo
209.674 424.112 209.856 424.431 209.982 424.809 cv
210.109 425.187 210.172 425.614 210.172 426.094 cv
210.172 426.573 210.107 427.002 209.979 427.381 cv
209.85 427.76 209.669 428.075 209.438 428.328 cv
209.198 428.591 208.915 428.789 208.588 428.922 cv
208.261 429.055 207.888 429.121 207.469 429.121 cv
207.06 429.121 206.688 429.054 206.354 428.918 cv
206.019 428.782 205.734 428.586 205.5 428.328 cv
205.266 428.07 205.085 427.754 204.959 427.379 cv
204.833 427.004 204.77 426.575 204.77 426.094 cv
204.77 425.62 204.832 425.194 204.957 424.818 cv
205.082 424.442 205.264 424.12 205.504 423.852 cv
205.733 423.597 206.018 423.401 206.357 423.266 cv
206.697 423.13 207.068 423.063 207.469 423.063 cv
207.885 423.063 208.26 423.131 208.592 423.268 cv
208.924 423.404 209.206 423.599 209.438 423.852 cv
cp
f
216.578 429 mo
215.805 429 li
215.805 423.988 li
214.188 427.398 li
213.727 427.398 li
212.121 423.988 li
212.121 429 li
211.398 429 li
211.398 423.184 li
212.453 423.184 li
214.004 426.422 li
215.504 423.184 li
216.578 423.184 li
216.578 429 li
cp
f
220.719 422.922 mo
217.918 430.188 li
217.242 430.188 li
220.031 422.922 li
220.719 422.922 li
cp
f
226 427.34 mo
226 427.566 225.947 427.79 225.842 428.012 cv
225.736 428.233 225.588 428.421 225.398 428.574 cv
225.19 428.741 224.947 428.871 224.67 428.965 cv
224.393 429.059 224.059 429.105 223.668 429.105 cv
223.249 429.105 222.872 429.066 222.537 428.988 cv
222.203 428.91 221.862 428.794 221.516 428.641 cv
221.516 427.672 li
221.57 427.672 li
221.865 427.917 222.205 428.105 222.59 428.238 cv
222.975 428.371 223.337 428.438 223.676 428.438 cv
224.155 428.438 224.528 428.348 224.795 428.168 cv
225.062 427.988 225.195 427.749 225.195 427.449 cv
225.195 427.191 225.132 427.001 225.006 426.879 cv
224.879 426.757 224.688 426.661 224.43 426.594 cv
224.234 426.542 224.023 426.499 223.795 426.465 cv
223.567 426.431 223.326 426.388 223.07 426.336 cv
222.555 426.227 222.172 426.04 221.924 425.775 cv
221.675 425.511 221.551 425.167 221.551 424.742 cv
221.551 424.255 221.756 423.856 222.168 423.545 cv
222.58 423.233 223.102 423.078 223.734 423.078 cv
224.143 423.078 224.518 423.117 224.859 423.195 cv
225.201 423.273 225.502 423.37 225.766 423.484 cv
225.766 424.398 li
225.711 424.398 li
225.49 424.211 225.199 424.056 224.838 423.932 cv
224.477 423.808 224.108 423.746 223.73 423.746 cv
223.316 423.746 222.984 423.832 222.732 424.004 cv
222.481 424.176 222.355 424.397 222.355 424.668 cv
222.355 424.91 222.418 425.101 222.543 425.238 cv
222.668 425.376 222.888 425.481 223.203 425.555 cv
223.37 425.591 223.607 425.636 223.914 425.688 cv
224.221 425.739 224.482 425.793 224.695 425.848 cv
225.127 425.962 225.453 426.136 225.672 426.367 cv
225.891 426.599 226 426.923 226 427.34 cv
cp
f
231.691 429 mo
230.918 429 li
230.918 426.152 li
228.016 426.152 li
228.016 429 li
227.242 429 li
227.242 423.184 li
228.016 423.184 li
228.016 425.465 li
230.918 425.465 li
230.918 423.184 li
231.691 423.184 li
231.691 429 li
cp
f
237.52 426.094 mo
237.52 425.339 237.351 424.756 237.012 424.346 cv
236.673 423.936 236.211 423.73 235.625 423.73 cv
235.034 423.73 234.569 423.936 234.232 424.346 cv
233.896 424.756 233.727 425.339 233.727 426.094 cv
233.727 426.856 233.898 427.44 234.242 427.846 cv
234.586 428.251 235.047 428.453 235.625 428.453 cv
236.203 428.453 236.663 428.251 237.006 427.846 cv
237.349 427.44 237.52 426.856 237.52 426.094 cv
cp
237.59 423.852 mo
237.827 424.112 238.009 424.431 238.135 424.809 cv
238.261 425.187 238.324 425.614 238.324 426.094 cv
238.324 426.573 238.26 427.002 238.131 427.381 cv
238.002 427.76 237.821 428.075 237.59 428.328 cv
237.351 428.591 237.067 428.789 236.74 428.922 cv
236.413 429.055 236.04 429.121 235.621 429.121 cv
235.212 429.121 234.841 429.054 234.506 428.918 cv
234.171 428.782 233.887 428.586 233.652 428.328 cv
233.418 428.07 233.237 427.754 233.111 427.379 cv
232.985 427.004 232.922 426.575 232.922 426.094 cv
232.922 425.62 232.984 425.194 233.109 424.818 cv
233.234 424.442 233.417 424.12 233.656 423.852 cv
233.886 423.597 234.17 423.401 234.51 423.266 cv
234.85 423.13 235.22 423.063 235.621 423.063 cv
236.038 423.063 236.412 423.131 236.744 423.268 cv
237.076 423.404 237.358 423.599 237.59 423.852 cv
cp
f
242.551 424.961 mo
242.551 424.761 242.516 424.586 242.445 424.438 cv
242.375 424.289 242.269 424.168 242.125 424.074 cv
242 423.993 241.857 423.936 241.697 423.9 cv
241.537 423.865 241.335 423.848 241.09 423.848 cv
240.324 423.848 li
240.324 426.172 li
240.977 426.172 li
241.289 426.172 241.543 426.144 241.738 426.088 cv
241.934 426.032 242.093 425.942 242.215 425.82 cv
242.337 425.695 242.424 425.563 242.475 425.426 cv
242.525 425.288 242.551 425.133 242.551 424.961 cv
cp
243.355 424.941 mo
243.355 425.199 243.311 425.438 243.221 425.658 cv
243.131 425.878 243.005 426.069 242.844 426.23 cv
242.644 426.431 242.406 426.581 242.133 426.682 cv
241.859 426.782 241.515 426.832 241.098 426.832 cv
240.324 426.832 li
240.324 429 li
239.551 429 li
239.551 423.184 li
241.129 423.184 li
241.478 423.184 241.773 423.213 242.016 423.271 cv
242.258 423.33 242.473 423.422 242.66 423.547 cv
242.882 423.695 243.053 423.88 243.174 424.102 cv
243.295 424.323 243.355 424.603 243.355 424.941 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 14.0.0%%For: (Mark Inns) ()%%Title: (free-sample-lcd-numbers-www.markinns.com.eps)%%CreationDate: 01/01/2010 15:35%%Canvassize: 16383%AI9_DataStream%Gb"-6kBc^/ec:#6J9rDmKEM@b.5n.>j7Gri-f?6qZl#0uGQ0YSIT0Pt>I$tk4gVop`Xa@t<`si&Bh>R3\Mre3>MY?\n#uD_/4HCe%'[7DHW2sMRZ.NCK66@n=UdUo<NFnGB8grb3Z`r/!N&l9/G\6RdqI!.a[<oo$4^.Y]mm`B(+5fmWHDe7,]g&:RG.mDdM3[dU03YEY%CH\Fk+%AP5n2F3j.?@["k/jRnVAnjK9O<H<B3nDo<s)86W"jd%5OWe8m86eH"*NnRr=6>#J2cO*oY%+4LS473,9l>]jnS8*m,*+g%8BEkX'#A3e0'&9+qBAIn"MPQQ0qXHF+"m2HemN1@LTOnWBa(tlWH\4+qG9[YOVBO8MrlcMGUL4p-,Bja.5<,ZPtX(ck.nZ8<fZ>5%!r,>>6jm,urIQ,1!3-"Gdf3PWctg#"_qs;bKA`i]^p#=,_cl@j!#f!;`g?b)9.:#fO7-G7g:D:SD%6%!9D\lt_/ZZX\':OA/R#ar%+XE^RFP_"gbI[5;%fn!Kg*6lTor'(%[fDGKlG%FsB/,<K3:6%fbMG,Apf]j+VNe`TN>;jn.\"[o5eWnTa[HSp%)/C#ZJ\6P?oBL/%L<Z=+WaJ7r',d59"6_iL#X1+L+0FtBfj"8`f4[#^U]YpCn/E9B8g.LEl\.D1J1qu.>n\i@$7j.l4bAbVY2KR;56529lR`B.;$)/I%U'g*W)%]A@XUj`jT0bh@U3l`DdIOIaUdbC_AMWa<T82lh!dq1NXC!b$pmK7>]9s)?S&sU#RKfD(:Z_2P<'CimbNE<5HleTrk;CMa%ZVZ0`$3aP/!<1p*K`Wf*.)8aM)gmF;.MZ'c;LqVE.e$30!m>6q]W5cB4FC>]i-e>;ceol)ro3q8(@b]*Uiem(A-..6V;Ra!4"LQU%A;q;\K-Q!:YRDK`I#$aj+G$/=@tO1=5<'k^%Vrq#_DT4C_07kVp^)G(@tJQ,B]A_o.6&sT%a/N(r6<(hloBeTL*D?bI)f%BOlP<Y%^>lrdemZlV**FTW+"RT9#N&ra(k[(_p`@Elr.Lp)pach`W8M=Ipu"73%uq.[+26d,_dD=`/-X'!h_>m$Q!h,]p0ijp%D\Q>oOHhg%pCBV3QGRUIi.=IZHOkI`qh<eD2-]jm-*0=5#*.!'9K5*.1`eNg$c`M0@4=n-E-rKLpf[A%bJ;Lo@MWNZ]RqA_>JSa*dBH%i(:CuM%@nOSE@.Ar);[dm*3t-8e/qt>3\V1W2Cq/r<Pgqgt*C#VRj$2=?baFie1!VLiE"*`^_t<864+8LhZaeQE/.52_m:5Fikh`!tpp<CU%(8j5r[\3!F!VXTd,^e<sL=KA+^K.tV?MpTI$Kr"L@]:cEJ!,KR31ot!S&PChTD1&PbN84Hc6rUTAc0=7M>n7ns0!hOgPYf..cEJ7%-iPW_nc-l^ren]o('!9@ikK4Cs6k?p5Jd?:nf6X!^14h8s/l=j-Q&J?X^lK5,q$Nq>]II,S:Y*g`VYP2co62LPRROlP+>DD)uO6]%^sel^XXC2GGaUGD/Q$?u0=.SE&`B!(X.#=f_'m\=N#RdZif"_&>'5-]%XUtLipNH--[Js-e]WCRj&0q2*&l\`0G4u2nCT!?:@QN@%6^C\Zg\rEBqru'Jm("'&6(^m]f$dr1Z:56d8Sm=V'-jCEaVh@C;%m]\,A0>p_AMa*q]`"n`[(_NpsU+G"Jt#NS8%X)Ngmt^5=^Ie%:`dXi'Jhq.P1VVedS&b337AeV%<L#@9a0sG7=.=m($K4`a0(>(?'K)6;mCVs.qtt[H";hgel_^S5(W#2)S9<>`D;]%?pfI`T*3/=%]]mJ'cH)\I%a0o>LfbL(oK*1&*D1J7d[*0!2Q:[$nKgJZ%ckOsf]4%;Y=E::j_uTe,stm?16ode0^^JuZt(Yg,D&/M-j[@AN\6G2%\ch%kiCR1UXC95:l)^KG4;t:gft<0P''U$!ap.D^?]X`R'(7Uho?,bU4:9iOYe]?pRn>DB3b-%4L!Pt^)Y3@Yd'-P'K0*(Dl'W0M%Kghjk$&!j%M)fZ_rcE8(jSVTl<!GPbD#j7D@J.j'6X=``oLm3b9\GXt<mRoJK;jmN\$m'S,n(8<V>B[.P-M1;f_D3iPpm_=:NE[W%\pp+HTfgBQ@"/cIn9r7oTjpl^[^?q//BkpOe!;RKDLsAN%`;f%nOnZN'hserXFOA@Ou3DL'#FnKbY,5ee,G`98i"%lQ8:ba-!+@(%`]Z8/6&Z&a@g[&,QU29263#_@O"W/4rs)X.(mFMNdDCr%:8k"&4DBlj>Z;*c-N1ZKKZ?ZNP%<3,U(=71=g&mA8*lPE/nu`+k/&P>%5AC_g!WMB*,0N`XW>Lm6=Yr[86b]4FW>h1%12uTK6:)Ug-CPY0_PGp>nOQ`QHr2VRP5V+$.YL"D-ACG(B8hX>i&dgAP&-IAHVXQI%;S9D'W8TJYn?AV&PI-SCO74%8`\Xm!Otj,0@_nMkVi$1&Je.IOs-.=CnS+7V[8famc\ZW-=OLXF&'IL!KI0EohACiG^61AfT.B0?%4&C+-JS[qg&tbhhH2&I5AP%h@PQBLBE="([k%RpRU4:/02."%Ni6=M)lfN+)#+"nD/4iIo`pq)'V0aZ:XG`a#L]8@]O80[:,H#,J%$cu\'IYf:\rA6]H:KMMi:1(\RVD+g54K)Z@=]1nW7cG&?:pEX0?VG,ES1:M,@aT_^Fp2<E[V&_Y"!0>Z8T2P#c&lg:U+)0s]GcfZ%+_ZZQBR"5cE\n*"&/&pV'@RK0DQtJt9q;D>>nWH:gMQO9i'm>\Q3>nAoFQ$ere)k2SCom%?sS:8ZP:=dc/3ci<]SEh^K?)m,_e0o%P3XeC_oc"aLT1hp/M#"r]@@_gL&49mWSWf8rZETjEenkqP,YseA+PA;Y(#n^>,#F'9\XNH7tpKnmA\!sn-(L7n=pYfZa:f+J\AKQ%WaBin'An\T,`r=mAdOJF=`J_I'sGj"j/+)a@WATpqK#g,Q<f&Y#=h;G'G?;3rfC5lo2$nc?%_-;.a=Y^s%+Y*p=7-3QF3X%m%"LE%?O+c7bbXLWm>#/o_U7!uhSeHn0PBr&hqkX&(dlQ1R:bn;Up_N;k/*s+1Jti0d>$DEPYKsbajA2lO,GGmM3oefWDp7TgJ\8Z>_F2n%?lgP7*PmB<K_`B"\QYF9rXN@sodNH9/fLs%U!i\7=U2DuEat9kIumN!J2o)/C%2F"_3Tf7:b'G:/AALaL"imUk=Ze0_/0=u*(Tn\%RPIFN&t$&97*-QcTm1pA/JsEi%"0N]/UV&U@XA?H^n3546t*pKjq<Nh@osUAHI.4aH1oG@5jXQjIUKnkd[p&>E$3T7P0%5/)gi9F%+^W?JI+]Pje*=2`P7]23Q?:C%f_BQtBM/`P_BuWsTQD=L4jA]M'9C7N'0teub>a2EDT.0]G@m$nUF@W0[a&E!,*n6ta0[DqR%KO#%3eq2bhNI;?-bF5Z6?jE%nkRQA?#nLX%b_]fa;1&,UMbN*\<N/_E89<5AdPbD`SE-u*@T&?.;)?c3m^LW`Qu6r$30RG3bWr#Hd.-.%nh`'Zfjgc>k'UN8gr@`nDN5.sl/8%.G;'`Dp6n!^>&U_>M?Q"QNf(d8CbQXmBsR+;*jfBb'@,t?7IS6`iGuil_i`NJKfMe];C._g%:!'(;He+p45AuKPZ&E\7a2N=m*k/1F^R6F[LW%E.bGo\1/T4%E6_/Oo340d1[Ob/Y@mkF.N&/#TOYqUj>B`Poq&?e4[Y[12<\8[R%PhpN,"gMbXc?_`OP+LR(I6ej@,k'bhQ:/aeaHEEc5iIZlH&9ImS/F1ld\gYB=E;uTZ-N7a)k6=QLOBcWL3%Gsp44qth5)[[Od;q.%CJQ-r/0:Ls2Rc+J7K2*]dj&;W(4nD]4C6I6jE^B`kMX2o,AI4,3]G*A]sjSVl>oSH(+i25R#qJ8I;..X*?U&U"u$kLP0`)Zdhf!.%rK@lbn?LO(@$C:[X>Z`$i^bZUgT`^P_a@thpKj@n\0T)=TlCa4U'#+ErnB6@AOW;K=2fmteL,Rb_rI:9c<M5MCB8^7>`[+)<JHk)%]UVunZk_Lel!,nf1g::V(brX6F.lNa*B/NDK%/e?*oYgH:;o&#qgNG/K]eC.'%R;[-H>O+1T<5^DLOs_be*'#XSE*UY#AK:GKNI%%3,Su0pc0="&,)bi^P$1;'%",R-XomZ6#.3j^DnhW-*"k(oUL_Kosh75gHZC3Ya)H<+<jBPUkk=K$p+LMZ6VNAUfTp/jcM(a@b5IF%-YN-XZT>BJS)f`:'aNWnN5IF$*S#1MLb"5$p43MhaC!5UIL.'X)=862:O<kqlG$fQE$/=/8p^<[ofnbKBO6;!p5kRS?#<4E*RERq%1$:*e(EJ.7T](lX\7Qalfu"VD*0[dmo-GQ]+-p9nA&m$I:TpJ5R;Kk=%Se^Z8a+e>R`8nBktpA24=?"4[)M9m9$bZ6[4/2%$dU1f%\9+ibB#;S=(Yqsq]cb>!k-M#7Q6U[CdQ<cm+_u^GCTMd_l\0I=[IV1tpG1Ppdlr!:CaaeOC"j;0GN>:M9/BK3P+%PD[jWOpZB3cR%_>nVNrOY"sa+UE6rikeJnj`a_1m=G_3Rl$1hUrMINP'W#aKdr+Bu6qLna&2lLtX@K(qS.Ubd(f\H`\Pl*`*WM7?;]KLt3ubksX?5%R&'+N#tne^'f^4Q;(c?!K<nIn`E*IRae@L[1LEIH0UAbmeKm$6qCp,.O+$KES"@>EQ6r=T^p/uRkOn=jVBCAA^a@GZCpuB%PdFdl%X=6mi(B9,cY7pN3,`YqQ4#%k@#"[$.1OFdLlQ>_<CIruV#<rU$l9liO]EcK:FYt2u@'<kBSojb^4&:J#^.PI<J@4'G^W?EMXV,&N%P*W31=t8[IL.ZfDYRaJHfQ1`4@qjrr6cc\1,r:iPnuZK$dVV=]_hrQH,qM&oYE&7hi3S_dL";(&p4&7K"#DsZ\IUp`*/Ja0ecrMT%L&-o!4-#:[2;u!7qL!AiW@:iK.D8b7gZG3jX8PV9n*G:E8S8!_a3BFAP;:Z/Sb6)+_7Gf-.E<JgZgGk@ISU3hQC[@uIr3<YPqI@M%nij^KAbm([p*Q=^EW!(57ZV0sK<uptY;dGF/1gVDH2(Pkm2nr1HEg')E3\RXq>H'cF3f_sa.O<n-0J2hYi1YuSgOl=0teE8XZ-`M%4cD*s^Sg'f$gN+b6ZD6k>*EjCI+jF3=Xtt-ggj?BrQ0r:#4j-t;i8j<0E0Tk7q6VeEjk-cntbuWX]]:cK[An-Hd._3%`?V+P4R':%I6-mt+-"C!`M2$$='h`"V<Oq:f94+=-G#u#-':*`E9:Q"`19PuL6,+T%_^F7?XpD*S6F6P[1LcQ`-/..g29B$4DQPe*9rO*E+Q)&%7l0U^*1]Z4NL7)-f5eGS>%a/>=XW2sEbHJNm=*d\nEN]&[rM:O3Y*0f[55TX3jZb\X(.U+i*jZ)7<^lE%3ZK>q&G9?2bigHTB<VC%Mk7VX7tjHcgG\)rY)&;'!R_s@IP^fFdXjk>M-H]PF?jV59*8C\=(cZ#(s,BrP5_eSjL?eSOZ"t_lf$3NGK.^\k=f:F<m2:e,1^6a%hjc&Q*_BU_n86n[,hF8i'4jf85mZN'*f1U:F(A6?@dot!p$fN?:Zf7?r;4`GHIq+1U9U)tnrcKii@"ub(1(uOQ85d^6uP<C13FS=%8Rn#f-)(Og@$2AG4i^gJRcCm>59+oP1eXo10PN2QX[@/CW0&n#fNP]/b=>sf4Nco?2GbG^NM[O_k0lHPm9=h9LVOj1qm5e4O/aEF%b)!*.4\K=\MH!R2j?7QBQ%D)dl11qHiVB2+\</(Ift&H1jho<KYdB3:Dp)I2@/%s<02]d_8Os>f\Ii3mcc2\QXmpCC\:S<`AC[/t%J>.+,KUg11Z"?%u-p,*HO2P/9RQC]XSJC32rA(=;R=4"(6Er?X/VhE4+qDi1\Kn8h)HQl`1)7q39Qa)P][DM&iF;(Der,in-"a:_%b82=71p@`HR2.A7)e/)/&#[kRBZX4(hiGoc$'_O:\AQWU4..?pL'Ys5EEb]jN.C-2R'fsBLat'<%JmGDj?G=bi/%sUX!PF?WE^(1%k60(Hfn*q]]2jj8_6Z/+@f%;7(mg4:XFp&7'su6%Q`9%Z^"SUU?eq-P<:2iVB(K%r"T=35OZs%Wi)das<A:o!\q4ImQ'KFSW%@9Y%/(Z/$`0)`pVPlB@J`l/hDkDP=1XB'CY:jiqYESL-!55>@a6h309`=0c">MnlkDIoZj%pbcc!KdN7QaLbY\_:&giKE#D8<d$YYmWH%!DgplZ?CgT0$0%pK[h'u,$u#10HY?V]&L_3_!(U*7,m]GJ:,=4A*"\`M9CpGDrB4>F9F^n-YXS=[%ire(]s:<h#7KM8`^nMBs!,Y%iSrQR!BY$n2@g1bZci[^_j0;@=>T0c":DL<goEh0bo9LQGq^W:0Z`;$E&h3K[00!(L?)0Ws%p"<IlN,OrV8/Jc5JHA]!?O1;0cqF%rT6XAbW/gMjSY=u@^SDU0?g,CrfkMCA<l.X=!.A2TRAM.B99>XeA<6:7MYbGZB[L]b&Am!+QIkn9HVUVc%`Ui?T8n,A?)]UMA<8R%H;!tAaF"*`*\`'<,hJ-?C[TCa'"ircZ!oq\MXs8V?R7K5gR_8>c++LcK^"c]eM0IHMS5#XQGg%1QR(YPdDR?TPjiE^QE=QJD,uCp%KMI3:G,9gYU+M5?@S+SSQ"5f5X@t$1%2Co3`<CPaPM@%p[3E`3O$"uA[Y#f?XPJP3H_-J'Hn2ffVZ3bZ:Qq*#m0fR7Y_PRCk3TUQ%>'KJIESP1s4us9'KMQ4+a0gB?3@`,hXn?CJ'KrdXC!'RgD<<U1BMKjlQ'9QU:hj:E\I-Q\&cW)M%Jd@kPilTFT-IF9Z#KI+Z1n+T%C()To!'Wj8S!+EnX:;CVX(:SiUBL9Al6AD;93,,19p@S0&:;)Ej-g\.fp#*J(4SP*LN5*@XF99530(BK'&rD<^$B-]gf`&$NV"JN%=.pX-Xjq_IhX:m;/hf1/KiG)g/<QLYFr/-.qT[a;NitgP3>s\OU!PP.[qDiFP:S1?H%M9N1*2FcIS;M.UM.pdfb,%tU,oi.GhaQm%j7s^2e1su"LVoYjhfblI)g@Ok@;7lqSVgL*Z`F<]2sgQ]9@KSN+0&l@RYbs'-Tg46#mi.LI^A28AP8VXH\.E-91gOZU.A_3KY+Y$%,F0;">ZZ`JlsmMD7dKE@X]XWGnXu/JJnIm<0/+GW_:G198Z[_IM3X2MKirHC.VJ.IARV5+jOhs74g%\p,Z'p_B[9b`/fEE]@.,ZZ%kYVK9kJ:!!kPZiW;VEp'$[Sf*hg6Ul_Y,6X4s=](6#f=?2X*BOK"7($0)$9JnQoX:ceTJ%?<Zq<0l_XCM,?Hl#.tp[Ob*`Ef*mVC%UG\`)PDEDPE9Yc:N;0Z96Tt'%-AP?MDpD#kLGR%31*<-PEMtf3_#>U#'nc;/3uWV9+,!8ghncis*k[Xt99&rY/X`"$,@Sl`7"/d,%:m,NdrcFm]*'UL75AA@3/PSE93\SL0'[0kOfhkfUC?(mT0b&nu[16DLj3g&P6?06OHni.[_kDOh@re7V0k"LY4UuDbCqfQ$Org7U%IuhpJc3gr#pls:D/-u$3S6gtFgO&9C\S1<#c(F>;4`3f0[@iR+oo\Dg^1>]"`O4mA2"$c:XEF9Dk>4WA\J"+mYW:1`Rc_,F*;cOo%EB'3)W@j!'T7Qe2`?s=mTfA6"Q"qiZV8km*&bTUfpF3FbLTi-HR=4au5Gk)nM(js$a&^&tW"3ddiN[>Teh",N4cRW2@mukS,oBR@%<P(tM9JZTJl#ko]f)t==jYN[`mX=#?p31VVV@Q1FHnI8Ps5g$]9"2D$JEFoZ\tcp.[7B0+Y0e3]pUfn-8A*I=^$3p;".l1a&NtR>%dMp)hB\`O%q,SHBL3flVlEBt`Up]NC*lU(S_rtIn1\bZaJ+"6qkAgE8[JPa9me)EOm9f/7B(Vs<oRj2.CY-1@,DprZCHcM3!UeG<%N1@JMha1:G++?]&D8"[DfQH2'l2'mf_=c=sn:YX'=uJj&cferDf=%`VDqVOf5GMRoq0tmRBBXp7BbplmgQG^Th,;?3rp*_gV>2]n%S,_X)/+n(tojQAIT</<u!QKQ"-%'VN_YVf.la9rLN^HU\05#E;fP7edg98=hn+bE;U%.")2?=sFU#YdRfBN$!JE(F;otHIO*.DY$%ABh82pAtIB.JhWH,%@q7,m<82;/`mn9O3_!YI`P97rLj]bb(W(\.W6L)AT#F[+pU&6oH:CdR70)G=BkK`H/#]X%HWcErjf7=<Vp:%7<0:;b*n[iQUdC$/d5MaFHt3Q!EV:ZU8nVR%:4<'01PMA?8A\m\6poX:Bm-eXoc+*kZ,cl_,UN&R]h<9bA4B`?6ZsgKKCDkj_P'A%!'Y6@4Y7Jc<KbNjB9l8-Tdji8!+1V^8DqW==`EI:e=IlEK;k+;h"F#_/!Ypb.TLG%n5U%8,o.bFA\aRjC]gbMEYD`(hA&<u\W#md%neoE\n1P,g'o8o$?Y+INd+8W7i4gbOi:e_2e;OSan1?0+DcneFJ4fs9@Q"<P-1fK%N9i[:+H5CfKNPZj^)(T0/-4HS"+$sI3`8[e%650Ue#[YjpaaeS/5k(&ZU_BH#V?CQ9^<-T'B^c0S#/);SJoF&I6:<&nQUrqE6o13>+MF`;*RTfs+KV!<3o3jjHc`cAi!kiqJ\'!;%-maHS.b)9'03*+nQn@5m_'"F;HirEI(M8f2aWu,\H,M<j@Mf8r_N?@)<=1Xj<6YdZ49EMTJf!R7%!^*MpDdS)4CAj@0T#p6V#V@/%A?uVP(;q\a=gES)+JSoe'ODBe.0[X=A\]Q+n,c9m1'h>"!!*sZ8d9uAKeg.f"Vk:mJlWLW&g0gAJrn*LFY\YAWEcHfe5@#d>$37H%J6oP^=E$)P_O<1=^ONUW1#S5Q'u;!cQ(b@^H'o'fjNU=e(IF[CKU,FI!'l6q:l0]]'jOa)'/\&Er0+p]!DF$#I3(sZ74a5p8Rbi(%J?(/7TP[d^",&uNXe/UD'J)fj8W?8@8HYNG17:fOaY#!$b"0Ha#]&P=7$kd&,3VDf>^=qd,;)kIB$<oRY"2\P0*,E+c+L(?;UJK1%<uG<=YCJ7Eg`o?B+m+Ck*C6,3$Xj#]#g!]E5sYTS'jQh0.c>p=KQY'p"mRSY_anl[&IUm!,=;#kO92F+5-'4]Q]R5*&0p>"!.rE$%opH)n)n;oh;_4\r*=@V=o14[K&aP>eW'*ks=962e+lORhTn;r@\MV^Q`Fjj^<^/^PEJX*#To_fRE,>Fq0L[PbJ]kp&'EWb$HR/Tr%(k3-N5(Go*'`l7EK>.JA^T7fm<Ash#%K[7A0Et8L+fq*]38PtQYD>p(jHZJmdMaEj%hj+'HD1S\L^cl_Ql)>1TGC?Y><&:p^a7YY%CU&[)A/!0DUKFTq5_bhgN'*#(Ck,G,Y='e;]D0AKI$FgsaZ;]d8]X(-ONdi,HoZfF!X7'Tm@>f6JUhTsX<SHf/K9\_PRZOP#Ur=G%4d2Z!$]s9A*;G]=MEiM@02Q4ji"oP=AII_.O;0)2-(e*M.1?%Z3L@nN"],D(=Gt+(AliDd!.'u1KM497$=n_9ahTPb,]6_>"=RAQ%@.a[pbeXKL1GWiE&.<dIk2_2o-kLfr9m*+AA^ttO/18Y+@)_^!Hljcp42=Rn%=beY5pUm2mJY^,s$YIiX4lr`UGBX^8i1qtS@iMj%OtJVHXZpp.8D8)?[8n4N6bl'Sc[)W2`<Gb7.fe!a1i4""Z6$"Tl](@Q*t$Cn\NX[aaC^Cf\*j-LKYFok%C7Ua6u@K0pUYM-=*,G_%U,Ta3)a0r&HsUb*(Gk"NC(aBl6M0tQ7#2n7043Y85GQoqEV/3]Lc3)Q[hfWUU'[jNhkM.<82O(@ZN@/_Ln[qF)j+eP"p5]P6")PK%dJJ),4\tfV$LG7N@HVW*Isnn7l#iJjer\?to"eHO*MRUq3.Z\C?EYB/?OcYm++![gfn9Gs7,gK#'ZuPs#lG"Me:Nj7i['ipefte2%,*8Ha#2V[d!;Ju`Z:IZ#J5FDLU:9edGhNaDg9J9\IueXLH_UQhO_-h>8@nYahAF(8TH!)tSsYdlMqQusp:$Ff/S9KjftUJ0Aq,`l%hdZ;gR/JUKIuE!p;p=BQMqQusp:$Ff/S9KjftUJ0k'r<BhdZ;gR/JUKIuE!p;p<D!`U%Ltqch;D(:1cpm,'7(Q/?'E\![+GAq,`l%hdZ<J'XNMN@eR9ur@MW2MqQusp2:YOo'^_-^W#PX1&G2!rYDhiMjSnm^XbpBi=dAHCTU@HD2VOj@!5-JpC"\H/HIn(aZ2XRF=7sr%8d9\U,RKWI5nNWjMqUds8P_07&+?+K$jbs&<4bjP"!]LZj/h+gLI3(R_R$_uSW,j=J>WW>UCL`/["@N1p-0/`muarrPR0DOMXcTV%;9;7N_0\@Lh@fF;=mo>#0kSCV!%Sh*TOM%noq%FcYZ]<j-gg"$%%edl%ouMX8b-Xb!T1au42>V1+7j,AOm>M4j^qlM?=O+^[_Z2(%]VM\0!KG"s#_%L-h]<l1oU7i4k!h3,=/XjX\(Bo_U!\0*%J9b_6Vt.#)"mo('f2e\.+S*/[@;p-`FXQGZ4A'fhh?!d?[WsPNA#DZ%07VK2_$5u>^j:MMq+sN[W4,8t=nqlE;\&5AJW#pZ),UA3O$X(RY'LAh[!RdN]bq#0<lsDe40H%n[g>)FL):jPNg`-o6%]Fa+'EnZ%karJ#U+[cYNPAJCC[5C757jmq98pUa7qbqY7K6eRL;Rec#/ad1T9Wr:+!%KplHkoN3Y/Gs=E=>oq#^3M?dtA@$X>`;s79U!NW3EF%(pmM,s)hHqKA.2g^$UI,:jDr:Ks"C:;PI"/#*%bHR*kj.ValpcjciT_b<_p!Zdg%EL)H+Vn/i]O5tEF.+WiP@:VHGk)+KeD-3)Y<%M,lm$2k[Y:&/YL>qYTd3BVB8LK88T;k$OeVOi4<n7Rf`u_]\)8K\ug:>:)&lOq8S`N=UFCX8s.t)!n;3;"&hp+#[fY:3IASB6<E$%VBe\0hJ2AjKrM>?V>o_,F<O0d[(8W\B\+3^*-ALY5>2+&f),>X!1F9]!6s*a;`@>9O.HBdFi'*eo>j-Xgd!uFHcL)$hFb!-1W#*3%0)mRHSC),]H[k8!EI@iNc]$V5)("I^J,+'LULEUXDiPa0`^lEpLTM%08G?Mp3n&YgmY2@oXp=r7RBrQ[^CV$U1DVcir\^c*jmiF#%m#F-*VkKVrU@:CmF2"FG;h(ir[bcdLOJ_3'J!`4mYTNi&W88"MT*>uHY]"##7FkE;E^sbUe@U?^*E:Vrj_3-)s*nGV%B=p.)kdPo%0)@5?q\i;2>f*`-J'[$LgBN;.]g>BBJ,=0rDNJP5G!XO&n]8JI6\3PBJ#t**+8o"0VUlou3j&FTeK"UT4q6BKr270Rd>.C,I9<,M%+,)0@Z-Y<DDM/VI7,]Ca"&XGQe(]6BU"X9%oc!K]S<"_aq^`UnQedG2s1V*k,]=o9$sPT9s)>%u>GFsc66GjR,BG#*qPr:bJ?E+o%.IE%&e6\c!c<5`(*<BrcWuKGB6QbO0W&%ePcfHoB'<7o-6F:V=hg0F?)+>_s.Rr<3kh1h(2.6M5g&dhE%s:]F7s"UBKtk5b0_\&S%kQa<+#SC-5Y_'iu#KQ]!1O=Vb99YKo!TPPJ;H?]jSX)P.\fS;]@7=KX!nE@\dBF-BlJE83W0t#65S%&Ckb.Sj4_-2c0F)'?(gLHO%HZ10_%n$WA++!QWs(`IR!gg.jenV[K^M))f78$/Dm`2:*Th!FTI1([Ff#X<+K3fCtjp1jV8^=UF]4SgCEY2$Zh&<ePlI6'r-D'S7%Kmp_g[+V=`+"[N.h+!cuC(&F<*LQI!/Y,bNmNBnHHb$9E9c/l)G%??K"g<1n*_g%/Z%,iRGQ4TPC3D8i@Q#O."@DI&QhIga]59]M%XW&tb#4?g57u4n6$k.BYh<O:Q+[DP(7u%)COp6NUg)kWN#Y<pVhQD&A\sF79Pn26AmX]lH^-tCC)UsPCjoQT;Zs.qY3OksE00kmH%@(6:S!\WDQ%tOcXmU`TJ]iR\P.J.JX.lH]@>5bMZ1PX<#?F3V2EMU23Ig>qVK"]@fUM.3ppkIe/gPd<Y1KkaKLE72KIUKpC=Jp&]%e%%MqMI-g7ZWq304DU(K/Ba3D$gneH(p#KQFYZ,te5=!:C-\Jr[G![i-IK-u=oY7.2&gJM!Ka/hIM.^B2L9`=[Gdf^NZo*M82rl=%$aY10AZ;i_i8bX#/[Q/*$cU^DYS3alJrheC.ua:oka%2O*]'(711jIJq:rJIb=q\9f$l&**ZIKf\[E)TRY*MTD@Fl%TFu,i(&#]M%T#se"PftJ9J>Y.r(^<*eF^#Gd*o^!d^f,O4Je!*_7'\dQ6\<uS@B?@p2a-\X`[3+#,dj8D&#2(cDR9)8=$*t9!DE8BVH>/Q*S275%XqGq_/h;g\AA?l4O.(Cep@sU"P=i%Yb9QHB7M$\9T[9E;A>g'?K[m#D0IpMpfMCl-i$"cEE8!?GlHrDWqXk&s?E0Rqn5i%s[g+Ia%Tc^gEDr=fa4^quX?OKC:*7t(S:/F)AC$:C67U@ut"Mb3\!k$ShrP2_MfU9G@d!EVHYX"u:<ei=f;'q09\suXEFcSB.q:&8m2AiZJ%8u<nM<K\\,N*O$Wc9S*u@[D;cYBTZJVr^7PgN1TWBWI'8^tt_qR8"[QQLJUb.'W/gr)hD26tOb:/#K_"6!BbR_2O7\O!/q2/`ea!%.?hIp/o;U5K?j)-cDo&:U`;u(ck/+8i=W'Y+lmaU*sr4'(p0C[_SQ9hjo`G(p=(quCS^Jr_?q+N!>[h9>Wd8h1l1[#_(Z?A;(=TN%'d6.1&_o3^jOuYpL]Se>10JKKCo<`37RY.[2&c4m*^42%G="r2T'80qi-)^O\l8Q>kfWFqFo)JBZ+s-Nm.ZJRZJe`!i"(Sn3UE1(%J=J1fQS]\mY6^kP=hI5LjmGu*KOt2M]tY*M@8O4)="t4Z^NseuVM!Gi\*f7H\-jM1^6rctr+\V'HZ0j%LiW1)>AMljp\g$015:]=%=JZsR,Lu"#JbU8&k_i5<@7aZs^U8VEi`"EAVL\LF9Nhs?*Y`u,Ep0iBr5U&n:+;tN]MTPBX+.ng;uP3YaDue"qptf2I&HThN3e9!%+7oPF+:"BEScL5Y[Y?^>;c8WIoroiPBdedoe\'\?pAooR]'m=_@Kqs))Gh,:[bg;(4#5hFp]^gQJ=?i?&>HB\,!qMO.-!"[1asdB%gu=m9nNEOl*MTdolO[Wa?ABq'p6m;ekqS2&3j?(iW69sShn-d*Ze[RsHX/jJmgi=C$3LoOi(k,@'Te\9N7S5%#u0k;q,]dl\-3Mn%m];Qn@71n[B1ad(hT5h_;\"R8q)''b@mG)t;uN@u<p4QXi4%M*UoZgpU[uZ)?9/7:Dul78^k&)o,0#Bj5T*MnRkhCe(+<!:3eBcA%9"\'_.f21ZSq$rY7c/Y`<<Ka`7Y$-ocTA"]O-6A.)G`dXS3g!p1tN@4qEeIZoo5sDTX>N1:5k6APlo0rl:)JtV$=`Ue?-:`bPA(i%>c?Pgf$uG\'U<BS#C[d!AVR<F3I/Z26j%5V#bNkC=p8UX_igt"/n4oOTnHQ\0RC&p`Nmj@i+hS-k\X\Sp==gJKQ!!Ur_\H?#6fo]%@,Q2+bI#4m$EJEa-+CD_X>b9SR"&P1U*[+h19,k,FO0h<745=bHt@9#hs`?T:k=2Dcr#AVaOec2iF)/b56GD(4mFpl#m=5=hX+M<%OH,Ch.2=+^JP:9d1k(^iV4opF)fW=Q6QeK5j0bB*ZcA?p+&[V&$<72e*O(>;P_!^_X%UHccqH'NW0FB8;.mGT\<FEt<!S10:0l=p%!?O0=N6%t!%0:JIiBr9Yn'c1OQPt7\qS4oOqIj&7bQ*T?%!:,b,@%S+ghqA=@Qd#9NRo0fB!CG(C"+0qhY)L(:Etl5R^mMeI:YHs%"_rmcp*"b7JU=FA(Ja"eB($1*JZ>-c,j;/uE'<Xa)qflX/.%9Qm'k^ojEpNXki=H9(1?+"5gNdioT*Kq:]%b)<p<8PeUb\X#W%*%%)ch5@Q`BcYm,DjV_cF82qbS%lA6J05e`.q\/W64l5"0[TqQGcdYrb,="3qcl^4"a'AD?KPg#HDJfD%1K*ShU:47:,<1LmOL?p-*X%k4+$BE#Zlt1Fs%[!M&i:/^(q<H;mr>:Jkdq"8skj_`rLfpQ6-"at\$UaQ5m?SOV[;6,!Rl$JF,&24ZT;1WBgjA$0qK+Nnl)8-CuP%6h;Fs\)&5+YRe32_iHKG(bd?o5`4!WLYM-gps4C&:dF?[AW(H`5sr*=e*D5mF5b1C8`EQ-9.GSt2%s0VUUi6okhdjQe8ZD7(4;Bt%jo&4%*n>c)7Q=*Y^mufTL6=#[&fD3GQ[XC9eQ&r&B^X?oPTcEE\I*)aDO(CA3ZO8WOTNQf#e`(BY?dHi-T%;G^UZnmh(7_d$1$Go%^J?hEI#'fk_1G[W#/C5_md$2<B/"2$qI%smZ$hcdJiaW6Go308J:O>;q)R`QFmCVp/j+UY$2?/W2tZ>';idB0S*7YVoDS8Zmm[P,%G/)mnOu<uLjCirAIs-c.CHZMAXcjZtb3@&tog[=m:qTXj)*/J4TOuh5Y3lC07bXRT8k)*Vp7knIiomTOX(^_E(7MS38)*]DE:#8C%,$OsLWGXD)I)>==G?$J8i`(P7lN3`>5js$f:@kSRFO^8DHV(*OaW=9$_eA_\&K-*)ZE,^9J;,/kCn!BeV-t6]kt,OqjHm.m;0UFh%Gle"g>d':U<s'k70QVWd]@uHX8uZ-@GQDes8f?NXZduL&Md)LT:UJWg;/KG(2XTT2+Z5@l;s(8KYJ>Y$CbS+Gl0XNaKNeu$I'bSr%$ALfdQEl/`4X%?5VlE>T6+m>!;E.+`;?`7%E8g0r63(#jPcE71GV+57GF#ah8$F:EZ$f!CYDf4l*`q%$15*3b+^Jtg5&@3!g##kO%WX_N.De=2gQQ?d/2d=HEp"SOnB'FE>>VpUcTBdTT\H?\$).0PRlD_U/rbAX*?W\sfm;="YGLhfrQ]I'EW$,qVku`e!g$F;5%+Hs'%,:P/Z2kEsK`Q_qC:`LHIkt%ncEAV<1Kark!O1k.[iau5p<E`V]%5jDSrpVaee@YnNaf6+\Qg]-RlISrpHbYjtFa?Q1dXH'.RFoe<%N&3E(GZ4TV0Af0,lFV$)`iNuR0"fBZk7<WMb=_&gh^DWFrMd=&XZ[EN#H:Hb9u]Y+I(/nmM'68@YCJ7TpSSt@gb-$RfAFcD_oem)%02g_Q>uDX$d8+b'BDDb`"1gUn4F]Kf^pg-^FhbIO='eh>(/)'CKeDf2D7qre`!TlA7&/JWS]<7Qfp@]C;Co/=.%_bl'?/,bPuc:&%X4u52$_JAt7f=9TCF-"L8"[;&;+T;MUUBm.hKhA!QJ8[8jY\:Q3%>s!Q@<6A=,Iq%T:&5$^N'3O/9MoTS]'+L7U#4BDRF"84a>;;%N5iT!pg+d()B7tXi#7,??In5-N6kgJ<RQ#??h&@k^6[9lD>C8c7rWYd.ou@&(N-7p6>cemZN$"nfTn&$kJZM*o3kpN>BiKbDKfSu%5hl+b"c/=sr([1'$fSHura*^MRA>,a4;,T1KjuuGhd"Ul'))TH,nFoVUKUKV85+8thp8%cM/@+Yr3glL4iG;iam(CZ9Y-G]!U8GJ%M='\F;Gq^&[`j&8[Pg(5?RO/*PBM^IIAc1sfa9-,5-R-<jE*YGDdC.FH5?IFRk(Nm#h2,Lm:>h_q6*9P;Z04dn*.`^C;%?o=O+Ze%SJTR\[o]ET9)2//YI/h:5>USeO]XVjGPQiAH(T$3='rnaFZFeQ3n;``S!Qb5/"b[Cn&.Dsb581E!4_tWb88Epe"0J7ko?!aO&ccK%FesA>@:K<VdltSHYb*sPls/.ln:7t=9"h`S3Lha.*XkQqTt):=^qi@UXYFHg<<Jb4=rBe=eb`tF6[ISD;$H?lQpE"%q7<Q)J3$_p%M/ofhm)BbL=V@tT+u&-FHk&UO8mj1qS.:R&9.pMoU6s1nJ)aOe^E9=F_WKsn['KJ>M*"%V,<rafkZWA5^JamO?[Pog7k)]V<58KX%4Xa`ReL%*=,%.Fr&fB?>9',*>3fl9=<u31Y?Fk.:i,#TF:";DA>?sn9'j)k5I-ZQQ8??oYge7\SZX$DN7sEjlhP-0$\_T@C*AC2f%&u=@MZ'TKcBA1L2HUC_QpJPIIpN8&#F2eAQeTf]GC/-DEf1rN3^e'B0f1FJjRXXY-QG81!::]2omZfChD\k\SLC(SEIPoe?OgLrB%q4Vp#rj`FYHWho^'1\Zs>-=gmbBnN]gYO<DK%92A4\LH\"qI7X1Ks<YlP9j&=7n0BGuM;32$S05V:*?E6X0A$YAGJ?jsU;XMK?OV%+Dd@Yj8G:P\LYZ+fm\FU=sm_[F9s+l7H&)_NGndN31@j0(Jo."."?d8kr$e8jYa<J5BmDG]<RGJMkfu5WV1X71%,lMYJnc"8dZ8X%]`qBmBW3Q>O'YGdd:Ln>M[BPH#(GbMNQ1f-`YQ[gl+>32dn3]-&*jV?_=4-H*6('?nCB,uLLRTC^E)*H'u7<5D=CcC8H'rbPgL/;%'s_B+I./ih;6_2?!oI#cBD<A9Br_8>&$E";JT<ggi7jTUMjT4q\.uW&YRjqJC8I]:WusHA5B62K<6a:X0#>i,>!O0;.sRG[7bF]*%EXi%\<ea(t>(KJ]6"G2mh<<7`#oc\_)U$#.nasZeF;#A"g&Z+&,ncH@q=o$YK&YoQ!<N\UqrJKlQKOD5=jRM8-oPh\7>)$XFt;"r%Xp$B';7$&8[KS#c*4VO10;]OR3O!(5+#ma:K+^!Br6;7h]M&22aTCIU6Pr!tEBeY8NliL[0<ie4fEr!gGcV/`(-%+)_no*?,2+0Z%C]_t<R![?@)7)K<$G&/!PN(ObCf?>1qJ`4=gPB2VCscA(Y_+gmiW'TB<\YI)4pDmT,Z<.A(WHiq5;&l:kllY9((\Z`0cTZ.1RJV9%.MIpf6A[^-">Rj:YjI_RWV$]0#S$rtFSV%WrDlRXf8!Y6\?'$=9E/9A'h4nH"hO9b8:*M6>M&"<;a?6IqV/SjC&>;,@(E5n`LDR^%O%Sa6V-%S^s"%SY7[Ok"i>LOD+jH%c%<?*301J#[W2&Xug<'m`rQb+<*ZZ7kH!A-PnTm3%W-jUXma]4mT/&F"nr$hckc1Q"g9^;R%/D,-N,LW\>ORKE&,.(]8f3YkVqeg_/jT.?7fDTG/H'p;JPL:B.2i?_+%olu=mQ%]j[$2%i"U?`Y(&"Sr'!<0f6ibgQqR2*depGI"%RAYYk/9l!5QTi-./AZc99*n_d\bg*2P7Xl'[$7G0:-uH;VU]<XkSbEZG*sf:p\ES6:m?.GfJ@Md(&KoVUYCDV11M=a3E?%8ngokI%D>@+WO6U.6^C2#_Gq5L'+'-SJZ)8a#LP:@d;.dV#oL0>EDs%X0lMd,TGJFDF$OA^*r2&hQI,-ut/=g)f!ceP$M2B^G#g]KcnD)=P%=)A/o/[t<n&'4U.`#S[3gJRoKh>NAuJA'5e@8N^"^*SQHrV<oh+gI.mTrU?93%:??=MjEjC@,I34T4dp2D0/JV;g$1_=U\[=*4ME%mqdO'0AV+2<'DDeej5'u?7bG-V8.%KJG77E`sL[[S@rQP#$H_A_/oEVg7!)#fYfDD2`kjWU?R4!On3.$Zhg&pCQZ$fVptsQg)U3s%P[]?,Jgi4\R!qlm`mI*Jr2b,iXk\%ob`7_O@\r[[g,8N1XW'3+)&($',shMO]q#I"rD\,fE2jk[Q;+N([6<iA,;GZ5[A%)W?=h`L%Dg"qZ)oBn?/+i6Z_L%u^:XjgH0CP14UTu!hY6K%^%N_37KoNu-qo34@-e0[i?`]\I)Y42\g?M9c$cLR)n8FK70$m?0ReF$BpBa?Y%.;lj_GDeECM5Bmk7'-WW?f;C?3?aqV!K=]LotX[X`AH_RR(;K?/nso1<EV<LQ1CatU]FmD-A[.-:=.C\H\mbJmKKb$n%I-f[.5oN%YkA(`L[%[S<FZ:fT;_I2%VTa<HSaZ!jfj`%XGb6V$/kcI]<br1n4me/1i=>*1t?39OL0fs4qIS`*C6go/RW.seskDhiBRC'T&"5E%f(IW@h1X86=h<B`?&50%=r3SIOVi!+j@X]t^-'FW5j(AoMEg4c\?3#"D7TgI2np13O=9H_Sb#^,9Ad3l)[8n##NWLdqYKCX=A&//%EPG!/DHp)rbZ+9#oBG!;YY@$K^j0:d2A3l:.2sq1"7^T1?sCE_5-n)@gppTdpH,L4Epic^<B=JMq^>`T-8`LkZ/$e<r%0f9dT"$i%ALjnN59-dlA)dV*!Rc8"`p13W\[5Jf?5Ajpe9:nrEa)[?WX&'Z3&5AfhFEmM8*h2A6t(Q)IBiLfBJ^*]kf'3`=O"UEl4)aQs&+:u%?7ueDG0<AU`?00siK4=,^2iWs[78tUSeLf>FuRYqD#K58[)ZPBn*@+;o4)1V,tj\Q\$sKu)HADVLr;3CH4Q'cKs"M=PK(VAX2p%p%]^h'AB^7#f)m*k\G:s$>QkN-#SG'>E)6PU0EaP,cnPIWM!9fU+:Me,=jDT5m-^F!<(N#PG(WP540UmPE!0W7)KQUs/-):NcDu,S5%RK-dS+9hQ30V@7NIeG\Mp/0*iJk[LS0?gEa[F\`]28>L\KUk7XFgq*l//j+bJOF_9C\/"TmqK%K\m@NNDNt$oj_a^-1L;oh$6ps_%M^A1uH(r"h?IRGOICS?iBAq$9^'&c^q6&6E4C&+%UPZrJQdEL.:?Op@G4l4lg"ska=9MOs/laPtEo@(fNA'Soq#G)=/1Sm#mO`+;%daNtP.=POg/T-FBV*b$j`%Fqkr@2,\manj@F\)-/8E,@!iqeZ6;,mD3$]7T'>H(4FWsDdWMU"E'NYIt.F=iuomGgrN>Me0<qW6mh%j3C+n"piB:!/Baa!HicA'sHLJ7mu1fq1Ffu\nJ5]f2',p$0*#<?0:=XDT/,lZ.\fJ,TQpPGC]C^^q\Z"J*P@`(9$mW$')^JOh19L%(oYP8Xh)'K(qTjVGkY/)S8RN&oQ!,+eCXFX[$3Je30847(bjJme*?h,!Lu=3]gHbsro!$`2l=h?(6+%2U&*V%;@J./!3Q(%!p=`E%[EAAA`aKt<It>Uj$j3ce`6oE>^KQ5Rqu0Q=[pqHQ0a`1GK5FlN&+"$i[.o+A#!/*3:e'6?qW9SU'h/MM!OQHa199p[-"h&L!39f-%X)ohW1Vh8lq(?Q&pD6A,[*0Z^XdLN/-k):5q<b5![?OlW4GSMToX9>YToM<PdNqg>c"fi*C*V=6/[)!O(r0<-agGUfi8F%)e185Q%frY7q+"FoQikTjQ51Yc.)5'PSQf^VS.Rj%J00I+\KC?Yg0_&_`,Y1#N3?Y>'U"["4Eb]Tts'ld=p7O^<a+UgH=)=Xg6drV;C`V:Q%&C:G]kGd7&Mi5ZA0IJXIE,n6N*C4sjZ+fqGC"OXV6P.:b.mgf&m_?=QG_a9E[Ja-S'/l1K$f7s>O)L9:FWJb"/AT@GTle[D)QLp.%T;H0KI?3`$PPPHjZ;b\bkF[8P1M:B$j^QPQD#EX**$Igtj1Ve+"Pi^S]OM=(/:_4QZ)]=,Cs\'#9sJ\:9q3g`!!&YCr5rju"#`8H%">+C<<m-Vmh=aQ_Z`U?k2RpB))P?I@$ia1$WeFNM:_MN8qgp%4J[C(tg5;N+gd)J4,i)X+h_YdGX-!&':?R1ebdWN$m74R[ljebh%l?c6`+08aL`2h0k6XO3cJ2(E4O=bDNFH@4DAb&S`VkrLRUqH@b#aKoCmeqEZ&(l1k@H2d3)fF'X>?0.j'DB?u,+;%Rs!&:o^tu5.%>4D\+H#7ZV%&VoEEdA<;THA+]aQH"op;lB9WKo(:]R6f(a]8sm<Z@h0Q]eY?RYM)UhF1a9*Hh$qp:K#%?XGs%/+QGHYO_M9S;/0:%Hu\a?o;iuSDU."#`U:cs4f6brWl9sq.q!PCk6XFHr\T.i^]+L!pUsqFB]j7]+^Dc6%T[K1e\d"J+T$k5T-[=9=o5OPq=8+HNPn*(%b*MmdbKk)R7useMp<RIgGX8Apg8<FTWR7#-[V2sWOt"EUVGhKCPh7J.o.!p*!'9[MO_`4u-EtMeMpH06E-&_GCg=,9p!pBhHVM0.%]tM2J!k\rb:,EIt3I-&mBs1=-:Uo+f)>Qa;h;i,_+bE+j!7/F!fQ^2qh#PB#`Co$rO+An;W#D;)%aopH)@NS!CLFe=NrT1K@R.#c%O.<hL`bnD8=7W0i]>Ad^lNiH^F$kX4+d?>PJ;WV"K9EHadO/Lu#[$3MbtE2eQ#:CbmgdMe-+OQP>AA_o+C;Gb+s,esjHp]h'c9m2%7d9Pa%o/I?gd*nj<0tnnJTB*Z2X3670AsO@X'[T`>3NAocaTNJ5iAa"0oEa.Y>-1R9F5d94`]l><e_R,C*UKV.j(sr[,gZSGli<O%mV)5Qd/1l;1*Gc!qs)n+nkm]hAC_%Q\"8d*V+Ys8Rf>CLmq`$^3"DIZ9p'>>Y%;_`nB9S_pQk[*\m$9_c)q;^og%\^GZA;"/"afC%R_%CZgpg=t+It_LB^s!G!q:5RTBm0MVrHW[>;ERYs-]q%>ul$,A>EDCLPE]Q'*YJ>#g%Jq`DiLkS.V33b[nIkJ,N!*\iXtGg2$UX%K$<__*mD;*:A:j$?_04M:\QL4laKr6?nAm$RYZLD9PJJhHiWL81N*FRn4:RaoBQc[Tp?JU$878$EM<HC/s-9!F?-9X[eE$e=%iM2%_H$8;Z1)`8Ht:U14W'M]4dRcc)ai8us**3m2l#uR<4!IJCB7_CreGqbC(FPI[U,]7iAS?:?-_^!o\nGAKc`K8)_St5mR>LF5OoWQ%9"W#bmT!$K>ed+hFQ.O&Z1C!"^i*+oo6`]2h`/*[Tc4r=S]bFZfF>IMHOCWoF_L8_gNTL4ej]RZDC)Wu27JlX#(HPV@f(LnDWTrn%0UM]RJQo>HWO]r\]f)3>^/a@IKO[SEDr&B0o=;ESb'A.Q%=l%4WScC"e(<t\=ii(B3'6j_g4cKH\L[$[k`n]_0XeII9$.(S61M05%fN.](Dc0d-5'pQm*q':*?G!i![Rsa5&_Ih(Z^&boH(qUQH3)_]b4C@G#F*@N'c$hg4GAe"L9WJC"H=]$KljbXLZ.lATP25Yl+-Q%%,W(iUeFKS;XmmYF2F60A.'^HI[tFsGn=kB0dK=&>X8Hd]JU_mui9<=gDY2>$3ds2(2nCM(kLTC";p7_'(JfPrmV:<e1uC@LNNjGY%S;S<g0kRX/4VJpDo@!K8dqC#h1cnf7*j9Q%c$dUtbBHs0UY37`5nd:[R>oL-9q]08JK-^ZNE+=XDcBK,q1[I(X]4:;qC:hagg<($%U6V^$Zb("ljo)[</JGp\?hM(bkh5O4$bVme@Cq@7"gn&*V/^ed./?Fq3.]>WGd3]`aDN#"&tmWgcU1=NRi8c`>l/VlkVVR$12aO<%4>4[V3K7d5I!7TC@5^.p4_8ktmK&.:*q"@@Z#7k-#Ku\$_.qI:]o'([ps-bjX&2/5<4ADf5q=cm(MhXB#.r:Lh34Kpm9MD93j/uN%@c-G9)QQ`n)t,+D-_.I((RF`Ti[JN9F(o.25?if#Y'Rm1Y-%-5`OTL*W8*HPgg`L1bBIQnGAD2"U\WWkpGHiqqY70i,J>`;7h=,i%X3jIS0Yd?<OM;UWo;Gf9UW9E)Mq_q8qk[3M2#=F#eCO9nC)#*`$c%O5O,$Fm3Fk$OHeI*12L=r(G>Mm/$712qTd!_ph^V;"cQ=`t%C*.@gL"Y\_OkA\PHF97!D50QF0ud<+L$O2baD#a/jnef8[DZnRB'4#reL6O$Yh>A0ddVtni5_qgFF(L7DY3#^j6Kb%>\,hi1eaI8%7\P;$NjWqo=M!TOWX1?A5F_"/:Q$aC6YTA:2%&@sYhA<n>+Ph(AT.#!6o`&Cf&qh#1t1e.URR#iCc(*ZRaZtMQ02$-"`S$oC!1IV%ol]q:d;8HeYj0Xn9>^3j%Q,^fDo_V97T7=bj'VmG]&kgV=tp3!;/5N=+g6GdMZ]"gI-_SeUHA!\dKSL<P'4Eq)grX-+&Lm$\Op])%D&n.-5dP1..(g2EjJ/P)d&8jC2eo^C<m4%bcVsI,pTDZDV+oHQB'8IC#W2rn_.-bq)!'Npc=!E!#J_^@V>8m)q*&IknjmDgo[^]J%`%mhK]4D/ejL_If`rkK&;13=\fRHR'3Hph!`VSM/JTVc:5YKDAb)7a^bE=Q+Dr&(-/W0&3LMZ,I55UWqA)6Mjo'+V0c?7aYrn_Um%LthYZqs"'U\`2jJopg)I\8f$.YV9JB4VXJ3Z(j]22r`W=^RQ"I8'@F7L[SmAo(<pmY&\P9>+/D_1*C`c/D@U=oA7_F?.C$sgRPmF%na"?[:!n+8L=f@Kok)TbPrVY/-!r.tb=D9^j-',D[?=[$h`\LM)Yn1<;GD,uhgT]'K=&S-g\L*9IHq7;mbQ>prh@,]T4L:SC%]<>%DXZ%-5M)2`ADF<E8mCmY=lVeA^HKu!o;=YHl$)+NF89U$Sp<8<F5FQic^jF,mMa*rbBYA!.A"T?n:&N,?RkN:SsMP.Y"&a8V3fJ8%mV,g8hAs;4a&cc?F0Ff1#@cWjf#hatB!q%h^"m&Km+WRg*snq6_VX8gP$Z#^lWM2Mc"*,U7X>hkX+qYR>Z/8FR7gjN"2FE'GrZ[j%=;eqnB@-[[bcMo"!*e[\>K2_@DtUh1De__jT$q`V=QqF?GP$'3S/pZ:]l2WL/u2]UD_&W?S$)m;-V_cY@pW?q3a4D2S])YLK!uOO%;#DDWYd<r0Gk"MnIBqPmas4[KH0om:gSgd1o;A*Jo*`?,l=Mq\S7\`in"+qGh4;aZ)r9=-md*D!d(1?g<V@2WntS^UdG6\ii$YhX%Ci,:;ms4GTBXG=W[,<bJ>1mRrSN+m*!">j/cYbRdGK4WD?Mb9^Y,%OU^&t91i(X:1iJlH&S_GR"`cm,ZmT>T?_JL"@,?I"s-CmW2%F[;(2J'!CE0aVY*e3*S>,3!._$ru_;6$Mi_Vr[d?em+#O`ouMG7S!nHAm8HQ*pgC=(He7I-d'-=$)W1@XTIn)I0:ApZ8TblSmDC6%+",=B*J"LRT_K)j/$m>*P+U$cJ9Y=JW0mOd?^*iHf6c9NGk9?(2$2$he"=2iK5V-@"08RYQPo/krHV5Yeaf%2$Y=8lNnE+CY/Z8V%+;l2HgC.U)L!Q'6X<QeGmFVU+Z>bn``R#PL#0P=IHZj.b5YZ(0AbHB0&ocaA3WoC76-V8j7I;7IiHK%plBJ>BE/H9)hCq'3]EZpG%O:!BEI'M5Md3ojqkj<uoaVj-n&J'q)j,:js&Ycc2XieMRK>5XUp#U0)rfY;K]g.&Qd[563TXPl@rkJl%^YN'0N+FPJq,DO^-h^(^%"M$V0'&Jt)DSoA<6WZ1a8BU4Sou6%+YoqAFHeP1SW?M:"n:uA/%p1I3F-l7)78NT]dO-!<7o,&781Y;kcW.7H1t]4:aKP]THamT)%APB8.5+W74qh&F+'#$Mj6!"T`WmHA^A;P.e=0?LtQ<E!&4;r!KZkgQPIU!-_ob-C1?:P.3rc7+ZMPMtA<%CUT<,=:8QgE19,%*YU%#uc7O;j;s?foVqL5sJ!odC))mVX<3[*s<?@SidluhUgf^4=tu!'2=X_jFg<?Q./0Wb1K\pY+oI1gM^!9c$/jVURr*FkKe:,P3\QB%LkEl]22U3a>_u`E=hJ>.=m1O)&rf`_AkG?'`+I@cIK!@0dRO)>Qe6?O$W6Kk&#X'gO&WhH*3][9/B8W/Ql@@$>gi>TdW_Af4FLf9%b1a(oB,B93B?M2`0a66h'J24eBrO_'V+>Drr-g/knZ=/smt8p#c1qGLN\;F*V8Bm+Y&sLR_P@;$I4k$#<&Akb/-`X3SLJ)V7a&M(%5D?orP:eus$sQ_C/4uM2ZK?2@lJJd9/8Sl`IYV:FW&\is)3<q#+/EDsblD4[Un&--ZpYiP@V0/o,W)KJHacI+Y'Z71WoI=(:1$kg%+80?W*?[?JK9e+055)MKFX6*(Yh?J%T%apNJh'(ZUo.)cE"#5ScfTO.3S]HOYVA<2nY$WQm/sRID+bC]G0`3X_[)d;C_%MZ^uLam%B_$67>TLYH'!j)S;BSY'gpZ<40F;38X!<pk$nS@mVMZk\^1>:UamkUm*TEsIOM%`k8b*6EZlN5'j#+UYC@'suhVBp)#DYTq)`H%0%;C"/$V^<)X2N8;"pU*41!<C-K1p4U>*T,0=q6<0*,9_W@%NSas<'5f=jN1MroJH=WB1#XK+n(5+"4f.)Ytgldrj=DlMt;-9kVEj1%6$4$1`OTlIkp8W'je`#YT+i0H>=03Z6THJ7N'_dF_9o(]2hU]G,_!!$?mdW(pP*IuHQj`'`H<"G#]beiKObT5qq\"-n\ZWFMKmeC%#*f%%-$8'Bb7fOf3X:7#pqDU'3&-8o"$.9QLs\WmU3)gB_G<'@@(9T1Xh5M2`'AS;)?:da]S<:o6>f\`#25;r99TP5PWj2YdPUG<%Yn4p^M1bKmKaD1#fjhNVr&L`!9:1<:s,^96);5lG9+e>!c[]@4h)]KV3aY+D6[/'JjeU;fbg'3>'4O3=InDqI.D:Q@5lVD&imN%7%!QI?+)"FUeN\(X4,EJaXCg.\0A$i7?M'qN[)dlXS21N@3k;o&pJInE!IKB`2f3DhZb_h.7=2E&-@JC#TR")a`<[LKjP:K1a'h;3N%.`.X8as6'DK'T*NaYA,%b_`*@VWL-CbG..2:WVU:l5<Oh&cOth14"[o/1!p5%jI!<lag@optMl^(skCN9ArPaG_(;):&=ABpio9H%m:Agb''<gP`q%GmM71QgBNO4e1gYh<nAYk^g>L^K>92RPB2lmCoW`LLa;H7*R5DUR;unU<D15[F^LBdA$$cJbI#5k#?(cM@QY9I,%R<qBq]PsdoMLn%)8gEn`E$JSb'Z)a2Xp7Zq*O9MrgU8rNZ4%`2m8_c4Y-89U6EI`/^#hB(iMY`;3a"f#Nkg]'AjL"g#[,+C>VUTW%++Ns9S!i0#J$P3he-67bEf^PS@05b7)ffH]#44R,l^<&*"KI/i$$p7@"7+oe%bDt=c6f4,`f0cil,'56]:cRjbr#,W7APu/8/G%a%nNd[95_7U//6EjCb/1ZL>[9mG(8.t4@kJLH+an?V/Trq!8;jIdDPj]-WEMu$30b8k@G1CV=sC5eH9u=5IpH_ZR/6`c1lXD8ksDm*%4R)&rZPCg?Q\h"Q_9q/GFJ5H[ai.3(1(:<;!;cB4F[mlW,-LR!=?pLB^nM6Gkuoh[<#1?76WgpmWa&A"_,o49&F7?Q@M2=,Y"*RQ%P0a)=:B;u]pt4O%L*Pf4Qd`LW`+Dn@aW]<[V3k-h[<0Gh9AFbI=#%AtI%3%=au-oJJ*1-2cN@_ajoV-!q=`S#2[[1XXTGO!EN9iV%04W8`^rhD*M)Z&U@H,DAR/n4iOHQU)\%\,I9T2RnmBcR':]t$sC=5L27&Tt"_EQ1TCLf4*j;8;M;)k=6Ec79=`M,J]r;<S2bdaFY%2.c0/PsH4CbpJ4k5D.7F0f3;KSUUhap0OZCU%?U'o?.mh-\ou3K9"4mS32SP5D(R$RnXB`Ig2Go>B&RA3r]W"88L1EFT*/"BQ_?(%Ep3GEU$SZpjO!^8d#h28Bl`G81[%MZ/3&EF?BECW0^H'HD;R5?r(NdCcWFK47=*:GN1bmZ>As$Cq,2mr2s&39Z_`0eU#@60!)@1e%X<m&UnXV9'=.5*P-Z><1GGWu-aCMMCL`d$fa6-B(EpE0<$T9tc0)YKB62V?6kcW$ti%FOU*s9Af5$d`Vbe`N,Qq;AXABeDC?u'Lo%cZfaq@k7f"]['djnm%a1g`0W^b"O-#DeQk^]=mJV0\MFl#ru="d*aSr7Z=H[2tjV<gIhlIG+3.o#V@V/@!q*Z8_5fG%=qO4faM!O%O'*@6":P"+]*Wf'7W\CdN6K>(193TglbCAhE-`bY*ek_hC>:)`Yu49?4MJ$KN5<6A`gY'tlnN_J/3%U9n:jN'];u.0a_%Wg'n0UV%.glcf<T*"j4Uh;6M/i+]r3n9a^!<dkb?\OMY.8S)<rCISmGZ=kVb94N1b/V<3lPG.Dkep!rX+QLCZ*7Sj6QR126\c(*a`;M%%eB8%*+#tW>'Dlhjii,A1K2;mN7KIW6L6GBCDdLhr2Gd_#AHf;8KgP.IV$F'ctU!QE7n_73Y3B[JI.8^X)m<e55B5:Bu-jc&NJRia%I#Z%"`X3TB/,&Q'+*^cGs],,c5pVZ#cW21^GJY"0F`s)[?07GK4tfhaAf\V1$"lCiVPb8'XqK,%gE8gMU=ld>[S-?.Kk=?cZ7_1ht"_B%m3J2B.6S-s;R@IT+-[Lu1PU9uIB6,7mPnV_O/leo9"kUP%&q.jLgje#,'s`?.2FgX@G>9s3"=nVg!r=3DE/?VWN^>^cf3:s?tIuE%,(ZE23,Y'fq8b7\D6/PP:R<isBed@2]5S@MT[i9MP2^l#jPILY7m%Wu+u5S*69i8`$PSZU&J+'&?_qoW+sLOCnHHE3SV(W#1A"]O%io0J#6XrMpSCJY=e'Q*qa=sn'$U9h-&12DYa[hsR5B!'J$n'=2!>Dig5%J[DJ5&3A-&5\N;&jioc.C;)K%H!;0p_]lZcG_n\J"jB%%"rUWE"q_Z2F/??1tKfP=sJeo6ebc^J!$6o^[r%(/R8WU+*0#>i+39#jjf@"QBA^Eoe>`Y4o`/U8&tF;$3r3q6-49I9r^`V%_#CJ%[(NX0>.+oiMu0^!_MTrY\A.2Xo&9(aR"2F9eG4'Ilp!CW4renaoW7ZCVHTZ33Zft^L$FWfiK-a)RKJ35iKu]YEn:OkRLeRf%:r96%br-Z(Z0s*BCrZ9i+a+0Z5s?9>(NN+)N:Z!F^)1Kd#=_T<SY1&cMeW.n'REKLCPuW8D&Hq[Uh>t2AA!CLI<n$j66TDs#1hhD1-"n7%0<E4U4HIr1gE&`T9UfOQC[q8Glo":K'(*h#+Qd#!D">:n)`";]?j`BQ+qDSFp?=g.9Wsjp7%Ff4di7p[A_2=TiQ*`+)ce'L-:fM,%=lTM=1LS,4r_.J;7eQP]@6!]jeM@@JP-k9:S8teP>Ru<JS\:L.GF:=iN8A"jBK%cR.aN!lE.eO!$k*%MBM/.^e3ldkbq(VJ++Imi%OU<S->t4,>cO;R,`VJ:?1/dH0a%?;7_I]NpHDZjp7(ud%>t"gA_fVNjbt&;Y%5d;^Ze+jn#4^A'FkfDTE(?JlGgaKalgXsCKSsW6%WGl*&2UbVbBTE>"kb/5A5q3ib0=+B,Rjr:n3YcNp^N.b%37f3>0?2n4$HJ)TbWHW#(EX%LT)nm.7MNB+:\IA-U)-@Z[j/Q?*kRop%L2&F$bR,Hhml_L3J.*s'2^4m2L3X`bRgb?:\Njf&=&S9Z;`Hs6(LWQ$-UpV7&gFm>eYS?A5t"3\lG8DZS`<Z/R,i(OIcu;Uq>K8X%<q!H^=tr/k+'"<`Xd?._oimBn.cp<=NOkc)eC:$Wm;f9%R`L,"]4[etE^dTge=+hVp:Q9"658i6ilTf2A@IaC1)C<Fm%Bb7/(ndu%qX0:N?Vr7[gZt,[4'o5I/N;u(T$/SYAD!Sc[5j6/(Z;"@:V:5IJ.0&=L>OCA<h%hl4B231Q]&7<B@sbXh9L$Rd3tOeL5q_2)g*O?%_#lII]F;F=MGJu_]N.gJ)\o`tbqi+in3"Eep-a>j-+gkc-+bbkq2Og60AJXKHHtQ/S[ORE]LFQ%^jC*Hc#"09Z"ir(UTqCd2_;2I%RA\_t<k$MNb%3&SWuU7<G=gb9FhJK``l*1A=ERRj)"V%aD2:5ZdP=1`<rCP(#;3Q0>He+/\J9FN8.Di>.9pW6Q>9Q]Bb(+4hb)\1%k)/&q9#,aNs)fBkpH#XEjB1Td1&"Y8l6NnpUMuf!cR-qllpYAM^cpcM\j#"=j9!p*c0,^!meAd)^4fgm)q_"&ZN`_u4iC5jC+m!:%c]8I[0>4%Wnla.A_]:uY'^6W&Rr6Y6b]qf_/3gq,_TaR"Ng38XhB-?uCcYTjOMNSKB%+#*l))OL*+KnV]@)/fCcWA7gptrkb,/ZK%'t?WPf\(?tV`pV?*[dG;2,?U'ar+d>Z#])61F"]sVIRSJk^DE%O\NlR[6*72XKq)<p:6W#2B=<7Na=e.MekG?dRMl]Bf7!49CA@1%VpD5Mi@bf_b<-5r9uk*mF#DHHflZ)N!m_RP+IeC0>L#!nDCgT<S5&1K$LX`KlYO.(+Z<Xb*Qu?XbWMAT<<:7ESnU)'X+JF:ZftSu%-([!`;eORaEp;B9lh&kPXRn5nAn2\1FKA_.[sj`/RuRX\lEmX\ACH7RjI/@m*@mK%k<-KC*Pe5UC*3c.FhZKuJ;Fjn6#=gMGK/;U%i=_bL9+,QAbket5<gS39Mi#`[o<g3f_("ka>Dbsg.(SrfpHoc5iCH3S3XH/KXCl^S]Nkjj$:::92\nQ]\qF./m"`Z[%gsc964,p`%ir^Yl/GE&1>dR#>R!\6@cmjUObh=F"7qaXV6$Hi"XKdhsU\D;+B9J=*bT1'-*/'\$%XZEj:F9/Q7(Q3AK);`I2@mBgE^0jS!3p7%%>='<N(FGl$0`H&Vgk_]N6$HaXPq%7'gf_1+j/`@F7YNTZ=,@+3R)dqDWdd"74H#d'o2*Q4_+U$.d+75UkOS6U6`n<-oP(KLALGn0%**3\FT82QTrY[!0"g7f`KZZ"00B*8,Pm.8QT?/:_6Z2,6:!$g=fKq@ARnn.Wi@6n^hGCl\*gj*rRc$F7pM-Y\lrHL(B"8h[(3293%^r#6?:0?WdaF%6\H7B'J_VG\a&f\$Ga]'>C-)#X^jZle'96Tn^KnEHMTuqs#COJrcG:1tq>8.a@dp1Vtf@&W%"b`.@L1=A2I%)3Y%-A>V@:?X;_.)5CS(FVY@pZc6V5\k5U]n.1#k!#Ri^_>n6TtVGgFS@dEDe:@66<uUXN6UZ02j%MghB.-#3bTp$o5S8_>'$Fth5,@j%fkOL4Gkml"F0%K.'Mgb>pGn(?*lR)J&H>.Q0kYa)mBu4NA6Ag;bY/>bL/XX^kN#^Mca]I#%6Z)o9n%!Q3%*MW=QAV(]3/Z.WehUa%PS_,!Thih#8R<%uN4Z>b`SB2%PF!!GTZOH7\-k:b2<g*/"eT`MG#rap87a-)?06/:^@rO0Z*ljr&s*J?$(k=(T7:@*$plqI<9E3L%&o/S==P<*%mW4*J))n#'g*6[K1P<VL=GsT6akmmBY(sbF*4`G2fFsF;`cO";IQN1Wqt-uRlcL,u%<&/)CD#aDnMcc-b^^6r9J;.D%f:oZT?lG4V,:oA>:>gil\DL&p(lR=pgJD>D0M+qkL<Fe5golBfSmdhMlna@/JdXj9RP1&K1(8.lC+=$<;^fPfP$2oEL9Qq8.R9>R%1^ri_L*9`E0lE"eq=^#a;Zh*eHFuU,2^9lh/IFRLK-BA@UN+-N19??NS=INPnZ:URS6YPH>B'H!*o@/mjb:j'%[LdP^,o$!ZC_#8%>TN5Idb;k_X$%uX9Wo;QNYoY_HC$_a>pQ<(CNl-1IFTa3p@=OTQ#`m%WKbkeE#E;jD^h8[S*ljc?#lLRG1CLqYk$`s0pnL)i,d9$%q>(t#8lRuZ@\[qc9>\l#Y/WB_HDF63'=R\HItN$KRH?CWBU@h%<hkco5)5-A&p$#.l?CJ.>(L@Oc4Vo;l\PWS]5Sj6QbE>[g>M&k%c,[AoBu]@:A1$79L`lb:DKL[jk?M_GY1*(-OZrPOrcKJ9#4'S5lWmh;)dPMQ5F];TF]P9g\SoX4q(3Du6M9DJQd_n=7ibq"DY+o+%8nd8h`0t9Cco3`eF5;IsG.A'"3HM=1eb8$#W#DumB=OJ2-BI^+UXN[WD:J9LrT"nF0!_jThm1?,hHeELMV1l\m.rG$h>Eqoo*SBO%#RN^AkpL;6E!CtkVoDmI_b4ftEbn3<Wub7._C@SN)^:Ge[d7=P('8W[P?AsVnWm5O,_3FLSt%nn/SKj8\ILM34nW'u3U,6=FdsbI%6!^3VPJJoGJKB9*(5aL:V#p5J`+/@rcT80PmZ2R//1n#&4jW3^?'70#PF]f1:0]q`_bOS8`*h!,EAQ9*XpVEuUMQahl3q9M^sF.#%O,lG*B<Z;!^c?2QHH^f>-]BUgf8`mEYmE#+!=YGN(?i0Ab4r$E_SjK"MalR!Si^_r5(DWXk-,K\9cD:!7h-+@%N,]+\816rCdONL%lR6-]o/F9jL$TAhr/R%.4$ugP#^1iE?#\OC>Yi#Cl_>H?9-dGj_.TWu:*b10mrRDpGO-<M+QJH=``c[=k.`Hcl.g[s6<N8YQTXSu%VFUldjZPDbe$[L:58A,er)%_Tb?NS61F%Y?PY:I@<EV@N^Zb#fT?73GruD>RJ`lo`+/C_dLh10)Yq3@>:V*d^3ct..Ot=DQ3IpN4%h%M&iKlB2W>r?k,"K!2paoR1JT0*M.NB^_Z+L+7UJh01e*"L<-fS!CX/lLYSR,2ti4:Fr*U)o'AUfi3^8pkXZ4ZQPJE(k>I*oS>>%O9N_o&fiKBbu`p(GXgf#T#NsYDlaW*-9dZT4tZ*h3g>[?<LE`YI).29c/MP`lm"10##<r@q9VgpGUMEDE$ueY$9.iLq0^LYT%Tfb%@F)-Ii_VfgWW5,'P^VV7lLZQ*C,"gM^KKn4"jck28LE'5p4f%(>X*OJm_kt/<nfCUp%+4O0lj?B3nM\HQ*+'a-J]W`IBK2l</Bjs%O*RlM#=IXQI_<@f`]_p,'I?P'Y+Pa:&0c-Pe[^,P1:_"9XrksMie;GjrA*KFIf;_+SmOM2\UOOUqFu&5#if/SrrKB+W/cA1*tqBJ%]:)N7Y+P`O1X9=R1j$U3+*!L*#chmDF8c"O*Lc)X_7>$oVtuC`!u:Q85CZb$ZO2$FF8]4AVOUT`VEU&Z#!)/2ch6n5"^ulbkPG!M%W":JjV`NGU5B3!OOZLn#Id@@UlVp+#kmS5tlfVOX8"T!YX](ZJ4iKP8cX3&.>e4_!F8_Kt1q!^A]qjo=p%)O09kU7sI]acX^Z@K+%ca1sJK]i4-"40)kD;'(0I!P)d;XuBap%+dr*ofAs.<b6Scf:KYmt#nehtYkEluW.'Vhk/LD9"`icejo+3UbFhlfWbthe]UHK%=R&%@^A)Hc[W[^]o$4GF8c#4opar'^+gC;pmoGaok$8YWI?W`O"\kH%^CA5pKYIQNoG+OR-Doho-@O:Vu#'a6W9TBB9O/'<52#1d`+4e%\26,+\UK!>cJoH)pLeNLh^n>)K?s2uQhNQ.\UJ]R+jWWMls.<qem'rTop\&]hEKJN3Zjc[<>ms^amW1nT3]a^3nKE;a%S;)UW"QB%f?\r?P:*4aiOOEMoXJ]K`5:\"XiJ>!jj`JiNTXA<HEJ>9\3-\c9s]/-4P.oO+sJ1_]Kt`Wq&>(^9]D<"qY;MW3Z<:TF8c#4ojcWa%':nIPB*;W^AesS+Ksb?d44fP5V#++UhsB&OcLpd1%KT_&U!NE'<t;+("K*_J*qaK:p$"6_$f2U?Y'm-%MhUUVf)%jK(X6E0g"Cl6%4e9%FP%32+"[.4=7'V0Q6\`78@($RK6"pC$$C!j]]A4un?q/dRr*a.n\!C>a:1]FmMcQOHJRM*%dbO,CELpKpXY47'NcV%%4u)if%:\R?OjZQluXR82%hTsO8%p.mcg-p>emQ&%r=M%^4A)H+rdB`c)?]2kn[A0?1q7CqE;>bl+q)m/BKu1slhTp==llWsn50mI#X53F<%kk\k7-3!I58Z[<qjh=JOB8MWBIcA($1h*lfZ=.8ZkN7,;0-(]A5;uX2NuHW,6K0u=rNk-:K"N2kWeRdbIQ"\3[!On_Pu$.kNCL?)%BYr''TO$Df_X9bZ7+aXcq)"&]cC-Kagg2$Q-VrUW^urp8bO(p:@S8_,J1-gQBl??2>(/11*sW18.o1;b5Vhk]nk6Fs6hOb9*GJ`S%XbLm",X+_;\bpNb#$+sPeip8QJXpTk]D7Z$S!1_mCTMcVUY"#Tl;I!BCf/l!QXa[9h1Oh@gAY-]Y]QC2fZBfe9omg^q.T"#O@;JT%b\R)kF%5I%:bk`&]E"tne=cW:6F+pQXA-Z7TfHQ$>Kb==*:6,1@7OXa!5dtlg$2<-kIR$%Y,[=Fp+9RQ8pa"rg[RT"rT`sL[$Q8*%8JH2L4'H(_U02b&=P,tcQ-+<-.V<HQX0TEc'8PK)#rNS>C%8n8IBiX]^);c->4o6.OjgEj^4-JVqY#81HJ*'\Klm9+%I3^W\0>Ak%4q/4g<pr,VF#BRVeQT8,@2V'm69:H=62q"B'mnlro`Y+-mFl[P"+DYmHBpjVH4kYL/8f@>C+h(JLViq0nY<U61hV>f+-IX=$Jee\%`[Z8/&pps'^m2gUXXgYjhb'"i5.9>8)Zk"hD/oU)\oG$-7OmgIc.D@?&u]apL5YLaV],92256\urji)Z9:ICSG9XhUV2i'P5Eas>%'!D-!3G-lkT"meOqBF^kj*Zj508k?_ip_>_o+Wh,aB)b4k5s?q?>Su!U4:F&)tsjeE`7Y`SX)egf=j'!mcFJhh3[S5;.Nlq!Uik;%U5W(i))E[.1"qqN!t(bN(9"T61>I6RTC:IJ=F5kVH-S]QZ-i"=ot>J`R?95jLtKV&*QRDOk9K5%n!;;.odeLR2p4&8s7F[Wj7UKq%Z_s\Hhm=T\Q:tU]ahh;l?=i5:-15S!n%bV]:uZ"XF?BMIqTc?]Vk0^5f><=+o%/'qo5$JYjei=o*"r(\EH=><i6gE1F74VK`OA4I%js/4@r1m'eiqO@pq8/D@Ta?1adQLt4nib$&IprAP."C'f2Uc#-OtSr4H&F$HI.>;FDs4AC:-JAgpEt1`+Vg-24hc4,ntF66kD&@g%K:JRhrTSt%6`9@D4S4_brp-JqX!dA,5Q;.Y:n>VP:JQ@XbhkPWfk6)sk?-0%Xdm;,hu2isolHH0^ONf";))GRm]DE)4dt4kotu1;%VqilT*raA^fKDF-IHa'\oB+`H:Z$MDiVW"lI<"NLp[>`#n!lCSB#^h=*ut.AdeQ\2\(1&>s67d(c@'lpbGXaL%r1RAT6K`GqWuMq%rB&>tSc:Db^3]M6j',$`Hft:Pie>#=*dtN^?T5*AK*BNcTl/VoIkIc,Ms^N>m&bn1hYAj5GQ%GI;cbUlI.K[M#Cl[cs5sgiiL^@9%s8;X:r54p)LCTn8kO0BQrk\7X#ESl^O!e&MZ7N\+8D<pIo+j!01+PS6aSjdm^8!g3Dnl26;*8lh:,p^sLMK:*=nKG<Ge;4K>,grH%rWX!VjY0D"(cb-,Flb$$$43]o$R]g5C[9fga"L_g5:H<Y';Wl0m//bXTBd]uQf$EmV")mY8i35sXl=[@[,[4dLS^$4C$0RtgsjIc%9lE+@pnTJ&Vb^2H%^uW@c:t=C42,nIlcT)PG`?BP@,&XQr:?IL;g\GjFs$L_TrQr+^&Q*i9<7A%#)?e0(<(-)hrV2b0Y/>k?2EpS%43-gfGk(L:O8jb;nF>0ZcS)\ks2+3\kL\:<F/OJ0l,)u:hWFY)AbtAd$f?I4^<<GJDdU3IhS4NRBJkJ[.!2NnSrR/@AJtA1(QC;=%jm&kP:t3cK*Mtr3L$l)<aPO6rfGj#"^!U0`j;B^MbYLH1S>YNoNn>P9hn-Br`3JoPSmdhG0#jInf,K2&5D6`?`p#:G8NjmkhL0Lq%WiSo@B\LM'6_fJ%mMg.YV24HhYF`?W]%jpl%PPEWnpQXKN;gf":::&>^NJh=CQ$Mmj4MN,:*?X[e*#JEIJrdW:E?N'r6;RAYHVKP%3?[H+5$hLX>i1X4M^eZ1k1CXJV]3fa"E4#=rHRu$(IrCZ_MNJLR\0QPkc\2J_r]EB'Tsb-`o[$4To'm":N*tD=t&4b?2l'/lMYK?%>,@2Gh4u+H4n=&'rN:O]rPlUTOk'bK&MrV8,KeiIEgsIC+ip3niT[8R'>>BUE9u*GRih;U=NN"4b]L\G-iQ3L6pZ$TRnbsCjdfW0%$/6gCSNpg\5'cip?#]F1dfjC0s86Qh\)b/6=>?\6C2t",P%?"Wl2n9ZpnL$&oTOC5r7o\Jik6"S5n8'm?sc.nB]gR`_3<[o2b+Z(%rpJ$,^=jh;*#UbQqXMoo#J](?8hV^s"W[@"!bCqQZ&#0)Zjt+d*;Y:D6;fE7EZGW0qScX.pnQ)A\!lsAmq]qgbLV5>f5<-KqBJ=\%!o,3^^nKXc`:5'&Zhp*PG$E#<B(thj^T!"u"oRm*k4nH_eDV2h@O:d,nImQQ`1daB?+IX_33i$-7`1ksq!_]@iqAe$Q:8Hn:p&5U%BX#OT5<(T^],11YJO;(L2ic3f7/Frk>Yj7er;QN2F#un4F%B&J<I/KB<pEJ`MT@+Fq5%-ZXKFTO`a6)`G$ZF:^EB=&1:FMd7"3$q%h:X2!1b2qE):S&EY!^3Pg`LCQr5(KGAF(+Er/UgM3a<![IW59'(\$L-oIE#or%^V396HV_s)K-)IsH#c:rMf6Wau4cM]MWfbkV!F%PaeP0s2)W1s3XhZFt5=+0,K/lMm76rc=bBu55UT3]VFZ(3qj7>`"`M$4M?5r$ZX.:Lq<lj";g'T!th-*5J`&`i]nb,HhB#0'aGq2%jjgsS<ucYorYua68pRe\]QtCRM?ECaTg-MM\Dfafp>Dup+g*d9iO/Xu>_jm?`7AG%_M*d[89]:Fd_iELT+@.ud1"bSeABf/J'rX_%9HX-/kI-I;?+g+7@Id^^?[%N9r;?C+eE\V>RA2hPk8s1g^AGG=bXZs/\c'OG5s2h'BDa;9dFK>\'T%A(QcDiCs831!OLnTc47);2%rn>J`)jsuK:&:meqVLKgXn1uUgHY,QXF1&(?!QYNCn:#:lW&Zdpg1#]l1;:U*QC,0T@cYXr)UOI<he(=o.0"=rTW)XJ*-@C]<X+t%5'`t$a6((jHDdud]$&\8_[$(V8&nB&O5IHlqqGn)Siuc1_*</4hqW_:jPW[;&'Eqmo@)Nf0"h-mPCmi<_W?!V]"S"2To68se-k0K%IDn/(3qj@OMFVU!frFu3*dd;rrP-edEiFN"Ua^,FjQ>h@U>O]#jSAbd:Hj)FmtZ6#[uMOiF^XCfHd5oDGj!JN-[5$.G5)$.?$NaV%r5%3EcaHSdm@=(Gr-Rmt-8PIZmbHWm">TH$gm>LFi_Ys!XFF*sp(T.QgV**)^&6?EIsghTm0hfI2bk<80mPJ0If.mF#ESo[YI7[W%4LW"QkhtuLmbBpLI(o7;_8B?G*llSGlt&3Umc3u(3:(V^[^6N-qMu#.TBnbVGjL'r0.sp;hSE!C4-GhZqX%p^hegQu(V=lU3P4nT%LNcLBIJ&5=iQDUAIQVbmQ0mBP&)R0Tr7CDn^Mr`*\&Y0'kD/BNqn;jC+>l+Akgu/m\$iXj>sET3o33"A*rk/VlN[rm\G\nkV4WA*%r9D*34)`q9Gi[`[dg&Z2r:heL^7qHZ<nqiHh.L@.9u]BKD_2$#\)2T&'ebnl^O&<`^YS55csD,ek!5Q)123ra3=_\XV<@U3;hkB`%I-Td%VpQmMr&2+D\,2(qNa)$<*=`VSp55>er.EO1:7j[e(:(.,\'OE3epk!>o(hV7\'F8'lqPKV^79Ubkn3gSb@cm(%H`uTp>npp%7^of9][iCKbBl;`WjquSKLP3oJ$V=`ep^qp;0H0SDEk1"^t#:k[muIB]X4="S`jf1=>N'>Y3p/U6gY!-T=1Aa9NY4uq`f;oo/[]B%k"F/TC&F"(\U?k'K(iq(gK2\4;tA<T+)T2&r,2&deD4>!^2N?6V2ofgQ[]\oOu0P%$?9LT<4P<[\FI\dVXb3:qY_^HRmr8!g:J`Y%T=agJWGg,_R,<C@m^$sF^S'7:n(p0Q9>Wg_Oo=V?\u+N"G^XAJpUe-!IDBa0[<9)q-/X,;]'XKJniO^<h1"C*>.foW-rX&QGJEcO%TQT.*U@c`Xq!6nlGLFkdkApOb&9%.6D]X;Q2V9,*E.3*4<*NFa5M_;hY2#^FSpm7oq;LRciVT*_?Itecb.3:/NrFFjSW!=#JO<^G%piJqd3;MMDVs^,UiQ(ffjg1jL2QH$,Jq*$e,@@QC$*PG]FO<7nB7KpWdd7-ldQ^K5s7G=MnTR`uqs9s$O%HgWq>'i5#>a-cFSO82%2pQhnlhuaR-Vg3n8_jb+iq`D``uf`;iEs@,A0Oj'&1,hY8\F\=/k)[!]T>dk`h\FLSbCYss(i)3j"j*$\FBFieW5MXd7/V>9@:j"%S$\=8WJg9$Iq`c\GNp@WI[`7d4*;.Zb28kOr(^Nc<rSH97TOYo?fL8XHJ._@6mT?\:FkUlBn(R&iiT-[R&;$EL^fr[Z,-D0rZVX\%Ta.21IbK^i\lM3YH?hSW3VPd+HY]n&-VrSZn\O]MN:<PQqoAqcnBgTm(UT"s\(6Ghh(_@.9@ki/0uIO)HhYNgni,pj4+.POmcpR<%HcJpRVQYCD=OGHE-FE_oj2oT[Nuf>]p/@0-&)SHl05["_ftieGIT,G?Tu<5S*Nf5Z[j"VhVRVoG55(_\'hu3'\.sc3h+PbiL3rs0%H0U,/`]`a\E6ED+`D`TH^9mFRQ.l`$CsXdol]3Xc21Q?@3[*jK:-a5V1-)7UYMV=E.<oL:i69<8*blK24gaR-'7\Y#p?o7oNF*a;%cCr2$6/47DY<I<d+RUR:!1W"c%DDeU&1HrW4oDT?eBNPT\M3[MLLK;E6_+_m%fQ)=+m64]6QHXV=t>3MR/E(Yd)A,*BtXcu^.^>=%aS]9.@#mQ\#Mo2C6Ike_Bi>$;%_ZZjfT?]ZE-D9Pgm43IDU0QBZNr"Q5!/V]<Z$'`O)6H-,p`U_LA$WJs4&<0*S.gmRQL&__hkpR%qje6f&cUp@=)8JXo'[,>>6'egr`BbncVM=0%uu8X0.>huS*r?eioqDKYO!=rQ_klho!<W0o'XgojLIq`EoX\tiPQ&\/nF>>hA\*`%OdBc^;uL%8l3nR-`?K2:D\eG$Pk4U6b<LYe&WpG$_rHrq+s7f^IpipjhE8FALSjC&':5Rkkl6(U\<?R@9@Uf#fNKlPHnt^o*M/du%3%#M],s9qrp5UT[]3C&NNZIq>ou)&=*'<l"FjNtEC+UL=59s3Gs35q#8Akm[jBigbr=eX;s4VEEQE:7E<Yqq;FFNB`XZH>lhE,4s%?MWfdh(.=\a4JTC8[I*TboCrrd8uX-T>U*L:Dm4Xh70:>iWg"+lf=Po>rd*)lMYSiOJoe\L7#J4cOOIBs5o`:hJrF0rQ?49XaO=L%?H.SO\JjAe:gm:HDa#<OY.f(Y8TL`mg/q\9ID>$dm#"ZqK5U/4J6q!,qMBasD)`&LYmD`EfRJ3pIKV3m%0>nr%0,LG2HJKHar[V]%d)IQig3(Gh'">t@_J1j2ESZoaaR=nEj*PWlioe@jlo&4tZQC9U&E'&RUt?O)5Bt+4R3mh'T9!^S;\\cGHg%o!V:[+"<%P2lHKQC2%#f4JnLW"mk,!a.31EA7n3HOmnGKkWCH[kpJUZ\fJJ%nMQEq3J7l&DC5;e+#C'eB*TG3:)O0"pkn&iZ)"i6\Zmq!m4Q,CC&p?%)>4%jfcEM5FhWCq4%+2IX1*+,.4&R+huS[I,gM?iM(>f/D,d;RG<MXM\?^]r:iBTP:q)Ym([4FJ+khEbV,L_PeJ9[r$2.$jf`doaeco4%QY*q&IE,^.6uKeuhu)uIHPcF[hEO=jONH#`mdAq]:qqWan0WU5F8"#\`J^&m*^+dAIQmf$h/eX+r91),MOfTjlYn1[9J7GHKXdg>%Hg9#PO760kl'(o<V/JT5na<rChqe9t4>nk^$%?#0IQ*gCC\OT:\'CMYpTLrFiP#!>]*FB=ITs[Nn)%g4q"aAsjI^Vqp$BN.r;$<)%bM'dO43jbH\W8CmE+eQFY>>1kF_0NBq"/Ep"\6lRat\*.]+QX/X97((3i8$s>>M/fTAJ5W\bF+o\(K(l*Su7F^:3L=a^h8r%7F6)%^Ki3;Zs!,V3'XPc+5mKMHEVf.3OqKPS^/KcjYkN]Tt):Wa-E23,\Lh,P)B3B-IE1J)brUZrUXDTE%(7T0`96=H7W&[IJ,Y4lBjkW%qRrFKIeQ%g_33<pFA"b/n<"YU#bEm>6biQedAA?a$U6a3c30[8iSj4F]BR\=2g4quI/M[.:VQkfabB1Zgk7WTb]N+5OlP3.599aa%iU6ZNpV/lcg#prsT:=^5q#/</2]c<grn7$-(N8./l,N/ir&u+!=2AEoqYs;43-F-j!e]B8I!E[9"V2S6e<!Jp5(!8G&&`C0n,@:p%iSNsOhgKO\D=N+Rp0Y9dDrnPfa,'aSD+/u%h]4\hH[Gdj+.bT@rp\3qXhBJp%Xk[)m`DdCp\(68Hh?h$PCIMAClmE*fmWMVrmp%L%msTNHMlhp;p\<."B3Y"jXj8&*ScA?2,D\eficCaLH[>.mqf`k&mp,m#n(N+)[SC]lWc8@L\ETJ`OnQ!VBP[T+#H"VEm=3af\$bSX%j7_(p#:=3Bh#;NrhsJHKgE6H1d/S!;XUhjXIQ_Q(_$ckT#c2E72<CsNcJ*6:@I(a\4HEirpm$bUJ+Q64I[Xnn^H4,dnUGb4Cm@#.%mGYt;&+8<-qVfQ`480;dFmb&Ji3n7GZe&X<:+>sg^V$2JZS-H:pP/if=LQ,;ApWT-R,bVrW*Yn#@qaDK5&\IYkH3PF#JP-6hVC?!%\'*gf7\;a:`/.h=J#@q6*<592%f83bkGN6)B#L>%:Drckkaa6+ZaRbNr6uXpSS%=XC4EaTr8dBDWVn4)O'I:W1VT+,a0"[:?Wq4,%3G_K4.9ioN]UkVBb^S9;@[J+#[scP+pY4onm@$AG:n"jdC+o3<nQ=L_<Uj9:elMAh'+LGSG4ht`$Z,L:pY2?JgH7r\:R(7'rmP&l%IiR.qq=N@(HOkU>ZYK6iITn0`rUK=C-];;Jh(m_;B`IPHJ[BRpaO^#;g(TqohU(qm2fQJ#%G]<X4M'AMpssa-CoRN_(C9<pl@_'4%cTQ[JE%B8V;6sE6Eh$a)W*E9koZ&f7&@OX1'P(7.&@I:Orr.*T%)3f]PK$G:G+7M%_D9a1>$PpHBT5]bd.$o!)G=mKB`C%\_VB=9%Xm&Pp[jU?1>itbCjP"[_F_kd8_>OJ&?;:;-\$+nm2/rMn:ED[2NM9-;;+54g_s4\J,4^7<?`)3$&[spd[^OD^OtkJkbhI,P9AKQ/%E4:S]Tf/:C/T6`Dgn&BoCtDkN<pR3F@UHgb0RG,YPhJ;aLC2871(&0E^t*7TRI]W2A1#u&o,+LYnlW?<lB!oDT0jR*:h*_Y#q=WS%[fNn=b&,]iQO$6h9bee]cB1/I-;j*9m'^3$RBRS/Lo5"[Gd%(.>1[eu9`_q9"D4dEYH0[3X2'BHqr]k]gD1Sm)la,g$R&3GgKOW"%$#_Vse[SV(VOq_T$V!9R]k:Vc$[A.6U!9B8?$U:NTN-ZaY6fN3Sj^E&d8$ieGh]HDCE">c'h^gXJWNgIGe1QT$C803NUc@.H`FMo%$D%ige%\HTR&4CJlk`B#W#=Cs!JjMEL>#&36>JH*eWU!==Zh\l"5:_/)i_g%7c2pUNppmCLpGXo&C[pJR%uOB-E(eN[t(8T2YC-U%lDVJOi4&7Y@;QBdnt3-j9gB=U"o4569nA00=g8]i9qqZfZnhBe[5.L)>1nC'+`hX@CO[p?D0K$o`'Fm,)n2LW"iQ\IbGg'X`#;3s%'9<=RAl=YhGrUU=2X^gXqUPVU6FNlP5hDI]_"G]+E's6ek^!K,eFbHH<.dD4+e,IaIu8?YjB,."DM"=C8;&b!BrQ62X<t*P^,<?Y%4#J6V<\P=>X(eQW](WZO=A?sKgFr6oV,nr_^MWN:FXc%kG)Yd6l[c4J^S)Tm!7.hB_4bd2Hl[Y)*tfbS(lDsD.Y+!kL&u//\S_+9%M2PT@mHLDZB31`=f=&;"DNRP]B@p*V6bj\eE'DKEgXf]:*Cq-h:TRBH-YR[jII4_&[;CrtH],#Wk;=eeCH]PmYP/@,35<rn=MGXM%Ju*7rB-?-uIC#VbJ,7=\#>Ick*Gb4omPXeiM<teb7^Z6em#LF;ZTEDkC??+2*[3nXYgJT&esU!:!C4`i^_!l4U-L8<5JcO`2HNZb%eJRdZK$@.]2Q*G;/lo`pR_C,flhRTRi\MN.XbW>W'._>t2?j1lOMb3#*?-^^du^r7$^COQ;]hkJfSE*B@eD:%jXjq/Z[%/*2Oq5^%drapdl\u.\hYdEAh'%TT+pHjTZ9ZmJrCOG,$BApk4@HVe$Bs2$Y'!RiaVs:LgPRUo[M9*W>Hq=pX_4rURY^(J[UKS8%7:P8D*qm.%[@7'W2i8'8"8!nN#EQPl#@VgYn"PPSkTlJhQ#>;TbJ4%J0sUD0anUC&)`#n0;H4^+l)AeDRH\rG2n<7N;TWaP[oK'FF<G+k@k>Pl%a8Xief0C1@ks3,PJ7*^pM7/A?&,J1QltU2aqDU@^kLXRJcS&k,s$>'/eHj:F0'+e'_CFq=!X!.m^t=i65[Z-=%M(+mdIj]W>*mhk%=!i60^_gB@2II4[NX[P!Xr\N9C0-H*r!eV19l3CJB>*t'f@pgX]a'(jpVH/s/&EeC-#$Uo(fNTUdS6\^EA==iO19:!MBa`g84g$3%M/go&/B1r[E>FJ7f&og9ZP[b]LKX!1cnLA4G<!t/MRJ=N/8gh:&nA2tNeCNsDXDCr,rf]-E.he/bdt3.^?tuZ;:7J?Z;f4uJ;(I9%%^7M7o,_:BfI!dX^gcrQ*ahjIYQn9h<lb:WWtY1,MpVhk^p;GqH[s)6IN2`uBS5V.qlB0D)@0bOYX`N2A8&oYX+D=r=fR':@ae>n%*jIH"@#rr^<KJF`93%&u2G;`0omDIJaK+15QJKYFL=Hb;]%X"YjD(RoI@4ulLL6ogn_@="Y13:_)D?SZB7*^J[t!5&[t!5&2eWb)%(l[VEV\tqI2JT[USqS305T[O->A]>mlt<h,Z(h^ZgOjBo299OhCL@$uYD#\DfT*3`X*qECTmMNJDG_!'>NjnfG,5YqC&eucEdn>%%HW.h5XuF%r'l/d6[bcD)CE;p@Fmf#sFDeIeQ=P.+#5MN)dCF%Hc5j"3NG/GT=')pe$_,9Z7HaA]kr1X^BV.-1N.1.AdP0HCk?b::%X.<q\[lpM5;UKW)he\"N+rj]9Ra+'#S_LX@aQVEnm6s[=)p!o^m@3ONd(/\jWm6U,>1'n4lhTEN@),[oP^%,3GfWbgc-!Am>+;$V%M0Gu<f,6-=Z;@@THMa07(cF5jldC*sH!N1"#I*([L2L](J'4kAR^QfCQ+UQ@Q*P9BPmXQ?)68Q[Fm-GG(&9kBG#k\nlC61g.b"Q1%!``&`;I!UF<I<7H'G_ioB;B]<6YT0e6:*ejnn#s2ji14ZA@H66G>Pd):q)!4Fk^,C)sd&7U"$-K%4'.r[E>rPGu`C$eFRVHcOR-_%Wt)=9X7iO.Zb4ef+`K/<XZA_,_T$12XD??hbrADX?X%9q);upWd&P^4qMM1Kc>^TheHHu$b-q[40/rcmiI81]D4C1A]=!!+`i!HL%!acm$rRDhpBNVC:EtQkAQnMB>!k3PplY+LJ#6\`[KA(F_W_-YtJXXsH9Q&@[<;4achq)6iLe(nc@F^EPm65#kSX7]<c2QaSgJ+6V%kc].?*da:b3qU[o/o'U):-t@ah6a/IIq%=o]o"C*9Sd)SKdP[-Kr0\[-RT[s3KV,EplIdT%<nC;M'5YI1hD&8A\9Th5]ZOtN+4sO%qBeq:N.XUU*hn'g[.,9u3e^#PA\G8H/_W1Mi0(aQV0$;M6JFPKWH,?l1A\"#WD?5DbIgYB4e-U3W`P#:bed^c)rK.]Suo%&a0U]$%"'BJ(d.QP9IVh4GH#t,bGTqRhlcB\[.oc/r<HL@P<:j^$FIth=n4#k@'OV8@'tr2L1"__M7bd:(<"[=kl8V8=qA>RO9$RA,S&Td3%2"5(&#OfB#s0UrIoFTCB5%8eEmA19"r9NehQuGK2,NtO1a,97N<=p!fC"Pn"Wm/_@D%n>SG"Fnl,66//h)*"B4%F3_,9Xg&23$fj%:7,2s</5"nXBs/d\S2ab[qQO`ZY@>_5h]U8BR'7;9j7X-1M0\5hAAcoTCb(efpgW;Q,VDq*!Nb&l;q>pC"/23,cFsa)YF1EdBM3c%3(/T4lNc/?@>JU]^iC-`R9QlF39m=61hB\=4!-\p\I)o]e+$AcogDsOA:12O-WQ_ZpoU?hG`&BTq=ksdLD:G^qm&QF$2G?@X4^iB%L=Af_II%C`5;&@``(rsA&L@n"POWKK.3foOC$;+MO&6H']ef51Oc%GKHu+R:;&,WNq(=9FE36Quh9c"qScsIb]l3]PgTl$SXnOKq%Qg%p@pG.0@LJLrtGuNQ!$;pNpB-)A^UB*)CC+JeiJ>U3&E=TZ($YV-EdM!5"de<k8rC?o72Yh-X8=Q'M-R+ic2^]fZl$=O_fm%Q^%_DM;cRn3@?d*S%;hpc>ipcH#NHG:a"8%@4=f`u?m382*>p(Lo]4sYcKZO[XoXZcQC(=670?EkiN]QT7I+lM+CT`k:j9NqRI9T/Tm%!Pcn9'`pSqCI,aS.hj[)^dh-0+&j\%!^8A5R)rtkqD[$Ke*GT-e*Ek3Bq?<>PtR^?CfG?si"lb5!PbUB7^Ej3I^'g$jQB*-D"Xj4%Qk@Q4nS#=NArP'PC'?beNnK%H><H(5D#.p\jdet[[.6uZ<iqm[h)ST>>aX>iB]YCM-X*pjo=KuG,UDhf<H':1cO4EgAq+g&>hI]^%lAj(,?]bq0NIr7EH=Q,sgKme;Gh3gu3,V^8:)r^0@qUf@Ki)m^/EC`OY('`JHrIe3Zb##"9JToI/[4p)D<T180-5J.*l^_$qKPr`%rsBZiGr6s9_O;)eN;m9CN6_4]]tL=C1>@:kr%E0\f?*eHWa]W=X/aeis$g#T.@%KEfGX]Y<Fj+!>;;+P`JjgP>J3j3.TpGeAq*EF%V';o`o?$rO+GifVje4.2QeX1I;osIB2+8jTB5]XrToms#.2%U[mTZG88k,Y2UtBG]bn\4q\eW3^QV=@-=i*YUl5X6EM1Qn0K6^MF%@YXAMd:.RoMPBdqgupZ(h(YXk)r68BGE0%;fnMEW_<\Sul`27%YGeYIP4%V9P,+*6W[-i3]loRGd9\n5g1Ute/o=S<:7&ESlWVR4%,egY5ME5**0%kcnQgPbhB1pu[.:p)+6V<b)g/+\@G?q.gVN!4(S7s4"lZN/E@;-!mGbG<rFa.6\SkL-lC(SdI_bpqAddZ/0"hCVc%b*cQo]Q9s*$Z]2+%;5MjjasR`T(fhFQ*%Ko9^8ct.[/S$S'7\:g*V+EQeH%a;B,#)1T@Kk8PJE^JC\K/T?m8ETlYau7/,WEQg(.i%Y8b%Yk^"V]`34:3VHWtU4H3FJ?Zp<H/,GgSDJ!_JY]iONF4dTC.>PTPqOPNA1k"Mj#G^O-%_L-\Q,@LjK1.s'k*gaEh3re<m2YgX%cQ)2Lh'EK<pOnN9pj\,W'OaEL#kKMNldc6OWfUMR#DM"(4L`ts7pe--4lIlDZ7o7NhIK;#9>6'2>o-@@n.]jnc)O<rrAr3,h'),`%D/3=X<hfl]kpV*re3pSP0eYBKN:5]/>Z[o2(L#WkWJQj.'[<>!K&Tf._YK)l!`P[+e;a-i^"O&%3R$Z"'l"_h#V,uaR@HF=d&Ko$%`OXO>/\!1Eq'LsfTrUKh,T#XG7LbZi$RH4@)G`)/DJ7P`ZcTh5<OZ#^f<e(XR[&[KnjWXtP0d1#[+JC4T5i-pira;,jQ2PcgD1F]%PHWXKLl.;\);W2_E>6%AJOb)?e`n15CqAuVcoQQCgJ^bIXQCiQ9:qWUP#pH&(3K%WNf+J>HG*Xmr55@m<AeI5CgA&LYZhaNku9NR%:M%9LJ)dUq1F8"o&4e9*>1EV:ILbs3<!+8Z9s[h/R\J%q(dYG"r0s_kol[;>osJj#*UhG=?5Kgd8Mq>$\.Ej-,#c7-RMl1'TXg*e%A;oMfo>%lH"cPd:N=0RqX07u03O*I0DI+J=.CKk19o"W?lNZL'$kRNR)[+>kRTVRoh&!9)k]mCk(U!f`h*<W"+\jD,"*<u>#(^lK%IdmaLR</OPo*TJ)b4:Q*0MQd_a"8g7aO3CgZ*gUFH8:K++kiDe^asBW_7UW5-C2!YD(L#)8s?S^Td_QsKn6=-8G2*[+Lt1bhRip\%T*r2iRof(nF*P^L/*OC_:Lt\(CUO+ZEO]HBP.kA-EcH2(=j?XE&54\(2u)eM:q'&'guJML)!MutRp>r]rjGP'#.iZ/TSo+ggpbjX%c>U>KqUb.QbHL!`.l<6PLN,,1K/YmcHZAN\l#5]j*744HJ*Zjg2!H:ac!6//_H`SIMecj.0&(KUfXM!<aSAZi/@JT]=1gl-Q)E.`%b-a4]$_.,R0.',UTYH2#/InAp5*eWa9%3>N()4Ft#>!>$S@o[C$hG@l!oC-"!RaZ,Cp1ft[AgsJ.uT6s/,H_Pi*%eP[PRIBY/$V*%@-?e[Y>pE@pVAfg2dcCc[<S*Qma:44I<rGjoCCi31NK7DbRU4VUdnZ4Pq2S-]X:9/&\>PoJMg;@8e8VD7n.rs.7o#$cd=Z+H<JsV%86BCa_.&LBgkD`2RCYZ%gsuX$RufD6jsJ@g5"PD"Ul8lh:$f<,#C<pP]>M$f(0c2'V&m=irRo>rmEq)Dj87.(`Fna@`Fd9"=c^##%=iIdDgP'OkZC#8?jPj1Y\91o,k0[c=VsTOOMSX=K(U!RK0@77s4^6>(>Z3&Lfc)[FUi#P`$&hRMc+4?*-Z@_/OWJ\r@!`Z)b>4C#%Ka=CfS$7DdWC]RO^L8i;DT+^dfDuq'J0VT6YX)mH)mt12?u6!`T,\#KA_3EYho,o60-!(@'A-Z/>6V<,`DOTG>9GR/-uEU%n#?q2%%lr*+E#d([LoGmE!XGAm6!T&M>4/T9D-R"Wkk,/b$h.L[NK&WNcuj:k0c-@V[jKhi$jQIV[.:A/An5Tt9l;b!7Wt#/Yh&)krM'fn%K!r1%lTCbk3AKJ*`(cWpmTL]g6sj.u`.%<\nU`9O:VPC#j5b-jd.kon$,E9Nb7"-skjQITB[^);I%pioD#"B5i3.Rg=KoY7rt*C)%;in<S<;X:"&`]-gF@fW#T'@E65EKlaYOm-LSrct61M>*^+?ot?%Z%2RAMd[BC7;gqIdS9XmtAHZ(b+cS!rnA1nMIET;l,#@^=q_3%/R<ko*uG_0O-EMYU@)^=9+(,E<1\@CLGtn"@(/#aqnN1.^Y99:5PaR#_hV$spE)PCXl@!"R28K))\/ukb6sh=c"YHKgMu@?5Zil)%B\sO!$=gKGjUm<<*?7lM"0p,.THgl/dZgKWTtUZ\@@Ep^@U%-H3DAaBDX49;H\Q`88Q`nEr]dL0:N\!8"H5o&_Rm5e@*SF_2NW3Y%=B#'!9/."E)n6fTXu'eXG)EZd1NL#?qp[m@W.1:loS`Gqf(RMu5)NZn+Kh[]Xa![HZ"+M+2k_/*W-lWTjThU3l92)ek6KSC4`\BL%3@s%R88h=[9S3Q#Q2u5;i43Xj$&l6grXU(PV[/VGVuIg?!L0''J^6>rpW6@I8tg33a,WOnp46VPMdN?YD+@B=Js&MY6Yt6c@Zpjn%'PD1C,/T&1F'SoeO@%En_@W!@,>o*<J\g'?R'@75d[$@_n7N)1>nErHjS=AnP>P"kTCEV1mUoI[!rB>'!s8n#Bk%k+[dWaWMC!+=%K`8+*?!glQbs&C7<q^ViM15>>2^@_uFiCi7_p*lt;/P!H39\ks4c=l^=.g;fh2,=C%RK?NVQtGf,=Z.&F2WdEIdn'k.o^_2=\lp&%DlEP><t"2jFa8*d^7Z_pfLj?sqSJ3T-c.d?;qjee@1Xka5W3*LRQ+PQJ(f3H6N"-Hq,kPMJ0ZVRJtM6W+U*WP#\h:FgIeB^!Ek".%Sj6D^RQ?IY!>&reY;7QOjk!&0#1druI]CIV1QH[P2oqBg"=`O-\V!#paKbS4#k_Rm@\>b#AG.21H]1\$D)$"g3)W1SOm'LPIIqpi%.!H#"1,Yh\Kqd/6D9JNK-n3/$-F=(MWrThF7WhL#(jZk3GZ;lJb2[=m+'QDl!e1rH:]kpb>XKe?WDg?21BN-W$ZW%VS?G&g$eD:S%/"2Qb40K*"SU%"X9P,D-<Z^0*=WV7tVoYXkVB"[1&=lKO7"e)bZUcnUK]FT,E?P-J.MZ0M?GmQrU(`7sMQMYEIKC_@Um_D,,n`O1%%ZFF%\g[6qOh.At=He;8j8tu/%7*GkBrlj/Ll$ojl[)nOgVf:eUh1X$;@#i2=+8Ic(78>R^L`-5%_/KUXUk9V,b,m2d!j2g:rKs'%N1X^Jp,?<.aU6L?Z0_s$cXmTJJgNI8G;in@HhKdbG;j!!h3*\?"hVNcV-3_$-7Xn[I5H;Y`U_Yn8DAkeGH6-G0[hq.FWE4hlYg[Z%9P\tg7Unrh9O$b3-)f\F\5.sGd01:>"UIE4!=2`S\]M%YZla*cls3?N)HNXL3Pj"/U!p<u&Td'CGf,*<!m`j@24)N_25nl#nu^+V%L9j]:aYOV,AtR@="b]7b!<H=+_R"q9C7%pUW(/QOA=nmVH2*oS;i%h].>_9`p'3811HD%b%J+Gq@]WsgTB.P3Wqhl!+f+E*TcIqK%JAFK[..C.HQHC[VTgX39PPQm1hCP[jehbDhbY_;Vc'2iQFRC[:L+GC5s(:MLgblr/9(1#E%ecm!8&DR*P%a*uiP%?oY=!8RYUD@8%eIili_cOBkF**>t0i!.M"Y*GZ\X<1OU7YEK,WcfZfNc1KAKMa0>Tan4;,e#Y;F)HY+QSjJpJeg7Z*6nElq2W_jJXl1;3e$sG@K<#%"\Z@N$(X&&/ipP2&XRa)ToGBb,3bCZ*=QIj7BNj0d0;idqAbYh6\_M,F[#YdA!NPu!5ALFT#jET8?j-YM]/lEd@q7AAnR;"L'.XK%UkZBkM_lQJP-#V01=GkJQ5<i3#S>r#;mm2oiGankb,n2:Uqd[b+6Oh?frPP]mU]d[9?*D54-II7k`DkbN3u\EopVaFA6E'O@`d%)%V5gbr+M'sKRB9f&KIN0/c(Qfnoi7Q.V._qEpD'5bUgCi1lj/M<>?BVN.:RU%8Z>Oa;`'snJ<c*U]o<q3]sQ%QSdM-tEb"7A7(c2F%"3LB`>ssiA3Zc9s9T8TY@$WY[qu=kNeIlFHFbL(V_f-`lK@`@,QSPTW!A4OZ-DnQ^q';M&PFN39(Con%h3cZUGoGhfn'(ppasF+.%Kn7,35RJ'-lSOu2+(ubVYMkFW'a5BKA,/:A?$M7U,2]l,.Z33="u\<+ffS%9ALDC\Vn$a?86*H2N]4645fb\trc&\E.I599&&pAR%[HDX$W>72>@7$otAZO6ZmoG'DFdEuH)^gk`-AcE6@7p)&LVQi<mf%rbpQc_fD_5s-f4$iNPa$OLod;'n"rUMWCC"dD8_:0qdO&ic%YG,dg<D8::nAOTfdn0&8dt2HlSG%qOZ=Mf0IG:Y+Zd3@?C^6I')Z;#X[O,Wn?)T%[/2jb)9aKsq1hdTj<5C;u0["PDNl2OGq^C/W%SU6`DoPMl_&9p`qd.rK'+d&Z?=A5EW%0h@q>&PP9%_ETV<iVSFAf.XT84:UDI2h0XG\dBe@Zo(>'SOB$!+%uYZK+'RB-A=Up<>__%[@a=K;(bSh,t<!Q@>5",p(1*GL]de<ksKe_dFOM86+[,QUXXUg1pdWuR&Pk`/=VuMnliA*)"ZBhW3^P9U.JiRa+3Y;e7MdI:2<3g%>;]I9S7HS="FSI6CL&>FSqh5TB/m??*\=SI><I:aS*>0YTI/&)!Gc&,X8p+<@T,4tM&Y:URh>"u2!R@JWM1!"&$bH+G<n\YB=3K9%IRMMo.T<R7-]DS'k)"`a$=IK;;6=7>(H%RkD=58LXC3VH75WLJE>L8^K^GZu0WIN=CFlKIUe.EhEe&4298l_I,nb#F-#,?YVX%/f%nHq.QKh=KHAT-fg5s.Nga)Dh#$WgfFM_&js0*I^4c&UqKO>00>coc6KO8Ol(*8:5jP)ucC+irU4,jIV]KSdqGfn^MMc'7"C2>]8;%R`2i+4fAJQdBs2V_gEtp8[SRs>86<gk8!l9@)EiKYHC74(@?$X`($4d6[FqjgJ!NfKUJ&@DK8F`/PDl9:YWlO<gP\f<5FgSlX7J>%.hUH%bD*'m4=A3D&`Pp34Wq(h@fFc`dL_k<A0M6/%uH80`Opm\%Z&j(bu-(qU`d(97"cKp8?Dt`5-b;kN6PYN5R"sNZ4;e[UAW(q%;Zfb@`01];EP7,*gQ4saK!CK&B-l%i"Xbds'hZ>WD]h6#_nR(_r&qWT`_#4Kmn6d[P&q&nFi"J?eR>cC[D%ZOV8s/ZGmnGCPV]QX%'S`H5$urhn2R?@s)K&DYkq,f2rZ5QO7>`U">`u.^&AWN`Z7M)e$m4V8:=Ca8h%[D>Y%HO+kQWGMSa&]*f]2_s,kdJP8ra2)#"Zm#%3]#82)s<`f1Y[(%)`*dQ*gRFtAO_;"VMs5IaVZi)'M]L%+XZjjE1P/20[U@9/>lXp73p-4r44?KWn&`3Zo)FsG&#(3mt&;44O_`?%KU'-#&Nu'G6a@a%`Te^0'B)8L6H*KUDp]HOA4k''ptN?5JSRm';BWX@.)Pr@neCFhX[As6:H=ea8TYR`03=_:47W!!3uSF%k.ntS%bNGt`>0#T**p+*3Gl]HgQ@8:PceP4Bhk&IsjnGLj?6UaTbn.:fTPeke$F.E6Ke@psB(>UW&=Vfum)LTg(lL'PR9;7jr`gnZn.mQ'%4P/8#NnL=/P]CO/;F[!j;)^r:7oeft4?6`ikRW-GRHCft:*n7`2<?D/h\-2i'[j-H@>K&OQ)=[-S*K<3"Gjb>4srf]el$punD%nZ%(Fm$LVbA*GfrNg)DcVT-]>%e)2`h(9\(,$?Pm9t+kLNNlF?8riGnm/D@M:Ct,d7*0j/kAE+Egd.h2fX>X+ni-:\FH[jlD81]7G%'%n5HJd(KEA"#as<iM%c+K4G8or8VbbA]\h'H<rG%EO;?EMr\@\nP$5%saXTLHbpX5`kK!oL\tPssHEC=Sg;REP_dbLYkp.`0#*Cu6%efPuZ!hm5R&3Z@J$sac`dCd;KUQ/,*K1Sqt5JY/M=Y&R`ViMt>hOp4<NH;QCZ<kUAH7^LslkfnB-6B\8/*Oo,8h&qT/.,>1LSP)p%PpeMD7&f-Bio2Nfn0uF&Wue_QVe0M!m_f:W]mt39-hY+V<2[1;dsGA#KYDu/6)-GV-_qrKl!YpsbZ30fS!XL&_i."PME%PD2kU_I%gQDUG*#g`!6Ir,dL^oqT;rXhsBI^'18)!sH##/&ofGtW$gI_=f=]iK#PP1-X_9[s>\<&5=n"V,@5fgkZ0ll8^-5X<8@8^7Za*biq%aHbS3U9*K,]*(nNY[fRCh^\"/QokGZ=@m9mc.iB21Tj-e1JVJ-M&rH-D#%=AAHCFERfs9<-HtIi,+m']M\U+nOObMJQGND#P$+8+%lr)N7pJMb!Y*-6rZtAP?*.=7^&W]KFq8)MW!TijKkQ7o"W*[us#n'D"YQ_4Ai_Kd?,::f`6&>e$"]?$H8Z2$(*CrKcSnIomii-XL%5tZ_T?=m1t1V4:ihMaEWA*fLpaQu>sB>jt><QUsr=pH-7Q2N7Z][u:l@=[S'!$_4td$^UC!h3`%M>72ua?udj:$dB=*PW?Kd`4__%>]Io/$m$eKZO<jR%Pg?p%l*C,!31\W2=/dGmk\Gp(OK(NZ%oKdqu[P[UTjKNheTiNh!1CQlLZ8-",T2QMRHI8AZ*H/Z<1IuP84EM%ga<4WjtZ.()%g9+,r&3jRD<s/@L2I'(*-9f=i@&7+rU#;+Be"mZcKEM?s=C+EM7)rUjSlc7G7;$,"%jPGi1TtI2umN;76IbTD@.a%Q/,X7=t%SIhl!ZGrG0m;/-5%,PLW>c*a,!/:ZDU*L5L<'`ENa8ka[q[AC<!adY$=0/fmWEFSk'qD,2%XQ==eTFjc1mOK2l3cf-s%%S*:=8?J>oXj,A]P:(NX-8A%A+fJ^#LT0rIc,[k%c-u.^#&oVI19l[U_8nn`Dl+ktI*fnO"&93;k(+:BK?E]fOp"U:qMAW_!hQ#d:%[Na+[=j_"UP4-d/Q#q=5E4A2h=+Aq!1XWgp-&LN'?&q/nRKDs48/12!&"`X9.i-J_^1/QLe:^t@9uKT%Pq'!&a_P#Lic8pO!^DsN%o!RC8#L^.jjMU0TC(ZGeNhB6a54Y<W=(rD+')&dO.ha=fr"m`;AB7jX+m2-5ZG\rq8HQtH9V$n)(O6F%hT)+/Jpi/V)]5[I4YA3Z%X?j9H+PI`!8YiYLcFXF9=t7hF92(#,`heW=3QFG;,eGS91_tq#QpOYV@'n"]ctQlD'cmcl/3+2mE21"t:NpX(fR(ri!BSk!U<;nU%=X:IM_W)ha.1&ugF2?i5&s0Q;M:Usi.dqXAWV;,C.L?c[eCK<IieSro_QmN+e4\Gc`T6_OScJ)D+__NX[0U7&F-%Jde\R;S%WYiD%Osdt=*(WhYhd`i$qOpNs2^K3$aU(b!'P0V2"CMUWok5$dG2H3/!>-ne+<\*m(6LePEraU;D:B^>1r8=g"jtk<$`p(6,c3&C/f-.T%krq]PAOEA)QVG+T#BJL+?FUna_03*oY`;^XUID#_U2`G+U.RNcPit9=.52!Yb!Xp(,`^gbb6-jVj+ml5o,,6Qe:C_I:s@&aklK87%o&+Ro@VnETYmq15N(V(kURObW4Vr"e\lNtCK#('=:<L=;p`2p"=BAqDT`9V*M9+&=5)u@g]9u_OnX5_=DP5r$jbt12G!oh^.nF7r%b2Unf1:>%A>H_$AEU!]&2)^?kph!&@&',gFp\As5LE=I9ld1GMN&N\)4VV:mU6,H1\tKMir(n47?<a.8?5G4T%I"W8ZmUlKh@/pI%3'$BTg/$I!M;MUT`/-&_&>eHL43e@SZ#ZQ>&b1l(Ga<k*,m(<89R/U!KbTN$FsdeT;1Xf^QAsS5#joAH\")P;$HdKl2"t,3/V@0Q%$Ue+E"qt#o's9&1Z(ce/h-u'RNN-'&M@sKTRYTFle"VE?eiIKlMc!Jl#/+.b`[eF["\,k46J*M0ZtLSEQXcj\'-t:>YbGhG64dK6%S_iRq)Q[Tn54O&`)]D8:otkUhEk&4b+bUR>N:\"E(dU05>io_t3@%HN00D@&/;Jku$843.4YaU-?\(P+O<4cO7$B+'UhDuL7;YTC%g_ca*;,A3&q`!)T.!@r5'"kN080anT;sd(C1%Q9R:5YoG+\L]97Is&Mff6g*2PV_&kk-Z;=n6Nk[HdQSQ<dnb<d&KmWK:]]gUj[4%b6"0P,=9U:!8JU;Q>Kf<lSQ(Yb5rniJQK92&G_]tAUuOVA[#`cf!,Or@E\6+7q^J[5f<ZdEBoRX]k89'"O\Wr6lEPGd"CY9/_cLD%5-sXA/ITLD6^G]eX6Nt,ZE1l'1Y0`th^_P#Z?XU`3.3FLkB]!5FUSRV%Tj#%S)g_m*:E,Y#4@/M+NjgZF0>3c:TD02Xt5*+)9U0g%"Vc@r%feUMB^it<O)FJlS0f"\rZcqBM"@J6kQZ3YFLEa)2U:<i!F(k#5Y2d1Q:3%>ASTl'^t8t9Cg$ZG22]Y/p:4=qe_.7D-;iA[%AKh_cR5[8aFaukWZ%OW#_kFLDPE@S1Ti43Y5*WK!Cft/A`HOb>KL(G$@*9I]ZXjpiZ"8JCdo)^f7%g:#:CF`b<>(`2S#M65>7P^F%,aE\o;I`-XO==Z/:otX@V,J/TpQJ,,]Vgn:@dgUT"BchQ3:D\V9<3_84+o5%YYL/]k#c=O(d)"t@N\)TPa!OYH4sCsj`Fb*b>RGs%DCI7QBrNN+&7N*cr.6OoE_u&\.JOmJ=Tk^A^c]R>>o!N>F`V*$UEL8a(:ri6nM7]be/+Ki/+MKbPXI4hZG;u.BSgYgodks%7!)QS%'[ej\=^!5**2"Id/5:aJ7NTrgJbYBDFBOcd)Z3X6bB!?7#t^<@KNUM&Z97BJP!kY5_'H]gl*</,bRs)]=k[PP2fr3/3=/u7I1$uu%S-Og3b_@0lmB%j`GUVVTlR*K3#jHDMS$?sTEP/mq,DF!W\&@j8d=,q,`I54%H_\'r?"oDnr;g>kig\%/d$'QT.18;"(UpsED*=[+%5aU?*7+cU&!\:2$dstCPjlqYTJPb!\='LRd6kd'UM%>en9V:>s,;C'elQc]d!re1Z/Oq`J]J1<`]]$Zg=a]?_YVYugnX22dAkj=W%AHGZdcbZ.g<)GntB0*'T[X)&odkRG>hD2n\@'gT.LB9:!\0,I;TT1f/RNdE0.F9@Q>U-bl^d0@J(MZ[a2K"Q?gbEYMgMDcNO4\6$%@h%]_BAt,?i8m'qP&1hJI8CQe]B(Ja)$KBM!VBfi4.Vp`Yfsu(@=KAY[\V/WZ4NKL<2IZ<"JLsY?'I`D-2A_;:,6'N(Pqc+-I;WK%M4k_9(8s5!Xe89CMRtY0``*LpV@fd_ES3q2a%[-e2pNg*Sq7+/?A7`3/14;?6$!StWBmQ0+Y&X7fjf<t=dsLrCCV3S<K?0;5<gh=%q77\f?&$He't>SZ:G!nJhE]*lin\6/![e&,P(Tbm>W/=ErQj]33f,(aSdMth2qW_6S4p5\o:d1_9&[@PS8H4[Z!q5t<^EZ0U"e%U%5P.*%/*?JNTt;Xli-A=Vd)!F#H`2r9mM"RhR\u<`UKS-SC0l>re$*Fg+Yukkl.(o#Z&lU7&emDuI+LDn.JIT0N<o<pplW+EdspJW%=oA6*7f(&Ij`j.RJ.HJl>ZmRC^V?kVfe`Qk1&_E"8O98Pl#,-.Bk-GUR`/)"7d/^6%8a7.q0oO4H>8";h[hfU/c58_m;ZQ8Nf[Xq%98j_DHcpU>]>(%%o.B$MSP!)X9q7/<6(0[8TbZMJC?F\s^l2=@hqa)ckCQhfES/6+du1Z3g5BaS[k4X!5g5bh>76M6*me:j?4<SZ%f<Hkkc&qnndoJ2<!6JV?:Af5.*j53;L*QTi5^q:Z8)iEaC6WrB?Hcp%nZ2a-g+V9/Ob;Q/]8+>;Z?NNo0>].d7ZKJ&E-\X5Z.QUB%,a3P_T@[V3W,llblJ+bclJQ7:?8Sf&h,.[SBBn8>gW6;ESU43YNPi;>#IHSen0Vpe_msD7G4#CYE(H7#+>95Sm89J?_HRZKfJ!GJ%Q>N3EMd@jmgr$OVPNA/5U%lZImU=&Q**(m&KBAt"?q?c==;GttK;;)l?"-TOOYj4(/%X`]CN!fJoe@StAC\/E$;AU?-9jml_sC7X%*nlcFC#Z6/m@Cp^GX/qT,mAnsp<\$+I-lMV+jT'$_\eKdC4(@b;#Cm:p;U47CN"(.=#MZBWCn6&^+rtiVlfqT;ma=0!_h4]1`7l`%%3+hqna6V*">K\a)mL")0J2Qe%GOL]k^fq:Hgh-KR=kW:deNgj2H8RY!S/2.2fqUGd*Vd[#0\t^DWm1lda5tFVX^OKVX[29Zj8\^%`AFWXWB;A"\nbjs:CU_gAp1:m,#bP(VF7gHT`3D^Y-"Pg@r!q\XTFj5l#&$fDkTPYd9+'>V0NNjd#9RGe]@<X(,+lWV._iC]XVA,%b2d,l[j+B*[2<,\<)RnWil1(i=dm"%<)4u/2D=/APuJB4oCh;a]<HfJ.t1[1H&KVPLWs$MP=e/XhD0rIheh5%ALe_:+=@II#3!Lo%F<&Xi<SEUCe9ZksgQ:VFp+'/sZ<>^ec/+s\BUR-%XS`[Z]IZ)#L=r'&liu;47D<&7o"sb4/NU&TlKKb.NG-tX(=COq=LW[!*XBR8%o$.+MnZ[DIO<02=Rr,g=k:osC=3HqV5r</]I&X$TObrV+mM',dR_J"XCb9"Q99=q]VX:-k/70=UBJ>SO0,?*C^-sZ\\!Crr.5;1[%nh!W!5du-m-==60_;<ZQZ!+j^lNUmdjDJKDB+CGfAqSfO#aT\f@bC3ee=u&nlUX`Wd#sU"8tKeR>4j^3Q';lUW(Tc&"#S?4<]TKS%W&=%"'dSF:'q)D>1Y'plpXC$\HP@pZq_<oBPAnLBmEIH,D_YlNUp#p8;3L!;6.DArOjMs,F?XP@aUT%eHYr7QFGQYWC>MDlfIHj@%]uNPRS3q!-$cH&2'lk>Tf=YZ@Nh9p%BI.l[c[_>*E?LuoWVoYVAfC"/6\E%?,&BK.,]U\=5;XX,$A`+UPel5i`=;-='h_O`7P&`r%n.6674li.i-:I*)+>k;nU*`8_^*5HY:cN)$:_TSEfh#sG@%gU+3L^Rn?C$O)CdO@]MsMdD*S50q'KldZ/-l?_!<F=gH3u9DkOBY3%JcOlN;j\k#b;$VH61d2U$Nd*$r]R\4^u^Q%dXsI23%2@Q6%Fk8orn\uA"-`#C'+D\:MG)JHq:*=+ft<n_#W>sT?@QegToHCONf6u%!24DQOUk*%#\o?<5\,#4.g^g4+c<Q;N"&XI*`PuU!Z`7+\HCRt1^]/2BfoAOg(8ZheV%$Fn^T2EWLmmt"PU-D+@@g?!gk*]>Y-K`%;bC.o#+NU=&/+i%To:a.f-Mp`\Ltc,Xa<p30!Sfg9u>)8Ca1@TE+M$?3Gj9&4El:m]?>"8\0K<oXtP3o\gu=VlX%5-7\5f$ChWCJ%AC]`W?Q0^dFEMn+8fF9>3@k!1nN"1CCkX-!0O'6.m\iIZ.6'iSbZSeFWM^^"=;Lk-OMI:lB,a,d:-+E)CX4mol1sUL-/6M:k=XIR%aOs%E09d6_L+'Bs)X:m8VedTA'96-HP&4`M&h2&$B,d6qP)?r?ZAhPNQj2E<.GY9>Etlt7@,Ib((!'u7c"Y@u,@1*OV-Ys*:6ORW%M<0R0#H(]hSU,=HU`7-e;s^c.4l$B]CLdp3PB8%5;ie#DF<fun?I3!(2o6B^Z"_$*HZV1gATDgq#K+JjPc<gb_-#!i"UPKH+Tm,K%HVGtNd<b(,?Da<4`+#6T":2JXP'eL<#-#eqO3@[#O:r<qau=pdW.bi+2hH%1nqcEI5prtPj<WUg8O=1UM=Xa,n]\SIjr9`".HMi6%a>@V&)lMpZ-da:UYnEhahGT4f\]?#sng24%IMJVMd/"$$nr;"m=@FQnj;XNZoHu=Rf/YiOliirCnr9<GaLoB3PC+SgXQ%G[=(FYI%@3D(YKVU-@A<p.$^nT%tc8X1l'Pd^1)d+-UQ*Z-B@IIPuP(6Ub6R&(RR&>p#a`b@$U$EQ1k!_U;IbJKPQ$p?]7""l2N+2<di`/QJ%/$UU;'(G`?6IQV;b4.q[1@SnH_'T8&\#VLS.B%*D?gASS]4YM^i,*8)R/!,$Qd7ik,6=tL-N>^mEZOCgR;7]]:7AVX2B)qAaM5n+%#fKL0mrGQm\d1q!n++-.3o'>qlBp;t]8=)cP>/gHZ(?D'Q:Y*W9tqVr]jR7%qHZ)s2"gLQ9h$qbInd[.PC4A6G;42.-F]l0'e[':%l$*#&33r!":58((p>)TQ,s2.%L?e[6+#5k=s$Cm'Y$Id+/YKQMQ4?b,W9+(:r@Vrl1p9FG>sA-QL9DlWFh[?ggXGW^_.bk>7f$E9%Oc.nrl$!6+$AEG4qH[G+@>XiPIQ(/n5g4]%^WYYo_mZ"`G<+rhq0.r5V2XYGKN]]9GPpNXf,j%dAXCOd$kikNIf&O@Yb'!<C[_C!%hfY--1=m[J'@S#BmP!>)be>S4!Th5?_&HtOkOoQfDU/2n:FB_R3fg.^/@78]F!W5T###]Y]7(6/XTCCdY,!)"ELEA"a'=a09nf*a%p-;]$?SPYp>u[i-**N)?H/CCmT@L,TC2%J3(R+P8T@n`)-OBr^*U8\4'Ps%Ds.V]$J&AlK#mEWj&H,/TjHLjSO"e2;4/uf=-%Y+H%X$>tj:0G?$Z/,k`!kf7Jl=<B,S"Y*m8K9`m.eV/\VYpG5$a<sHIbJiFQ>99W2/9?%.m6,JG]sgeHGV/\U7SU30*H6)4e1S0)E6MS%(34<)02./.''[m7+EoAoN[_.8h=LDSQGaEE[u)Lp(dhi71(mq0Tlh55`JrcThQ*1C`2Rj[S?BQ;,,a?N:n3p-*]-Lu<u\^BW:?ZV%GdkKb,M\0AT;J;Q7-@Xi1B_]=_G-V&0`.BkcZYJNZVC1kknLD;8X:6P;3i))$]5<1nQjEq'-5sI6]QB4()*6BPB&,Qa<YAdW+U,0%?iuMihSaMU$9"%:)C`E*5K/D=6^=/P5ihES!2j)iG2^?Z!BY>_2&t<7R#@7jGG1g2cn<qB[bJqs\*_R5,dDtOVYFter"Pb2C^B4f%L!D-(B$^YjS2a(sK4Y=MAkFmII8NE@PsdFlYq15B-^m?)(,6(Td7cAdQmS8q&PB\qE2&aTLfG)4X:9;2&YlE_Cs[-qR=S@01kW@C%\T!<;bsWjG;ktXP_`?*^C.C9:,3b:_eB#_Kb71(iU7$OX:Q0:f)%?>:.\h)AVmR\5On6eMWn\E2R:b.i14QJXLd<Dp;%Nh)FJkse%fWgrm?CCf\&h>gK#^)NfN(fCLL.$][!6m>6j:EcEU-_&gneA!jM;i!?#p_M`E6Bl1og$`Z:5;=sMD=cPeI8VTL)ETl&4n`H;_PEO%0T"<O1$2FkCSSV<+Ju,6TTPCVP(UfBX.5=a8V26>di;5KKWfF].1%5Zh2#CU.1'LL6de4J-XkL9>#%4.+YH\HQ2?jVLIap`nQqHU%KFM@M1D%Z#(lRGX"%HE",;P*P8Q"*D,)P\$iV3+$pNR&.BAjIm8T^O@lm=dX7.k)A!f9<G-d!`+A/%=C2<rsH#`0fh"4P3q<obFL%[@9%_@8na:kFRnL,T>AS&EDag76]1QopWNZ#1.1(*NG9bOG\m(Qr6C?qNtb#:br`Y9'hh6,U4K&F.CH\3nTA!l'`n)$(61ZbF_`?%S%23[5'i6<V#+K>[Do1YL_ZdJ2'jND&XdndjA^agDD_oWa%_O`H&0Zs/uOMId4$&%,TS$f2bBQeS3:d//ilQoW3`/,OcHYUdmuV]%C!*mg-6A(:dLkJs<EsgT:05h-BN6QD>?heVK@:FPU?<MdjSOd&Zh(_F:>uVb*5$\,a1,]AiH0b2]k&i)Unf4<mnFpmADfn_)hS;M%DlZf7EtQD5kaEb5+VV)M3'TN`8t(%Ccr>\VD9[B&.[fpj*n>$T(Z>@QoGW[0&Q1o_AXmfRibQJ+J<hCi#Z7KB1Q$5cU>Alc9?osC%Ze>r#k9<;!kS830M\(<$*3W-(O!7_d::(tc77`BV,'s@ZhaMDaJ6C%L?g4"]GH>8$F^:91W[.S>"X=W+pEIjNLdb9M/"1,#7F1jb%j<C*>P;F2Z\Hr)\SjtEMe`D7JS[Mbk6M3X=5"GE(BH<bIP46Ic\lMX28Z[5p"\GXVPi/`knPaH`87^RJ?Il!@/Q-m5!fIZ@LJ&7+%Ph^7M]i-U>1t?3t'Q7.PH!G8@q^s2`lE*ET9<KYR/TKpEjkC0)NOQ3gPF4V!HT08W2M.MlP`oJ&Ae[BUdET"61SbR*AM.O/;M:62%7aa*[;_HD%nUTkV7$iVu?0*>*+$c?rM^juPc"hNUYTk6h@#Nh)f:1s3ZUd$,lBKsX<DbP#k6J;B#3e,+q#HVl2`&d8dd",,;OHXR%5l/iMX>8*l8d_m"6qKtmgkB_Q):^2k7Q_d</ZRb6/SUUG9SD@gaG^_WL\loEEME8*?NsZsL#t`c?Gm.D4<GK,.#U=Sc=?2TiA('u%p`/i=Ud.I.`:ID?8[Ef*PL^oSk>\fhe-V5J>,C42Cou$rY-]Qf>A-MkYZPJFb`H<carrIU-f2+qMq8fRj"tirN^;gV^6;N5GTHkZ%QhZ%,6TC%`Cfi(0S7c[.2<;?nM`PQCHITPO7Z7bq=4/?g*(S2!AVACYd_5/KHb<&!AjB)<O9Mt-HK,^t5p_SLGpkMCQ^+)aM3<A6%ILH*;c*g)RS>=`:,Ia-%dEBXPFt_oZ4PXb`p7K=sb\"DTe[]<X6cMn\/MYD:.Z/qogG(<E8Ue5#T>i3Q7HnUjbJI&O:kW@Jb8WQ[%]ktbH@G>Q2i)\g&82jMiP9o%X5A`>]EhdeFd`'dFEJ0>J]8B2MEa!)Nb;LUUlb-f]`+-.fMV_9@T$s"Y:,&eU-HUAp<.$r&(AW%Z%f;np.L%dN4J>kc<oOJ@L0]PqK2;!QkJ)Y]s'/k5sVFB=]BNo3Bi]6O[ET=)&e[4j8kJ`6H,"72dC`VQfOsHu/q.[IAkWt^B`a5\5%#V'CFGZc6orRHi!+q[GX,%Um*.<Di6VDph4Gn.c$XT;$d@N[`L#DU$)$5um;#UQaAH;pHA8s*b?%24auf'_/A&>_fP7bP$fUdRd\%,#]JW6j6[c)F6tpPLgW\;A.l2@b3%6.<-u14W$=QBudVCD!=[a$>GaQ@N;5?F6?KS)H"Z*'2\EO,r(4gF9<MF(koi8)$_U;V+cu6%7^!^\Lf.b/FZ:N[LEV^fN,"FeJl.4j_Egf:Eh4jS!@6$k/q$Q%/<(1_MQ]Dn.AMg&.1-g#lUleoPSZeg/rELUgWRSbWAU:11%3A/%WI`j(bqVi59.[.G2(I"A'\qq-9'Y9UWs$HkBaeJ-Z8"ts&0MAbMGa)plnQYj0jiT?CNn&7(DQG@_(.ZR:m>Qie60!>+=H"9eHLY#%C0A(2m".Qq50=,X>u1tB)UiXk<B/:7-l.^FZitm7)BL:\mjRA5nN^*cgJoru5ZJes[]ZGF,TL54:^nY7E'33D6\,,9m-Og@08b6R%rD+0m@X(A!kD8?0HAO[^kGm.K)%VrQP3j;=,0n>^!@c&\RT\[%!f`H8M0'7BEO`tI@t0P.e;>?83h`JtiMj'qWp1T0`X,)U4N)lr%:8k2E*-EVCR`B%WL)13`a#[;^KrU@r,o\KOHF"Olie=*jf3gI]TkIP=ZXa;>eOZn668bhm(J13UEbTUh6U@5o"s1\n"X7RnDcKRs%kU$`fO<:Ju"lk@Vf^LoOUqFbP-=fU=6WM:&SW+_k`o0]k@huJ5iYZ,h'O'^2Y@8#@%3mhc.g?WuEa$<Y&FRK$'p7<Kk[HRUADBur%G@J]1.oVFFg@E,n"Zc<pl%oJL1.plb'*['5@S=!SW_0jPl\_^,)LC6YXsh@&#M6p02#nl>#%L^K'pOBX8?OA8h(CifFM:+S(42cP%mkV/%c(6>jNoO]g'88(.8_b'AM*a-)nVOU/61V%Y+n7rXXEs2gWd;3EG;3Oie0hAY-k*>_Y4>QQ]i4l+2+g>Tj+j@fVt(W#TceAA%ghc>4Wa5'3I]0Nc%mSRtRVrqX\nqkNR[#D'Bl*HT-\W\RXq2]+Yql)"rS88t4Vr*D1B\-9h^n%3h141Io]C88MJ8bY$5qsp,rHY[%*4%3N>Fa&;FL</mpQM0Z>%2joS@mFj:&K&RMQ'=BkpBn5ggAWDUb_R_\pd'%;.'td;0h&,`N&%#]^N70Qbdjf[ADZD#Fl1K9lmL\%>,gI%V_q^&jpZ'.,.?Q]K%#1n%"QN2V%qGO^m&q8#bA:uehrPl(^]LHfW<Rs@U4>T"'&K94JcjdK46=3CLB0e&N*=BQ3Pll=P#et%^%5W;H`-$qQ$!P3WUtgc%:E4G%^W;eMc10ePZcTBde$n$]J4l(?:VOVj95>SAEOL8\bAm%f4[X_9nd^!bc<+C02t:0X-iF)@L6>Y%=#bET2*.'`a.rj"KoPNG=kPYG%ffsV5?QMoQqgTh:AngZJCKEuZ08+T>T2sC@9kN?51U#c8-#2D(MHb854hu^DCF,d&QL#LAED12%D]-DLp"sT\egpp0EUZi'c_?g5hjT:sDp!1(PClmi9GACA(JK)09$/hu(=H,<Vd`VklN.`\N<ZoJ#[MI#-)W3N#MU0a)rAD!,+\A%%X0A_*S!YMQg"*qeV0ciZ;r:Jn"_CoE</G`BChjq:8p@CRlS4^J[U('GQ,>\n,MDb7bL>kE7JSolT'UG'5,RN8I[,m0:HD_jYkZts%[!C*4dgN7XOZ`MQjgV90"%h$(mn-@Bbt^$dW?245:e*M"RWO7n9NjTe2sZ(!ILNT1Elg#;JZuA$56`E;Mb5ef]OeGAT)(/WLn<>d%R//P9UaZg5#&5DRPj?Ddj^d%@2[6[m7`2V<_Bl6!@kjX),FnERLuH<T@!l]"`TNo1iZR(APU#4b;Ej6iSJX0fBeiZR?Dlc#TWrRE%@9R/gq*_T90keL<)$2t.2c"`l;7m_kOk&.,%scTO[86dN09DV"7W.=@hE7cLCSA;i6+*R>30!g`TtP`7gOFttK:A&6eXDrnB1')(%IUQ]0G@OJ<O[i.%(t?An%pI>R4W9!R_<I]_Ke0TJ5.0!t;r&;VK>'D>M^ASqiDX.+.rh/%"#f+Z1>k;S?tEQILJO&8C.d$0:P!Uh%S`C"A8/^*s$mrLc.qdqmn0re29<c&V#=PCV6^R.i78enUr,ac6";iTX?kb8tA-_1R2gb<6J1SBJ,R;hPC`5L6/7Oj25m*lI`/W9a%Vj*3XVJ>h&g--.L$(h:X,fr2s8u^*V'rho0#7N)&8b3#g[J*A\Jm;fY!E;gf([G*4TON3)9D:mUPnLB&DZZkjBZNFO"<,4SFq^rl%MEoKJ"#YPMT9DgX/o./e2C(L0WZ=NLi*t1=*8s?SJmb=NgeHefPQZP719lo0.J7qME2Fld`2H3,W2KV.LS#Ll!Y\oj@@kWYW715b%a\%e/XX=BBBM.PB#m(J^l-\_ZqSX?K!R!H8f^f2gXD41eQ"#_PdRRrtcdKmL(Q,QAeXZ<\FJl,<P1#!<8.ZUajm./k+(Xdcl2=?=%F$UF#NCrkGAZp>KN"?k#;XFXb=DFq#^8>_aT!L)m`PrPaUh\)XJ<B\h)`QcSg]]=bVncA5a$F++n:WW*6]\:[Om?OI8ufQcG,lJ^%kJ;$Z=2fe<7ZK>j987A-O8t\\TkI%.@#sVR]eD&e8Q8(P(2e0Y[\!'gGT[+cS3;sjN8kck&-+MV\IFu(>LC^d)Q*rDQDpR#nDWm^%/(rV?OtI%9@5sSsY6kYn<>o8P`8NeKjA-pmYEs!8Yt);^9G=)uJKE/Lg%XQl\t;AjkMQ28SapS<JT7C?,Dq#E"+r9P20ZNRlji/=%@S?2M@[j2?eDE6?TNlLpdC^-*$-%)LLY+H-C/G'^ZDYskNMTL;^j,A<;pm?9EM27<^BL@rZoa#]K[9A]a=@'t"4f7[c@\R<1G,be%WQbj>`>i>s_>Bg*B5>ikZsUn,+h.h7Bcn]LkQYjVGYJW*@6MPEhVEhoB8^J$GIH.)g,,""F0G57%ku,X,>fO*Eu%pmkB:_KB6kIn%+(1:eG_dahk!#\&kQ=5dBc?UE``@g`I=V)T90@u'l$sU=N*@Xoj+HA3qASu,+?R:?FF^TL5GC?WS?<_"'Kl%SG[toZ5>8)Ip95(3%.7Z`f7f(EcHNhRsnp*8:$hc"ORrs+94>_33%%!`_lk/pl`iG"cI0`ZY&N`B3+qA[H8^rM'g?LC7qUccfH"!hjCC25Eq,"2gO9mA%%_JO?%jtV!DPZc.O6752^1J0ADl:N@/8^)rN>i4T/N<U[JShUa]0Jm8\3_jTJSshP6QGe/ARO7Pa9?`1PE#/E[`I(4(V'+(.hWM]\%q&$2gGA(k.M<Go&8RG?5LV=SDe\kTd:b*VF]Zp:3:)u@V$WH18C0t%?d+Q6p!u5QV"Xg:;a&=srkY9-RH?e"+\X40MM(3,8bd4`6%(?&;XCh!1lbL]*F(h?Wifpb9:han9KV1ig(1(bUk(UAQKi^:d<<ZrcB)h8N.K5kaZ#hb%954l64Ce9KY!,M;&W`Pe,-99g+ie,8@%6-p56!Tka9h,)#p89A<Yn7k;<W^f`Bie&uD?*J*$5s5Djbb;;j]jKTR=L3*`Q)E.1+u(/PPq7j&`-`uTYJ*I\+'OdS6Tld4>gSG3%!0<5fqLWWE"1^CqmoS-MP.3j'*nE(&,(naA[dqn]d??>(`cN$)2:0$`X]EWh`Bq&b$[`/qC2u_T0!cNo#$nE#k1$U'M3ue5.ZVu/%,H%bIg*0f2&\W'$WScSHB>3ks2F1NniiHM9Hg'I*[M$,m--ArJ]UN?-N3ZQF9dr+p/hhH$S3<lqHc)hk=nbL*m3EPenMRkjLQ6]f%]pdt5618t_^$5BbTJqkrQI#"+QMXrN%H@j>9.[UrB+Zjsl%;9h%U)a"&#Xl##L6Ap;1kFh<Cg(5U</T$SKRj85)!s_DMiTE[I0Qk%&2KV.'VSD-/kI\b5u)1X7"M1oN(-U'EYHF4!d]Q]`H[&4;!CYu*aqVN;YhCt;=Alu*/O%PJK4<7SmE\[l)AO5_^E#-5GCeu+q?f:%0,1i/:4mT99#&:Lk8)1/eY?,l[ZTrQ*bq2ejH1tK(;R.Ji[JEU$:Dj(7LIu3K<_6d/6K7?*hUg.9NJ^E-g6O3cn`6;YXQVr4r31*%I$!8jUIB!9L>!/glSUl)j".NDk2nMugoLZE9T!dM<*-koWdaIPnfpc<'&I4T8kKgsb9Q;+3CSc`D<?b/grZ3u%<6D><A3n\f[MSA%_7GdT:T;/Uc0-Fr)MqRa`O-[RHq20t[_LhGpVjH21Wu4!`Sn[r5O&I[39WdpO9B,Wb#=KP5q!&qO$fZ^YaYDW5$1@gcoRQ(70eP.%-nGT</L!ZsKm9_n_mps0SE>1Xh&ei;YnUm*(:qHil^AW<JoC1qdMITSVmlFhN@4iQ[jU<(P`lUDDT;M.,b-6q`<UICI3Vb#D"K;:%2G:?131K8#RWa$9c>[-89+XQoO_]=ui69q,r>Hbo5g%Vg:RQ)t75KQL2_fB-:X;qbVJ2!h_6>=VUX7rcS'>`Pf_oA12GJ9m6R56l%B]hG4g#LS<m`p-h6c\8MWAF;b5L"Z6hVaTq(=PBuj(/,(luQ>pUC5^8gSE.o5;8cps,:Zdah>dYT/@pn])8muK.=e!T:K3sf00*u%WlPBkr!,"TI26=R5F8b-*WFa63T]5g7to%EgAUuKFO?k&]Z*_FZp`4[4Ge-Y]DHRj^^'2oc]b052u`fP6'^m,:RF+E(m*h#a)M2F%=tomQWJCmlT46n\h>KpJ2&b?NL<qg!_qUfh*_]IMIo=UpBj=P:621*5/D:dp.KX/b8'f7FDS5p-H5=Ia`Vu<j#%aA".uWW,%8=J6%<0Ed;@<Xqa0;XB;5H1Q`48c)?6&d<CalGT]LHkIKXJ_(@pDkVImLFa3:%c9-^E5VAgiiDc@oS=&XK6=6YquB.)W>A)!g!Jt'M89%%H'/m>`nq;`;W]8%qm3;<h;Q+0l+4Vo:L^1?J,d=6D;N7A]@QSLXJk*.cP,23W':&W21Me*nWVa2D8#nIN7?,C<#5@KPb^7MR]g.A%B\)l<@191b5[<c/(b%3WCGJkP.*q6a:Kb"n%1bR9V*&1,e#1V-_hjf4RqMZte-V<t:SF8j+Il[SIH_OiUCN@(<65W7UiKc^]%*=l%PFa(r4bKK>F5Jco:Ll>=E3r/m*T"'Ro+B&>M1kBEglHIIFSTM0SB_"D<B;FV-j8CghB!ZpI8pa_.QL7pn!4s&p?i8JY(Vo`:T`Y4%$Q[LE[2n;i;#^@;i>Y#+)fV:"jcQ5?f$cmR)Y@oLXd-RWTFS/(YAkTi"LQ$K'7A32e2*.;IbGUT381eIlh*-mn+BtgPGp5!YI!:K%HpChL#Np_;g8_]Z%%ViQj@5)8>DUDrBrXa=R,]rX!4KUR/Wo@*B(9OMFYeYL4H"e8g`9i=MiGR.*H6ln"sEYFq*"jPh5P]tX>4ub%i`8r-?S(4tG"(^5]-kFY:MNI_N^4[4$`MjTAe69VFK?.":_Fjo=6:",YN-b\nkdHR.3hh6I"&N'Q+7"BIh4b6Q5r&c,C-QG9VR0N%@kjkKT^O.G^SKP;nKaEX:j4CLDT`Vr^(oC<^20Y6oL^"h%ZR$Nlm-3l*FM]5I$P-FoN\OsGE<BLaRNc;ma/3K6dkRlS[WOU;6^k@%'o!4SV;U,1642I(%Of`FB@U?[!Ff4qn#B"6WHq-M-gdS/5u.@OgS66r72Vg@oUG8j>mO_565Pc-Qls^d.qsbCM<!Qr?M8C*S=R(8%?Hon6YJ<\lCHM?;bi&"ig"aZ)h#lbS=QrNKna6dh52EUN0>RFr@rGP)Ce[BGP\e'IUJ5dr[;hVj!=tJugqlj,#X\WQNY';K.iRP6%]qi)>gO>SK%:jXNC&s&E&D`4GUYVgVg#@9NljNq.PB],;,8^tVM,.A3JcV@j`C:`]OHM]KpZP,F>XCu]-D]ZFXWu;9:XuS8IP']H%IOc7b7,61sb6$q+p4^5?auLJOb25Q\OSh%Z:G]CVpL0be!m<kF=lQS^mo7ujLkGl+X./1gjh@@EXKiQK3=ra:E8h6j(J&)_liNr8%;cJol@@1`LAdR(O2:@7RCaAQ2;Ic^d9X)!&F-@mK+O;RQ2DC(!k==_48]e`6UT"9VH`8PL%N@eKS^b8!DN8etH7*::O`tPGYgkko%ToapkNh#eY,0)3,S=Cd?*QfVC_(LVN7I:@h87SWcNc8<hH?.8oS;P$HY;j(YL0",lZUAO$3!VZ+OM91B[OZe[3'CY8rT*=-dY-4!%h.?fC-_]th,f96`L;C_XA3o++adEaWW"PP5Sij2Ue_3/t5"emYMMY&(G\38c6V7f_?;P*K8h(k,8J5<$Udi%uWN_497YmY5W*hE<%<)$gAdhO$L0PAmFD87;$1p^dse``=W#>:"&)9Jet?F(BWn.>kK8XCWEqifJk318R]7]1%s\.5h+NYY8[YeglIP*I<'p*kV6oj#mW%RdQjI438'ki`+=8'WEEnKJ[jY.R8fT"iV7_OP'@VZ4Qp`jH[)>=J3n"HEnWtf7"qGnTs>tCNQ*mlk51L,$F8(^C-8.?UA+/n58XC%M/X"dSU7jRB429*%!!gt4O#W^&oC#fIPIEniqfT,21[G]3P8'`P#t:*3[PYY!Kh@'XYjR1-nLIM\o22c.-e%5['KU/<[qebo*pN:%V+Z2lK&?/PC/iO,6W7F&CT@anG?NJV`0\p4[B)3NaM'_Yi`6i8=[8_OCm_PRXf2SDb0,Rm_+t6^hI2Qop&/38I\B:WD&%%PbS!LE%Kd0FfG6s6$f#=<bUu_&Pk[`X5:R(oO!1I'6_.u=h>salfC(V)s01UAb6"KKG]b'1D=-)+PQ&Q>KDjXfG_P)>n\:$u;QMDFFE%qE;%FHZqc$^!KSbk..$OdSAce9=p2R69O-SiD*0@ZT;k2<if?8CJ\u.lBTiQ%<t]9.6(2lI185%56.QP5<+-P6cd!U9Xd_&\S4%9-HPQ%)+i&Xj1"[C%3/fZoTTR:3MJs:Wp]oDZD&dpHi&rT5TH`l&eU3O3(bWQF;i6q;LFZ>+-f^jB8[I9r6'F;0)mY[LEg2TWZ/(m"nm<^%a$i6#n<auOPC\j")4\&/FN.,J`amN6Cr3R![K]pq[9D6%B1XX@-;;5.Xjkf6gRi4+"IB<MF:B2_`H_+\=Kc]cWD,9ZrS9;6]8#"M%N#&B)ZY61Lr9QotH&999$W/N:U%f!,Np:<Y-IA=JE\^rF0YiPm]V#Q;UrWH_!b7>[V-ICBJ`2d7#f4mNi\C_UQ(%=r!HqMDpnSLX%_!gqQD`[@MH(8K>+:JhT+(u2iLr=L`&-`tm,UEX.E0;`:C=[m)SltIn3/8.mi$-K@Em'f(@"@agXr`3%8/5KcF[7`!+Ci$YXVBrR%8gc$.gKa,YQe>tflYt=VPO&RN*&]'taddXrHY!aS8A,-=2'3:H?l"P.h7t9?_^0$R6H!9qH^[Mr*)^#lD[p&lc/iQ/_Bm;-=!gPU%]b!#bd0eg'.XJb$/`,9RAJ'Th:=l6Y'SPFr&U,>!`&`,f"N(>3m3AqW1QVSFa[ogW?N>)[99$]J^m1L(&,Y>>XQpYQgpp$?!+R\h%A.0($?jDOm*g)_L#ZYc*h4!+jBMcGjJ6!h2[.4aH"NPenjIL^6)I,uhal,@[Ase\K@;u#@40;LMjD"h"q*9lM)2r#B>Z+T`:Luqa%Ccs8">4ohLLn%;\ZZ;'[%7]qY#_kEL[L^XB#1I$b?h/S$ha3AsW1Rj97uD)q2KgShnm"'*!,XPP+dVs:r@g`R;OXQ__"o;87pl6P%gW#c7dM(P+Ouf7+m0@6qe,#Jle(34/Y3(">6!R/<<ic.>O)B_^bqWf&m>m1%2IcS_0-jctM9+8XMbMP;/24Uk?o%J?YpqWqV+=?k%`DaMc8booIpeiA?07_-?8Eukje$p)`*E7=4b@i"_RGX34O_-eSMV+M*M?F\L27;_G8@*JJeQ\.Ed]Z+)=ODJXAt^q(i0`Rg5-rq(%IP9,#^*#h>q-G>h_p>T)\JNAE!L[uC(WhX%\/7f`rMDV.7P^?9N20Nl+`L`[C,BC!VV3[mEfteeh%9DQX[q<:<:s^r?E6+>7`'-h%)&]t%#m;[Di[e0X8PZ-sgl)BM)8@L7,@Q;q/5uLV1s,/@X^@$afS]Ul/P))(b6o^r![N=f32u$?pgU$j*;FBXqSc!#OotmIMilr)%$p:=O!)EG!5(VRKjQ%)[<)aQO\==f0E\3Gai\TE$Y1Fk+UdSPM>,4?N7B]-`*V8qsd2XaGZ2b"f#*o%%B7)2O9N-B""dgW<`-#"k%ibZD.l,aZ1%5qY*-W_;VDSfjY\7f'q'/&!>g5D)F/pEm-cjpClehSqjetXBEH,+sWFabsim0`n\j`Q,,:^[,(^hG\LKldD>OA$e0%;(0<M&`%:dKLh5lYJHtCKS'<IF$er9\r:@+0U5RE_CcB0/>^.KZP#UPc4kS"=f48k;dbXeY'M8q'`_3U!m&A/6u!#a%OsMJO=MFf%GYJhK#/[:2']Je6RYlN.!^h\S:@mg?nK;9YVg3HA&G%e*BqCHbL0VeKl@"Y\Ka,FGBq?\H/P0Z0Om%(B]`P;raVcNMHk/1"6^$XN%G-Il.:QjoZmOb/WUb%@o/Y]p=YTepq-TuX5AY'Mte+YV9#(9@PP1p.E#2b\Jje>6rT3@E1K2YS<9YK@%j$_5C;h\:BcLafd=a8Y7%VIt!sPo35OSnVF:(W7bmqrfKG_SW:VqEp@_M'(_>c]H^=-i"\DH%nl9+\A6O#EC-kQ[0kmU%<T0K4u@'&/9$S!G,BR4H#&?):#IH%\O]>"W]e6\Ah58,Vl^\j`ILe]I#JGE=<GU$4c@]6\Np'D6o)?f*QUXmYV[ul6/;Vpr/nPi5^XiS:h3LbqBa8#6n'In4'S`eM*?W'%J5f.LM!W<in=i3\.^:]S7j9MsKdRYtgBGIL=:dsLHW2B@M\P.EaGM&MJR^D*/9ZmIajKo]!&\PqE7/fT%;230T1F5/Jg2%a&D8!n%M6jiBCMDuK9<G>">nq@r[a<uX@%\](Z-c1d1^Z*tnn's:M(YHWLo04r?l9>2Dn0c:0^L'1\fok^)haP)`u4@C;]o_09M.lnG4DkN%^'?Qd\$a(H(%NGJ]E=(W66T*]9uSC?3ca4rI#K&,Pd.uQN&B987[/NE[AJ<\%H')!]krXGT.kb84GBOHZRNrd2\mK&J#?hX1e(&O%]eXCSaop.aYk2N:*>g>Ik^X65R++^$"'hcP>>EVn!O0#UF-S1r!$l:5.<GPXj=mTTSM'f7<0*E)dEt=/O&LoU3l#$LC7f2'!*F?7%pG9N1_1?#f>BA]6TQk^fS*e[)K-Ak.6`eX46)6*reY`*]LCSh\<uL%fO=AEhj>"b^nN^260TD"5XGq&M")0n@h)*U+*1;J4^6Abm%82:p6a@hg^+\m2Cd/uFm20(B)UZt]_ZBR:XTNlO(^gN"O#=/&$.VQDXV@j.hW^u.E"t3kI1]dt#_#kgcX!]g(WV7$DiSn:<.2CR\%]iB=!a)OGs%k)Nb,=CmLs'OBEXP/hJfmQ0a_j_oBK1`d41Uj%\,nN2#"qmr(#blo%_2Cu!R7QQ1F]PiXD*Rd5m%/X=Z-LU;]2m;r%!*FHnCb[1'63$5;rcZRJlRf3=*E>R!0A#"9EqC1U_BP#u!LI)5Hh\'(]:^Jm\!AL<g"N^1%(t-dWP+`&1enCB\rKYS4u36Q)IqV$%NN(9\3mN"Mab\$SP*O_F00!K,5()U[d5+=TAPsM1L*DhUr(LKh\DsATI?7le2Q10CqZjECEO%?LQK>f8VtQ=U[Uo+[OXk3#CZf?u%f^+"$iOe]D>/-RT#B44\XaQAsk@OD,gX"Te*Y-t\b[.2dW#XB1Q9tg(--D':LWU4N]'3$OJmC83.E<GC#0WWZgk"u-rY/1H`otjA%Eo="^%t=qVB>]E7nu$HJ3.g*bWKQbK/6VaH#h7q`#l.C/P=$.1$6$Hhaig/o+J@P51<Z.RS>IoWJA:h>WJ_X;3%_(R;lWOJ'F`ga%;A\CgJV5iubFA&8W?<=r.@:/d-g=?.X]jSGKD:p_nYWrEkB7iaRt;NmC`nBi"m]W$6'jY:Qpe))O>l:blY?e0pKWs+S+9[oG+BUM%WppX[@m<l0(9lob9gLkY1D&CWi$-Dpo1B?-HJC,59&ra`\D4YI]ICrjS)+j<n(i)TgaSVD=<$3oiD^7<+LtG%FG;m=bG;me5j.7a%ApsZs7`g@jI[6$On+Zuf\5!#Le&!^1/h=)geUgT&jZ6Q=IZc:,9'Oa_a=Y)QEo]!VRbFIF<Ju[_W[RSm\@XA]CpkmCl&-`#:]f(W%?*JaI#,gPHaZ\ks.SQd2EF/]]J?"@Fpa=JDFHre)?]s"g19:u.U-".8ntDb>>4lE,Mg@p'?DdL@0$@1KIa"d@e`lC^g/V[BlBeUi%beC\R?Lb%iAX@1!Jl`]S^V(GA=7mgAW,66.$9/SL5mq"!%+f=h]b(_n=:C[Idc+7Q(5"NBTN1+?FLr%iPFhAiRoT-0Ng$+"$p)Qq%P#QSGDNh)p@E^FE2b$]qQUHsd5*Js2cmNu`1C=3*[U6K@!7Q?#)bHYnWd982cArU;l?NVRh.B\f9XXG7[q&K%7pmc^@T@g_XuJDK%+.d'I/DK-!QIeXlm4`*Nqa@(q[m!74DLFjIWb@!+\7SW=Y)a_h.9KTtSU!dc]jlK"0Q+h/HDY]2P?%9L5?0YC.Rs1S;90".(\;V6%;+)d4<IT'rq_hSWlQhBgouj_WD2;7=#&6N<!`Vc6chc=iI(%hXUO;e*Pfi.T@Y3AKIj8=f$6OMb9Gs-N@P6QW1jdqVr`(j5^5mV*%ajc7-9Z+?3jn#Z-%3>:<lYFhX1YT;`+9X(QG3KC#HOQF+GIOI!bpCKM_s/9F"6;I0;`_m&.D7Fk@nX+4(0)[_69]*WRh-2@DpuNe%a>Rn<r?MDPK4-jLBOt=:kDC;2L_OM%0)5`<i-OW$&cH)F$q;!TRlU*r^BM<mE8eJUID;i5hCe8X`G.oRpY8rc$IJ6bZH4cUOAYGt%aXmsd$*n?D>8frqh'SuRdOcm$C?P;%[EC-2gjm)_Dp'`g!k>ABV1CGMX&g3kDp'Gt5BFsm#\Q!_59u@IRW!0PC8f'eM[okLUKd5K%UbeIQnraLW,5Z8+?d<>FcWtqG*5XEP^1c*\O&;FpS.,;NjCcae/'_g'C`C^$k):-4^!Tq+L\L3*7UmIX!A/4HesZsujc"ZgfG7>/%2\o>3;_D4_qpsI1O'lb^pKW0bepO?kGHog1]KD9/M9u`tT+]c[]D\55$L%j<<Bo_%C2JCVJN2.c>BPV4T.N9n#9_VpOick.-U%BZ%Gi,bh]n^89Xi><7U>^lEB)3XVGK!M&1"`Nk'B=1+g%'2<R+Lq8bfW(aMon`(eaISR:A5bDBf_W-(2%\!#D"g,9Su^(m^43eQ,QN6%g:dHd-c)$/WldjU5-&i4G1t;.A>h/WLG[NX(:c81W;#+i8n"[m.)%<gH4Pgp1t9.4c"X,/GI0HYA4+$dPHu1m(c%(Y)!Y*6LAI'e%Tq6cKBrH4X>8BRHN=:IA=m@"FT4bR]q^*>h=R($0do+5WkOGq/X%\g?,hlHRFc>I*4Y68dn7=8=3p,?14d;9/C=TW>0mVAJ/bP/"%QtN\Rq\Ij`b>JT"r8s4\=m@"<fSa>K:?;@u>3`XJMeZEsYK_)Ad,/Jc'6u7;V2hCoQD^R>Ft3'p/9UZ`=%aPsQ5_q;oc@L&`Djls%`dM0N#ZWp--W?SBE'I'>cBT0(/G1lk@B"aEoQSm6/M]qbmMLu2W]R)Zk_W_hI$Q?IES^L``[q6R(f=o&I[8f`[P[5)hcjHE7%:s[%&qsJoLr)Dtg<ZoM$n4JZRn"0)?oPO:UF6P4!jo.#'P:SS/1?&V0SnH)b95"/D:Tb/2g2]t7-OIn#VuJGh5l9,`>S0NSjcG%$&h-T%[(/I^YfBb!XR1t_N'dbj,m6#S![*J$&X]gnMGHWJ!$JVmB7(#A1%Pkgn'lbU`.JeV!JX99f-1DTOE"t^4a-l3QjB3*QmGlYR$?,)%YqO)TMl_S>Q7P?V@h2!O684L_?*Aoh+Ht,,685(@mC(IXKc%ic.3heHL_-Th?87h66knl'KYbk\TYC'Y!NrZU+Vt>k#-p(&%Pto+%VEKPc0@=PXkMmKB%n7+BR-(os@'Jp483.+LP%6[A;&HB7H'(_N/gms-!P"(o&n)V.Gp3T]0FU0uk4*%#Af-._UG+-!6'r56l##b1%c9:+a40LcXTe/gI5o+a(r65(=T0EBss+@Ct"3Ya%Rr*H&PKJ*->Z+Gpg<ZN!m9^Ml6(`LrrNiR`@Qh8"l>A+nFYTg8EU*4IVgQRQ%l:#I!bB$8?b/8Vhpn@pg8WGlD4>qcKOVr'u5YH2G8C#:J1-d-7-Dsq8Z6t/YE+SAPgXY'_3\:<+ngW]B^7ItI%6/*&bKnrqP%AM8%TaAgoil#\pX%9C?qFU$,GXtX!l@u5_B<3JM!suQgdHts#67$nYGC*Bp:q8tWYUCqu>0TDm]%p)&,k5`sR)rA9a+iWDD0!Wi;f"tJ%^!gID^:qjgq'"/<^!,<G?M.K>BDC)W2pG$2D8rJ!mq0<SIbf3f(Ab76*TBEtgLZYTNh;IjA$)3X\QQ$i4sda)n(h@M7EWCoHKGJ"%Ku('#R/FD=k3dhDaI4N<kMZs\i$fggcUP]K6M@^foH^u)0Tq4J`<(2q*_/8Ud4%()p@^8`KT*Gd/B0<fi56UGK2Y+f`c/9g27Zs)%/.@+>E'=C\^aU?\Jl@PUpl6%J0AHsC)kE./]H%ISLC'`p8sFTmMt*%uV9g``<:$[Z+EQCe'OZqV-/Dm>@"PlpXCUEVYhAJ2E(]O5%Fsn2s1.<lC9Zp1ocLZFM3=B@Y7uXY+,p>)k)g-Gl1c-Kpb-2&kb#NU<g<%bL%>#8MO'o7EHDI^\2ogm!+k0$g<(2?B#b$nZaL@Ya%1f0>\8"(Zr.3B0g;a*V+A-0u`=%7&g[bZ'JBTZp6F@pFbdfog".Cngp*.J2S,s1:OU3qhSN%UJ:rR+bd8$pLuPl/C/B\ifgjQPHe%mQ2t5i<0L_$Qo=%AV(J`P*8Iq%dLf8G=39`"?7\<RqXf3h,3Kc)E&&>S796t'5g2V3fdDd$RlOP7qMZN7r$oN#I:R]5j>r=+%7Ka%\DI6W[UP/?lNbfug.QATBWjS#,b\k$"Ju2)_Tg:j#ZRminTN90[ccPUIs6EuI[1_Cd!U$MKtb$onnA:<3@>-7S'q+aQd\$B?ehJ1%l$JU#UWneeL:?d#gH!6\R5:N&<\nMi(8'hJ,pgj2i%r'+C<#)]KVlXt!HHqV&,3dORW`0E]C1<@mEPt9$@P^e3),eo3PlO'r)l(<%]Yq9I23C5^%O1X+g%2fPI4f<)b;:OLhMQ8:AE3k_oiU9fWMc[TMgRC;WZ`=Z?'rcNIn>l]'-V76#@:Goo"KN49VlNVZ0cET`(`G*%k$X'6guOSZpCcI42<&4Lft#GQ=2refSOW%Vn)\1&[eVgtAm='Vn;=qt.oC0sdqt+l43C8a\SK0o8Y^O#8&i&!&lHa1(cTL9D'd3H%0dQsM`4.hup\"l5@t"mtDZmVo'KXD8FeT\7ee.nM%!*5Q_q^^(X+\#Tbc%^&_q\dSg`4(-Z/:\jU?4m.Jd,nB\Okk+ZkDLJ-(s).%U3&Et0mZ:!aZ%j.WFYLmPu/a:e+f/o0+kL<`0RnM%jbF7m<*?0i=."_8-T;/#@TC5XVG;tga"d_^RH9ek8N5]$$2;Y1H%s_\]Jt3%L-*<.*9"-D)<U'D7,Zg.DU+P7haYqqP:Z@q0@TocK.AGpIhR%SWdn>=0ccuP+ph8Ys"/cCO_:Ns8Whi;0$:jVe)QS`Q(a-6<PQ_(%-2FBR`htP%5cL;M0>mP4Za)aFhGtDid,8!TqIH2;VDTt7kS*-:<Et)?,GiB,Z2fGF;ThpHeeCN<]eH+G,Qg.>R4t<0TST;uITHri%6(lW"*\#RfXHdrB0"jpPffD^>'kF%bM4c^CSj[64;/8_6U'_dGL?oc9StrNIN$0>V#F+H*=,BA=5bHkk!pcjuDS1d/6R'<u$sQ*k%Z:8]PM\>E79Os]iYM[2BW1CPZ8e=:(8G::3$?F.W=nJ"GCWKJ9+&QfE1?hfN@[6$(SZ?j0.+!@)Q#*-Zo6lC;_go[Q[E@BY_q/Z!%B&c9T\cOE7,J4uuU\"lrR`"2R8*DZEb7W-4!I&"gR:$WSCJIJ2?E]c$_/%<aIatL'#(5V@".CaZe]34Ac1Me0478T^B\K3a%$1>W%e`BqVL.\tmf1"gEE*:-i'U,G24JKq/[F6RA6F9-ae*msE&0j:)Ta2@r'AB%%,@B!F6FWP>LdE',pKd)5GGDI0-l[UeG=es3+qpJ%%ak<EBKTOAi$WAc)b%qf6E?'+U@.*91m^%"RKs*KB;/ka"L>_jXK8/Qu^?mg0jD%V]._#;'o%m-3X#[R^-dHk&dU%^EFf`Y_T^m]m%.lPGO1B#uLWcn@mkJ;:O-<q-##rL-qjD.3(\/CfsQ*YA$?Ll^Y.SpK@90t3^j4C)!MUNr7HEU92K,MFY7,)S^YV@+))J/sgU:lo1%I19>G8g`2p.LE'1-$0!Q&!Celpbgs4`KC7<aIJpe!4Flc/.ki7f_S>JD7h^j[&/+lSbB@$r47age;LTD?'2;l)G&.Q-;QQm+B&bW%Et1YbPnC!>[40#FRQN[=Orht8Et2Puap$t!iG6M.C[(=GQcdlO76]=%kVo2Vk,KsnB3i2?kIiW#[7!N$AeM?T8!L(e3T^[gR2*J;%G9#&nSqJ.l%SY&sJoM[[,L`0X2ttC3oh#o/;M;52$b@VAH9"u(91jHB3Lc%8J!oj$O+/'&efTCB*g63&I\Uo'+35q8=Sj@Hm[`qB%:U9W]jIKX(l0tZ88Y4/[]1On<SBb.T50+'mS,s?5:>(NMj5)pSOh]$o3a_=R,\)a:W[5u`ARK:H6YHDHqFUj2/GgP(kPeY'XM.HK%\Y&"49Z=OEe@@fDTa<!kCu.d,mQlbqWq2CTPI&F0`LNtiDn:g-l#fF=me?oiZK<Vn1u&E2d[d^k7D8$fp+H04&;\(Q<G/1>\V`6N%<-C'[V!<mI-R!;Z;N-h[)=L4@m\/amX1%UZMX$.BR"u#NF`,[TJuLf?)23"&4L]YPN(*2AZ:l7"o%[W)h4lCE/IN/Vnr/7,@8E#M%B1SaJ;p'0H`8iLQ.*o#gC.NX4qmH_@JQgS2&:n#6?U]6XpKHLK4ED4V?F4@*e/i=ijGTHr/1Kj?#!MSbq)P*Vq"o45?-HVPT6nq%%Y,c`8<N/0'[5`Rae7Yk^4phpRQCX]\m/;81p/6=YJ$]cRqRg@4L#t]3727K3*61ZLPMPS)WUqCL/Q/rLNtTT6;4j!NF]d2A<>a8(%<C]i"i.=$4aekT#]2tOEl!JefSl>,\73Rg(g1CK<6Vk\EKT<@F=Ysig$V-hT0MbUtcFt%L),+(S"NON`7Bo5k3gM9Rq-":)$F<0D%QH]6s5&Y@pB:Pqb4;k\7RWJ7-X$\pZ^'(=nEI@Rb:4OCeP#ZZeR(E4C+f\U4lcRmX>?iVdXt7bTo+7lXZTeL.9;^i,mqKa.nn5Lc%WaAa%I?5a&b\BC"ot=(b$K[(I_9BlCaL&/o$'uZmZ+D7i"^1&[%Qii_5]YXD:W/J$P*`-I%^JphU"q<)!K>dr[fo2);!,BPAqDQJ%BR0>#\JW2J5>.:G))HT/0P1\5%b\"c!<:l7!Fiq1Bg.NAM]m8);3EX>U>9&`F9M0BO3,Vc.'cO[TWC6"XN:>0K_$DO6m<Y(c+;XS%*J<:"_lrDmC#VM0M&%(cYs6YkL]lB>JDdK4Tgr-Z1KY]lPZBgLYo$]0q$6B]*=s*DTc$c?FJ2\]2%l(i5$q?bg^0jCknrD&YYRl5%Ti_V0JVu.FTX4>EHHu`8]qRDWa5G)GZ8JqAOu[)pl:!8&bp6AQNkpi?m#EqXm'N1mnhE*S]#JtAn6AGoDZ;&`dE&RM=6PI57&4=K%&@J]`N$?>bN/()3TnITMguHR/9g\k"R?#*1%_KLJD5&8[-^c;j>Q3h/$cO;Mn&JGEUcl-i,.r<NNeVMaj4ll3(C9)B3$3eM7<a;i%OG0QJARA7LOEF"#h_'Xd]Z;WHM2VkO.pRiq(5fLTlmWX73-r(pWSUaJ>B&n?7Ks[G^=TF\fgQg<M'>ncZSF;W.l3]'im?#1E3V2S%*YOZj<fqTp\Pu/f$/D6B7n/6c4jTCU+^P9L(1$.FGYf_tY]&U2O,OKb(Rt(1d=mb;F?VH8plXra"H+jrK57]a_ZGJRA3u#7qpSUE%H0\.+(8'H,f]0=O13hg6L''8dh6F!89l0HNQ5.EdHNXluoo&^KPpPa/3Ci\$5EHV3Y>V=q-7d+2C;D:N1<8"[T4H,900MoP^%Sc&%LRfsS,a=H0r3rNU.FY6>/b676YM.5_0Od8iOtl0J96g:&ThVr.pMpIn;Gq((8gZ7JD6&drC]M!2Hmg9s+U(1]RDUjXWKbVhg&@t8%9I+G`=d5(0ibbBRbjO\?;+bF:Rq_.5ZU[D<[#N`?)f"U_'C(0$BO>m"&iXrrGqH-HFHVJCBknjF.DU_iN><Y-"S?6uPb_'[A4urQ%Cpa(F-E-sk8bbWMa_!mR!%Kn$fh;g:3lu3T5?unHL*;K!XHUlrX^k`1=o`3fnY-U_e0a2%g+UQ)22Y!]7p+;B8ZEn4Ot)YfJk80s%`$Hc7L-\ok$/Vl0N_i<O%\,$rNT;D,MWIZ+5f.Y)#""RX$\ODLTp!V8*Et!".(OS/V+Q>j4IqonPls3i!Qu?1#puKQ^!U;Y=85%W%P`XVE=a-R(bgW00<(aAARQ[fQ8sWj6,ul:g">"g]8t@RfhTQ!.V$)djNHjH$Zg$C=D.>IkC)<EDMr^lf$.d0p&k"`K@4d4'_V%\u%f%:6dk>b%t_.F:UH_HRtXCr];m7n6BZ8Mf:pn"bQc;?D2[-R9*KLUR$&s/#N8C5%HYbZ$XA-H6G$'mkFDXo8sD1t=I)W$.S$&)nr%-HAi7j<Z5nf?p0&.jS-UD<<UfF"/HjSuc,V5&eJAB8$K#g@XV_N<D=M\?/+C60C][_b_SoAtdj^BI'pR+K/s!pr6iBKM',/2-]EU%JH8B09#Ap2XcuG0a_]opfBYo9;jL$2P>O>>P''6J9(M'h>:KsS:W?BH8U_=)bc4YhU"IL:&YIK-'kB%N<S8*uFs_;CD9SchjN!#[%<;o&E\*8qs&W=jc2.ZYZ?B"9s,hK6*O]YrUhER):DNm>Vq(WC_hKrm)m(94)AG%<Q4),ifAP!9e;edBb)79uG%+@f8"2D=\7^2Re%@['\5\A:IMmt#9[jTCZ.SZR9)G3r%?U%31T9Md5](NDi1)pi;=1#]ElpDd-<5Ujr%]Lcjh,7O+l4s7Il!?:U09tQh$%rfOE,@kL1%O?'#[g'8l)7CD]+&M)=:7k5ZMQAPlXo1cTI]2Z@s?>#'$2`";D;YNH*AS?hd!JqgIeg`K^GL8l:Gio?g6!XXtP^TMPR"[qXOm6ou%qXut9m\.a,W^m".<(o_K`<-1BIo8E(=:u2t`Ihr6Z_N)/#9)e3[l"]!J/7Vs5lbn:\Hil[Y)1=U?Vij-E48a8^^,poG&RjC915nl%8+C2+*F'ho8TN^DjIG'<VcM2ooiAI19YLC>eiL;Xin1ceLEO!bLQ#CA,c70dK'=Hfd%tl(c"u5ir)"N<SIUV\P1V:eF`;Wurj_/#%3^N'P>T\-/=RG$G+*KV?m3#P06k?5>E0l@p*NL2R[T![X::iKCbQjon%_Zk?9)$NP2?9JRG-LL@jQVho&fj*:r(s08.%GY741GdG%q0&$OT@,eT^p=n5g3O!*L/R$4G<k-p1$]hjam$"0LiS,F6:9rWHuuj'OF'6=)l7at;qSQpkoJRN!_(C\#<Ol8L*c8^4kPi`n$lC:%I-MaM_QKh*J_m*Z^%Tr;oVk%(%Xmte,h3Br"UVEj4a#&n:UPf[:Bhn4Gd@l-WuYQ.YbH=-GNKY2AEtj+d`GgE<q\+XV1+Mk@lNlT%"'MpJ-+VrH=l)7,ci58kD-9#*N*N3G:I_L'FqCSq6TK]89RW3^NQSM-#a+edgp)X`mLNjM"&iBb4>?6+W\&+NF*baKN:pRI'p[j,%Q.Q36^#!DTO"\hr>Dhe7iGVLe/?j.b@Y$\6;OM?iD^QY3<F!mP.$poiV;d`Mia4u3NrZZT<5J.QHi]U$FEICm@/S"PFG[;jQAfW(%HAG$oYL;Q20+08f.LV^0k5A?q*)p#!Z6(1"=t)$ugJ;AtYY?m`;&tG#j1"L]dks:2*.lV[QOLJXr3NS7F>eOa&[oi"a,oR_9P74g%lh8R=H^3u<h&6W6$B2'QZ1uc)MT*1h(0/BV]q&5b`U1Rh5DOIX1)>D4B(;QJBni_\cc`$8g@i^(b#R#P]N`AWi6tk;jgs4>mSu1*%\ht7raP+u'](j_23YnkRCmQlElR8j,/ReGFL6a68jV_um`sdIpdC5>1r94&=UO7V@[4E="2O=eYNrVbTZ52c(gm^&^rj):drT>(^%5h$EL[`V8\&%"CJ4qKofhp8@/B4[#pDp'7Wc["h2#Y8[,GIn$Ml_SEh(=dfJ>1H+?PR/&?[r$UII63M!ej+C^1G(2[9h>U9jM\CU%kLF&Ypu,i(F^@#=^^i)\90KHTn_r>;JKI,s'e`GAY>'hcDY<BX*P_Xn2!YQ$j,^Kr:j'h8I[7_*cCfI*FC^/cd$K(H1m$9+FGl5+%hQ0Ikjt%BU<j"M0Kb6la!3439RYdgT&?89M,'qX0E88a&&X!o-W2Zb+%<$g'g5`>[.NrMGaI4A@d]/HqdTWqb,V;,`CM4PVlcM>`%O\f47R5f\HhoH^OoWIcgk_@MHF,L?ZgrHe)FVMAMbV'Wo<g<t`ldX!2]o5Kc5RAaJ+k"Po^_R[N-Uo7%IS"F0]pD8nX&4'bBlWi/%0ga;TKhjcT2/hu$>13]'6?s)=D':-[()CJ"RQ0?>3Y<_B^XNuY(VXZf\OOe0T)R]R>bX-:4%7"sm@"',BUu[cNWda=7lJVq5dW3F%":\h?l4k_L4<?tDBOThp%Lb!XNpY2A!muUQBprlaL_aXFCIKXTCF4g6[(acY41o>o,Q$6a#"I-UMbO(Dh`e(r,a(>!%)3t,r?]ou%;)\IRF+*6;N__E3p-I8G=4Z^.Ua`TB*X7T$btYBbX?p1<aQHNPD(A%Rf?`Lf\8J4TI?`";*E`&bQ=X"$"eT@On+74d5u_$nqNK,-%[>u&c[M^Yl>mGDFG"BFfmd$Beg0BcZ--gmdqme`hW(H777<U[=^9u%O/$a2$[Vq^j[EYNuIJ6mjScG.<&T>-oX>Q2)8Qf:BOOs6!%V);+j=_,=V;t!a_QE4?#5?3gfNu$>r%!)`LT11c>18,Z'A]Mq)5\ofc/T-Yn-+X\YIq*.4#Xeh#52e&s15Kht]-CkR8ou9prBq<4%_$pRWWnqn:h2&M/Y6f:q\i%mVe)3^"Vtj8)5Z,(`'&8*^*]&uN.cA[GHA]:[]#XuW19f/!7Sk1_LcL&Dp<EOPYYhkCY$D?MPbOHd%7SIXU^W=&T2ZXlfD-V%\NE_?<i0f+iO/*H60c3I$\38P6/F#N<(_Vg3S,IS<27lODiu52r\a+[`2%lj\Q@s4:3,RJEU?t`Bi#5U`%E/j@[ECrQ&,D7J4#6>*9iu6=K^0+_eY#4Y'B,7W^VI,W]:LGEEcSsZM?mB7==sj?T&R>;">#/NN_ulAZ!#^?I0U0MEJoX4h,I"4_%id)df@AQL@[qa$QgJ=Hq>"_Hj`TM)O,?-`Yrf;\scph+bKWTi(G!6%Q65rpmTT*&3iHbPk)r^IZh$X7#KXGl7-h9cQM/7\rS\#)(%&c%N5Q/"Q/nuCB[?mi/j-><i(Jq8n8hcIINa@;^tA6gKl,O?G?G-sRn9$s2a)g2n*7>_M<+1oSOp3tGnc)Knp2T"/WB1F'`FTP?B%=!P!_o>Q-C0T.mtqcjbnST&c(<SY$!mf;#HXEW]hSf5[>=;T"$SQ!U!rH.l[42[,^8;q@a7CgUoVG7+q\DAi0b"glCD@"o$>M:g.%i!J'BgE$Hd=E?qil4!)P6t@Ni#1kF97`\&XJi2@"a@:hk3'qrpO:geW:>JEN,CHPi=*SDq">gNuQ,lE$D$#nfY8_X"iu9e[&S"7b%5B:Z4GrG<q]mW,]$F18=/_1_WYhb>Tl-N^#Qd9-sZ()U&.2=+NBrXdD&4l)e1Z]U,jL$p?8P$?FRPSc"GaOfU-1h+^W=4\]Wq(*O%4FZQZ-"l0R662cfgU?7>8XQ1+ZZQi)qm_S7fe'`I+7`mC-=lus0Zo`b;iXLA[Q#5d!$/VhjAhl<jPU"fo+J4(W)qVHbs*pERsP5k%#K!I39qqq_E<:g9'(q).(subDl*]:3+seaJHM!`+!Pu#SD[WRh*&;9X*^2;T$&nSB(n[YGT^V6VJ6<2hN_^4cA:,JmC15EC!gZ?W%]JhbpVm>-jD4[)?U^*_`O*6lpjZ#/$Q#>(PPQC02g]B0qXA.]/C)GUTM!rf!SCX,PDT=<_ort#e2g)p#Z3mX=,uQsFlDK/*kO@o`%"5<gi6lAB3K_Pn(e'LD0J`fkD"`psH;SS8s\;]>@/GkPO11cSU>N_<([3#QAjH)[6VA9%PDBLXuXtI#Y;'#:3A+\U405'"M(bFp%%jf7+dREYlVIf$M,9hR2X@'"5J<5i,$DW'eBS;G^4.3c>t^c^g8f!e]ZX`6?XT&>aG[:?KDc.KnrXgQgGEo72^%2u*U&Nl@uatBC*%*bH@FJd!WM^.p^S;pMPt@W0up=uuo#HYp[3.S2kO^"_FNI%Z6,53Z/:c+(AQ]9Ks>g`\Qp#,ms:,[@$@1Tueb]-R/D`>"L`Q"R)"%R,Zb*I2-56hDoR0ED(Dl7\2^oiOnR/LJ:$@/$srhP_Qnpo>_KPm)Olu^B2sf,BS1dQuiN)60!j9!#(3jE^pD2Dr/+7C@3P5>X>+[%G)*+._[hT'P[Vk&-0\"8:hAWkiKK#-8m``J-PNC(l,k$&Z6W5]f7\<_KE=_lp$PH1AYd`"(_,aBbd=kX,2/;$?H3W_Jju'f/"H%V%Zn'5k^Mc[P_>W(\UbnSLW#KL-[b%P[Zuc+1?sQ(+$Lt(L'soIn9M!W,,)5_D*?U_%0_=htB@"S:eJ%fjb*<"Z::iVXgm>TMVSWA;%-0+UK7&uCtc(-XW8Fds]H!@R_mM.n,7h;;t%D(=1a2*kHM+`]D.r=m$GYd=/,%3Ubj=eMa4sUg3ap>-u*'Ih=i@oSA&*=Uc26/0G%4HOiBo+=J'3E=Y3c"(/>gj4b+<LA8JB]2Nn?GS+"ecFYUm!+gcGt/\Bb"_4]Q]Y/jr:8)YpBp6U`j(9o[ji>/0Nfq$2TlDbc)*\F%i'K`qCtQh6HDaD`RT'G2O!?ie=&@`fOTJkn\77I!:VtK92IbZgR%Wa^V,<ULJk'@hQ_^^W,*PmF-hZ-EBD;;#2RT2F6*'&\(8_Z_%Sj#ZMWiYVoah>PWf^<bp`bG0*c3J>Cch;T&LV2H>9m*Ipe,)=SDf0&O"Q-34ho"4U;XN)^(&,>PiBKq^n8@3:/@#7gWV<8`O$>Fj%qY[ldE;*p;V(1e#'eVei]6p2qh>J,Us7,IE':mqNB;X/VNEE[dO:Kr&hZ]LMaPW-m@[cPI^@fO%a447*_@crV57N)`eLYkTAgL)i%&0`Vbge(%=#4n^edY9t..o)Z)kD2K"n(rX\n+!i*&0e0hqjN1&-QRC1[QK46_q$acedG(cqYdOb3(WAMmcmA3DYi#a+EdF!7<*;[%U1dprqR>Q4A7:#o6!hDG#T:TU\7Ec1#al;0*\s4Np(R"N%nGRekc3VjA8+fn^F_r!P1U'sRQAql^Y.&B-L9co3t^`ALQ?``TVIgk%[VZ#;O$BNu;u#Ol(E@n@.S0L/+uB3YR'r(I>P\Zri2u7u8c81?1JZ3qj.COj7\u^g2,<_:00^V[(/DIF"b>GqjP^W5!9c"\[etdl%WO@iB)#t\`e*IgFT+H,SR^hH,`2p3(2#W)X<$$hOO51>#9024$T25\dde;cM`1i&1*W:XaYl'/S-9i[=A6P$2]iT-jFi$j4q#NO(%X`"m@o3Du=S%$b4Q;'BM?17Hd%]>Nb/g6n^3)5g8&60..m7]m?@imgL;]_NMB@8>,i@NY>$$[NHRnq^Qcua^T"<C/%QGap0_*qI2%Kifq4?G]]u*enNK&G-`5M<-5*8mme+\dBB`W*N6;;-n9HaU_Gr8l]a2^sH#9MRCO$P,GNVlm]"[mki>;:.O7O0CPhYJ[RVO$*gO&%h[VRg$^sif"9SXp@$!-2NI[%QZJ,d",^G<\L?0f$-RNmer.Gp@gZH[fJSO_4T+J=ScU.C50p=Xg_bZ(dW3C4R!I[@(2B7ELDKqqK%Q_UUGfl!]"A>qqdgYm3PaOfs_B4:,7R7ZS:9IT+Md(]J&e%OQ,8N*m02B2-O<:7soUos4N=+r`.EBL%>9'C+m+bb%G/FdS`HU:_[%6l-Bh+Cde_iJp?"@@ff[`:P`ZM^2<4LJ7@QHWgJ+:\?b=CBGer(C"5MVeW\N@Y0D>]h9:S11`%mFUH7AIJ=-4@_9m=YcLdE<7;K2%.3s)'$Mu:"eX(+[R4oN1<ELVQ0hrm+3l]#rKkMQ4YteYqMs7I_3e]tu'")fJc`(CDK\MqG6Gl!@`,X6_:s\NL8SAs>PT8pCi)gad%bhSB75h2&<N=\A)Q8.!F@`VSUOpQYl%1foc+4OPZ\P+uBJb*T/%u##gG2*BGMM!q,A/%3ALYO8F!2;G)p2[0NISF.;W1;f;hWn0D%"Le-eK]Q*O!`o@i@6k@#"plE0MpBn(.dartGR4q8s6S8Ln6;12dOWMnef`k]HOL"]#oU54M"Bt2&%'?oqGbeq&nof&gNQq6rMD]u%FDd/k25=cb7\qi)%8TPu7n':q><_<&MH&sVhPY3HNCLA!a^g!H6GoA_kEN"5?!=0H!hF%Nd4NeSopcngAU,.I1%/G<<+a:tI\452%OJojX@iAt"DcLCg5Y?2Ii3eSA"3Vk#[?=8Q(Z+=<&I0Qs,qA[JCT'QP7JXpakk"<)U.F<bPf'!dAUkD@lpTRbU]-FePkt7M$pAe&%8NY.\bL>#g&F-+r^Q;M?2g:(l=-4X*pJ=ZCI]`cis-f;Yfel5jO+AS*3=!sa=mm+DQmbI'pQ(-gb!&5f_au)"HB7?4Wl+#fqrfA=%A;5O9%!RX)%ClBs,n^"8o$oRREJjjJmcdI=NJ1kLQ:5ZqqmCNi]!-[2b)XpaBRB:CiIF*\)+&ieTO)9p,uTaX']$##\eQseLT[#a%Og#b/D4]WHr.!E(:p1\l^CA,(=t$h4Vj.CNAsL;*/sP/iJeB2m`E\W-AbA$(*\u]9<Z0%JkItJC`2+c.[oaY`6q4D9X/.::UX@%,%%G^Ei6"uoa(aS2qO2t>^8=lODC+W\FbC`Q;P5><]lE^8`cn+@:9FB._W>;SG*2^mR1?74XrqgI9ftRF.^])`trO[RZm9fk5:Z)34%:Oi3Os1/*SJ,\cKIfK6DrVHCUrR4PlqU9rmq(KM^\)2]7?U'#<rMRF.rTF4PlaNMdqU`L\j6(piqS-D;q=^04J,T7/rq?5mhu<Un%J,@!B]P`SLs7E4=r\+<9VuI:]H><u~>%AI9_PrivateDataEnd